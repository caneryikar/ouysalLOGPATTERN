<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="926d7ff0-b894-453f-9939-7e876393f00e" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Test Case 1" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="8815f3f9-ae29-4487-a605-f7b6c8fe76e8fileName">Create-and-submit-sales-organization-with-user%2C-inventory-and-terminal</con:setting>
    <con:setting id="e22f0d88-7580-4cc2-be7b-4545e0d6248afileName">Test-Case-1</con:setting>
    <con:setting id="926d7ff0-b894-453f-9939-7e876393f00efileName">Test-Case-1</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="datagen" name="DataGen startSerial" id="95e515fc-5e6a-43b1-aa98-cbc1b97667cb">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Number">
        <con:configuration>
          <start>250</start>
          <end>1000</end>
          <step>1</step>
          <pattern>#</pattern>
          <random>true</random>
          <persist>true</persist>
          <current>292.0</current>
        </con:configuration>
        <con:name>stockInQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>true</con:shared>
      </con:property>
      <con:property type="Number">
        <con:configuration>
          <start>1</start>
          <end>100000000</end>
          <step>3</step>
          <pattern>#</pattern>
          <random>true</random>
          <persist>true</persist>
          <current>1.1075838E7</current>
        </con:configuration>
        <con:name>startSerial</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>true</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def stockInQuantity = context.expand( '${DataGen startSerial#stockInQuantity}' ).toInteger();
def startSerial = context.expand( '${DataGen startSerial#startSerial}' ).toInteger();
def stockOutQuantity = context.expand( '${DataGen startSerial#stockOutQuantity}' ).toInteger();

int remainingQuantity = stockInQuantity - stockOutQuantity;
int endSerial = startSerial + stockInQuantity -1;

testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("stockOutQuantity", stockOutQuantity.toString());
testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("stockInQuantity", stockInQuantity.toString());
testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("remainingQuantity", remainingQuantity.toString());
testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("startSerial", startSerial.toString());
testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("endSerial", endSerial.toString());</script>
        </con:configuration>
        <con:name>setQuantityAndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Number">
        <con:configuration>
          <start>1</start>
          <end>250</end>
          <step>2</step>
          <pattern>#</pattern>
          <random>true</random>
          <persist>true</persist>
          <current>70.0</current>
        </con:configuration>
        <con:name>stockOutQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Given properties for the test steps" id="49f6fee4-8c18-413d-99f2-7530f363de56">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>amount</con:name>
          <con:value>100</con:value>
        </con:property>
        <con:property>
          <con:name>currency</con:name>
          <con:value>USD</con:value>
        </con:property>
        <con:property>
          <con:name>roundedAmount</con:name>
          <con:value>101</con:value>
        </con:property>
        <con:property>
          <con:name>notExistBIId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>emptyValue</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>currencyTL</con:name>
          <con:value>TL</con:value>
        </con:property>
        <con:property>
          <con:name>currencyEUR</con:name>
          <con:value>EUR</con:value>
        </con:property>
        <con:property>
          <con:name>notEnoughAmount</con:name>
          <con:value>10000000</con:value>
        </con:property>
        <con:property>
          <con:name>notEnoughRoundedAmount</con:name>
          <con:value>10000000</con:value>
        </con:property>
        <con:property>
          <con:name>biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>stockInQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>productCharacteristicValueType</con:name>
          <con:value>STRING</con:value>
        </con:property>
        <con:property>
          <con:name>stockOutQuantity</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>remainingQuantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>startSerial</con:name>
          <con:value>11075838</con:value>
        </con:property>
        <con:property>
          <con:name>endSerial</con:name>
          <con:value>11076129</con:value>
        </con:property>
        <con:property>
          <con:name>quantityOne</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>quantityZero</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedWithoutRangeProductSpecExtId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedProductSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>NonSerializedProductSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>quantityTwo</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>quantityNegative</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>NonserializedProductId2</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode200</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode400</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode404</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode201</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>errorMessageAddingLockedProduct</con:name>
          <con:value>PRODUCT_WITH_ID_ALREADY_LOCKED_BY_BI_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>stockOutReasonOther</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>stockOutReasonSales</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>stockOutReasonLost</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>validBiId</con:name>
          <con:value>2131</con:value>
        </con:property>
        <con:property>
          <con:name>invalidStockOutReason</con:name>
          <con:value>4</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgWithoutReason</con:name>
          <con:value>STOCKOUT_REASON_TYPE_MUST_BE_GIVEN</con:value>
        </con:property>
        <con:property>
          <con:name>outOfOrgPlaceId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>currentQuantityInOutOfOrgPlaceForNonSerializedProduct</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>totalQuantityInOutOfOrgPlaceForNonSerializedProduct</con:name>
          <con:value>140</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgWithoutBISpec</con:name>
          <con:value>BUSINESS_INTERACTION_CODE_MUST_BE_PROVIDED</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedWithoutRangeProductIdDifferentStatus</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedProductIdDifferentStatus</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>NonSerializedProductIdDifferentStatus</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>placeIdForDifferentProductStatuses</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>statusSellable</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>statusDamaged</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>statusLost</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>statusNonSellable</con:name>
          <con:value>4</con:value>
        </con:property>
        <con:property>
          <con:name>statusSold</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>notEnoughQuantity</con:name>
          <con:value>THERE_IS_NOT_ENOUGH_PRODUCT_WITH_GIVEN_QUANTITY</con:value>
        </con:property>
        <con:property>
          <con:name>errorMessage404</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>withoutItemsError</con:name>
          <con:value>BI_WITHOUT_ITEMS_CANNOT_BE_SUBMITTED</con:value>
        </con:property>
        <con:property>
          <con:name>invalidStateErrorMessage</con:name>
          <con:value>INVALID_STATE_OPERATION</con:value>
        </con:property>
        <con:property>
          <con:name>mainStateClosed</con:name>
          <con:value>Closed</con:value>
        </con:property>
        <con:property>
          <con:name>stateClosed</con:name>
          <con:value>Closed</con:value>
        </con:property>
        <con:property>
          <con:name>userNotInSoError</con:name>
          <con:value>USER_WITH_ID_IS_NOT_IN_SALES_ORGANIZATION_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>biNotFound</con:name>
          <con:value>BI_WITH_ID_NOT_FOUND</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode406</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>httpCode500</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>deserilizationError</con:name>
          <con:value>DESERIALIZATION_ERRROR</con:value>
        </con:property>
        <con:property>
          <con:name>stockReasonInvalid</con:name>
          <con:value>STOCKOUT_REASON_TYPE_IS_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>productDoesntExist</con:name>
          <con:value>PRODUCT_WITH_ID_DOES_NOT_EXIST</con:value>
        </con:property>
        <con:property>
          <con:name>quantityCannotBeLessThanOne</con:name>
          <con:value>QUANTITY_CANNOT_BE_LESS_THAN_ONE</con:value>
        </con:property>
        <con:property>
          <con:name>biSpecForTransfer</con:name>
          <con:value>PRD_TRANSFER</con:value>
        </con:property>
        <con:property>
          <con:name>placeIdNull</con:name>
        </con:property>
        <con:property>
          <con:name>errorMsgCannotStockoutFromIncomingInv</con:name>
          <con:value>CAN_NOT_STOCK_OUT_FROM_INCOMING_INVENTORY</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgToPlaceForOutOrgPlace</con:name>
          <con:value>TO_PLACE_SHOULD_BE_OUT_OF_ORGANIZATION_PLACE</con:value>
        </con:property>
        <con:property>
          <con:name>stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgStockOutReasonNotFound</con:name>
          <con:value>Stock out reason type not found</con:value>
        </con:property>
        <con:property>
          <con:name>quantityTen</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>quantityTree</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgSerialNotInCurrentRange</con:name>
          <con:value>REQUESTED_STARTSERIAL_IS_NOT_IN_CURRENT_RANGE</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgProductSpecNotExist</con:name>
          <con:value>PRODUCT_SPEC_WITH_ID_DOES_NOT_EXIST</con:value>
        </con:property>
        <con:property>
          <con:name>salesReasonInteger</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>otherReasonInteger</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>lostReasonInteger</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>notExistProductId</con:name>
          <con:value>1111111111</con:value>
        </con:property>
        <con:property>
          <con:name>invalidExtId</con:name>
          <con:value>EXT-INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgProductIdOrSpecMustBeGiven</con:name>
          <con:value>PRODUCT_ID_OR_SPEC_MUST_BE_GIVEN</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgExtIdAndSerialNotFound</con:name>
          <con:value>PRODUCT_WITH_SPEC_EXTERNAL_ID_AND_SERIAL_NUMBER_NOT_BE_FOUND</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgProductSerialNumberMustBeGiven</con:name>
          <con:value>PRODUCT_SERIAL_NUMBER_MUST_BE_GIVEN</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgExtIdNotFound</con:name>
          <con:value>PRODUCT_SPEC_WITH_EXTERNAL_ID_NOT_FOUND</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgCannotUnlockProduct</con:name>
          <con:value>CANNOT_UNLOCK_PRODUCT_WITH_ID_WHICH_IS_LOCKED_BY_BI_WITH_ID_AND_BI_ITEM_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgSerialQuantityIncompatibility</con:name>
          <con:value>GIVEN_SERIAL_NUMBER_DOES_NOT_MATCH_WITH_PRODUCTS_SERIAL</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBiMustBeInDraftState</con:name>
          <con:value>BI_MUST_BE_IN_DRAFT_STATE</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBiCannotSubmitWithoutItems</con:name>
          <con:value>BI_CANNOT_SUBMIT_WITHOUT_ITEMS</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgQuantityCannotBeMoreThanProductsQuantity</con:name>
          <con:value>QUANTITY_CANNOT_BE_MORE_THAN_PRODUCTS_QUANTITY</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgGivenProductIsNotFoundOnTheSystem</con:name>
          <con:value>GIVEN_PRODUCT_IS_NOT_FOUND_ON_THE_SYSTEM</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgQuantityCannotBeLessThanOneForNonSerializedProduct</con:name>
          <con:value>QUANTITY_CANNOT_BE_LESS_THAN_ONE_FOR_NON_SERIALIZED_PRODUCT</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgQuantityCannotBeDifferentThanOneForSerializeWORangeProduct</con:name>
          <con:value>QUANTITY_CANNOT_BE_DIFFERENT_THAN_ONE_FOR_SERIALIZED_WITHOUT_RANGE_PRODUCT</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgNextStateNotFound</con:name>
          <con:value>NEXT_STATE_NOT_FOUND</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgRequestedEndSerialNumberIsNotInCurrentRange</con:name>
          <con:value>REQUESTED_ENDSERIAL_IS_NOT_IN_CURRENT_RANGE</con:value>
        </con:property>
        <con:property>
          <con:name>errroMsgProductWithIdAlreadyLockedByBIWithId</con:name>
          <con:value>PRODUCT_WITH_ID_ALREADY_LOCKED_BY_BI_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgRequestedInputAndProductNotEqual</con:name>
          <con:value>REQUESTED_INPUT_AND_PRODUCT_NOT_EQUAL</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgNoProductIdOrSpecIdFoundInProvidedInformation</con:name>
          <con:value>NO_PRODUCT_ID_OR_SPEC_ID_FOUND_IN_PROVIDED_INFORMATION</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgNoProductSpecFoundWithProvidedExternalId</con:name>
          <con:value>NO_PRODUCT_SPEC_FOUND_WITH_PROVIDED_EXTERNAL_ID</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgCharacteristicsShouldBeSent</con:name>
          <con:value>CHARACTERISTICS_SHOULD_BE_SENT</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBiItemWithIdIsNotInBiWithId</con:name>
          <con:value>BI_ITEM_WITH_ID_IS_NOT_IN_BI_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBiItemIdWithIdNotFound</con:name>
          <con:value>BI_ITEM_WITH_ID_NOT_FOUND</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBiMustBeInDraftorOngoing</con:name>
          <con:value>BI_MUST_BE_IN_DRAFT_OR_ONGOING_STATE</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgSerialNumberMustBeProvided</con:name>
          <con:value>SERIAL_NUMBER_MUST_BE_PROVIDED</con:value>
        </con:property>
        <con:property>
          <con:name>invalidCharacter</con:name>
          <con:value>invalidCharacter</con:value>
        </con:property>
        <con:property>
          <con:name>errorMessageSerialContainsOnlyDigit</con:name>
          <con:value>SERIAL_MUST_CONTAIN_ONLY_DIGIT</con:value>
        </con:property>
        <con:property>
          <con:name>errorMessageSerialMustBePositiveLong</con:name>
          <con:value>SERIAL_NUMBERS_OF_SERIALIZED_PRODUCTS_MUST_BE_POSITIVE_LONG</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgProductPlaceCannotBeOutOfOrgPlace</con:name>
          <con:value>PRODUCT_PLACE_CANNOT_BE_OUT_OF_ORGANIZATION_PLACE</con:value>
        </con:property>
        <con:property>
          <con:name>biSpecChangeStatus</con:name>
          <con:value>STATUSCHANGEBISPEC</con:value>
        </con:property>
        <con:property>
          <con:name>statusPassive</con:name>
          <con:value>Passive</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgPlaceNotInSo</con:name>
          <con:value>PLACE_NOT_IN_THE_SALES_ORG</con:value>
        </con:property>
        <con:property>
          <con:name>a</con:name>
          <con:value>QUANTITY_CANNOT_BE_MORE_THAN_PRODUCTS_QUANTITY</con:value>
        </con:property>
        <con:property>
          <con:name>errorMsgBI_ITEM_WITH_ID_IS_NOT_IN_BI_WITH_ID</con:name>
          <con:value>BI_ITEM_WITH_ID_IS_NOT_IN_BI_WITH_ID</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set create products quantity" id="54885ae1-fb93-4db9-9d51-24881dc59f7c">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Create initial data and products</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity2</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Create initial data and products 2</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create initial data and products" id="3438b7f2-6b7c-43b6-9ee5-713cd23fd24b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>5e4beeb6-f397-47ec-8202-d19549f54f59</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>salesOrgRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>inventoryId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>terminalId</con:name>
          <con:value>16</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductId</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductId</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductStartSerialNumber</con:name>
          <con:value>80813328</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductSerialText</con:name>
          <con:value>57958344</con:value>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecCode</con:name>
          <con:value>CODE-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecCode</con:name>
          <con:value>CODE-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeProductSpecCode</con:name>
          <con:value>CODE-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeSpecExtId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>userToken</con:name>
          <con:value>Bearer eyJraWQiOiIxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJVTVMtUHJlZmlsdGVyLUNoZWNrQXV0aG9yaXplIiwic3ViIjoiVEVTVCIsImF1ZCI6IlJNIiwiaWF0IjoxNDg3MTYwOTc5LCJleHAiOjE1NTI2Mzc3MjEsImF1dGhfdGltZSI6IjEzMTEyODA4NzAiLCJub25jZSI6Im4tMFM2X1d6QTJNaiIsIm5hbWUiOiJVTVMgVGVzdCBVc2VyIiwieF9kYnNzIjp7ImF1dGh6UHJvZmlsZU5hbWUiOiJDU1JfQXV0aHpQcm9maWxlIiwidmVyc2lvbiI6InYxIiwicGFydHlfaWQiOiIxMjMiLCJleHRlcm5hbF91c2VybmFtZSI6InVjODMwM2UyZS1iMDU4LTQzM2ItYTcyOS04YWU5NWQyYWZkMDEifX0.gWS8ZyYBSPpOvfldrAaUezxLZ66eJ4LLKxEnen5X9rH5r8w3qe-CLk2ol5-uEGVrtwZpbJOuC8eJCLk7x3viK4O6Q89JtzBkBXquGTV63byvIfZDAqXtoNRwuFttmMduXD3jBJAn0QBbJzDMQ8f0bVQZ4zHuX0sZMYXl2J5eh20</con:value>
        </con:property>
        <con:property>
          <con:name>userIntToken</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedBatchId</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeBatchId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>userRoleId</con:entry>
        <con:entry>salesOrgRoleId</con:entry>
        <con:entry>placeId</con:entry>
        <con:entry>inventoryId</con:entry>
        <con:entry>terminalId</con:entry>
        <con:entry>serializedProductId</con:entry>
        <con:entry>serializedWithoutRangeProductId</con:entry>
        <con:entry>nonSerializedProductId</con:entry>
        <con:entry>res_nonSerializedProductSpecCode</con:entry>
        <con:entry>res_serializedProductSpecCode</con:entry>
        <con:entry>res_serializedWithoutRangeProductSpecCode</con:entry>
        <con:entry>res_nonSerializedProductSpecExtId</con:entry>
        <con:entry>res_serializedProductSpecExtId</con:entry>
        <con:entry>res_serializedWithoutRangeSpecExtId</con:entry>
        <con:entry>userToken</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for creating products" id="6bcd3af8-a6f7-4dd8-a1c7-8fc533769dc3">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>8a36d7ed-2cdf-46db-b587-75b5124b0787</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>userRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains user" id="85738f35-103e-43be-a095-a446d0f2451f">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>78be0e7e-e61c-40db-a54a-1837cc53b0bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>salesOrgRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains so" id="678d51fc-9ab7-4788-a116-5af94f6a4fbb">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d1c7849e-730f-4eb2-842f-49fc92f2a377</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>placeId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains place" id="5fa69107-e37a-42c0-854c-5d284497c156">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f37611e7-5955-40ea-91ef-b91f7cd3029b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>inventoryId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains inventory" id="9cdf5400-52df-4d7e-a87b-530349a3a9c1">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>578aa3ed-5abc-40b1-a9d2-d98b80995ebd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>terminalId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains terminal" id="84c7bb95-73f2-4aee-9e9c-ddfcacc0a81b">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>39719d65-29a9-437c-90a2-5b70949be54c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>serializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized" id="ad81223c-9b52-4085-8bd7-7c4f02c28f60">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>56b0a177-a783-46c7-9560-048ca32e86b3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>serializedWithoutRangeProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized without range" id="f06638bb-fe53-45cf-810b-467fae38d577">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d63f4335-6301-4f37-8aa5-607bff2a6beb</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:sourceId>
        <con:propertyName>nonSerializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains nonserialized" id="57cacf78-45f8-49fb-8883-cb945fcd0e5b">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set given properties for the test steps" id="b2cf8bcc-3e18-4415-8643-da657986450c">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_salesOrgId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>terminalId</con:name>
        <con:sourceType>terminalId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_terminalId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProductId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>NonSerializedProductId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProductSpecCode</con:name>
        <con:sourceType>res_nonSerializedProductSpecCode</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>NonSerializedProductSpecCode</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedProductId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductSpecCode</con:name>
        <con:sourceType>res_serializedProductSpecCode</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedProductSpecCode</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductId</con:name>
        <con:sourceType>serializedWithoutRangeProductId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedWithoutRangeProductId</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductSpecCode</con:name>
        <con:sourceType>res_serializedWithoutRangeProductSpecCode</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedWithoutRangeProductSpecCode</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProductSpecExtId</con:name>
        <con:sourceType>res_nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>NonSerializedProductSpecExtId</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductSpecExtId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedProductSpecExtId</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductSpecExtId</con:name>
        <con:sourceType>res_serializedWithoutRangeSpecExtId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>SerializedWithoutRangeProductSpecExtId</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create initial data and products 2" id="3b2d5cb6-cd98-49f6-b213-538983a3329c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>5e4beeb6-f397-47ec-8202-d19549f54f59</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>userRoleId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>salesOrgRoleId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>inventoryId</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>terminalId</con:name>
          <con:value>17</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductId</con:name>
          <con:value>64</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductStartSerialNumber</con:name>
          <con:value>80813328</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductSerialText</con:name>
          <con:value>57958344</con:value>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecCode</con:name>
          <con:value>CODE-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecCode</con:name>
          <con:value>CODE-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeProductSpecCode</con:name>
          <con:value>CODE-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeSpecExtId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>userToken</con:name>
          <con:value>Bearer eyJraWQiOiIxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJVTVMtUHJlZmlsdGVyLUNoZWNrQXV0aG9yaXplIiwic3ViIjoiVEVTVCIsImF1ZCI6IlJNIiwiaWF0IjoxNDg3MTYwOTc5LCJleHAiOjE1NTI2Mzc3MjMsImF1dGhfdGltZSI6IjEzMTEyODA4NzAiLCJub25jZSI6Im4tMFM2X1d6QTJNaiIsIm5hbWUiOiJVTVMgVGVzdCBVc2VyIiwieF9kYnNzIjp7ImF1dGh6UHJvZmlsZU5hbWUiOiJDU1JfQXV0aHpQcm9maWxlIiwidmVyc2lvbiI6InYxIiwicGFydHlfaWQiOiIxMjMiLCJleHRlcm5hbF91c2VybmFtZSI6InVlNTAzOTM5Ni1hZTkyLTQ4MTgtOGJjOS03MTQzYjA3ZWRiMDEifX0.dHG6_0MSJDeKkoahEFoMfiIs3LEqXyuV4nrxSDA7f12OihmoiFl3F18Z1HGTsP3PSMYSxXsHDl_-q1UQOSBNa7aGREYvwf0rm3lS4a4R42doHsx__G8WW262A-49-hXhhz48De2-28Ql5btvDEEeOLscMVZLO5kN2vah3AkX8U0</con:value>
        </con:property>
        <con:property>
          <con:name>userIntToken</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedBatchId</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeBatchId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>userRoleId</con:entry>
        <con:entry>salesOrgRoleId</con:entry>
        <con:entry>placeId</con:entry>
        <con:entry>inventoryId</con:entry>
        <con:entry>terminalId</con:entry>
        <con:entry>serializedProductId</con:entry>
        <con:entry>serializedWithoutRangeProductId</con:entry>
        <con:entry>nonSerializedProductId</con:entry>
        <con:entry>res_nonSerializedProductSpecCode</con:entry>
        <con:entry>res_serializedProductSpecCode</con:entry>
        <con:entry>res_serializedWithoutRangeProductSpecCode</con:entry>
        <con:entry>res_nonSerializedProductSpecExtId</con:entry>
        <con:entry>res_serializedProductSpecExtId</con:entry>
        <con:entry>res_serializedWithoutRangeSpecExtId</con:entry>
        <con:entry>userToken</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for creating new product" id="4f62a548-64fc-427a-b2dc-44dcd95bf8ab">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>6cf810cd-30e2-4be6-9149-a3419432a494</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>userRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains user" id="67dc104c-8d0f-45e9-8541-5dede469aab9">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d075d006-9aca-4b32-96f5-08fefb0e0e09</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>salesOrgRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains so" id="723793db-81c6-4452-8b0e-83366b5524f0">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>29a472db-3bc6-4636-a6a5-1f1dee9b273a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>placeId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains place id" id="d3e7b7bf-40e2-4d36-876c-1ef705b8fd78">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>15f9d672-56ac-494a-9b1e-6cdfeaba50b1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>inventoryId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains inventory" id="8300597e-5c3f-4032-923b-040bdccb49a1">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e1a20f6c-f213-4441-a79d-cec31886e4f3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>terminalId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains terminal" id="ac3dc96f-1fdb-4186-ba46-afbc6d6886ba">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d36d52bd-bcd3-4b52-b440-3b4eebb28e75</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>serializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized" id="b60771b7-eeaa-41ac-a8a4-8e25aca68b56">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>aeec9788-4433-477c-ad76-fe0817bd36b2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>serializedWithoutRangeProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized without range" id="5310c337-0e10-4882-835f-17fe6b611384">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b545f762-3835-4cdc-b3d8-c039b6a7f2b2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:sourceId>
        <con:propertyName>nonSerializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains nonserialized" id="641957b4-7e72-498c-85ad-939caeff2c50">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer nonSerializedProduct" id="be88aed6-2439-427c-a975-48c60d30a7d6">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>NonserializedProductId2</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for getting current quantity in out of org place" id="948c98fb-d201-47bd-9e20-6f6ea02a91e4">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpectExtId</con:name>
        <con:sourceType>NonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query with out of org place for quantity control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query with out of org place for quantity control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query with out of org place for quantity control" id="9bb70005-880a-42ee-bc57-5f3dd17754fe">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for getting product with quantity info successfully" id="4c37a42d-ba92-4985-8173-708edfc93ffd">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>b085026b-aeb6-437f-8449-6504a6bbe136</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9bb70005-880a-42ee-bc57-5f3dd17754fe</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="dea8ccbf-1147-40a7-b65f-44c34339a1c9">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for current quantity control" id="cb61a582-c695-41e5-b209-69e6f9c21851">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def res_quantityOutOfOrg = context.expand( '${Product query with out of org place for quantity control#res_quantityOutOfOrg}' )
int currentQuantityOutOfOrg=0;

if(res_quantityOutOfOrg =="")
currentQuantityOutOfOrg=0;
else 
currentQuantityOutOfOrg=res_quantityOutOfOrg.toInteger();

testRunner.testCase.testSteps['Given properties for the test steps'].setPropertyValue("currentQuantityInOutOfOrgPlaceForNonSerializedProduct", currentQuantityOutOfOrg.toString());</script>
        </con:configuration>
        <con:name>currentQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id without bi spec" id="48da5b95-3ade-4e14-86ac-427f5d8eb5f3">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out business interaction without bispec</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleID</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out business interaction without bispec</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out business interaction without bispec</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out business interaction without bispec" id="e84084a7-1ce4-4b9d-8978-25eb54d94623">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BUSINESS_INTERACTION_CODE_MUST_BE_PROVIDED</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is not created without bi spec" id="984588f9-0e5d-4bbd-ac96-52fe2d28bdbd">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>15655419-fd46-4a73-9c44-fb7710f64a1b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e84084a7-1ce4-4b9d-8978-25eb54d94623</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1c3ff752-6505-4372-878b-dd38751d5378">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fc0b5866-7c8f-4936-b1a8-c7cad66a108e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e84084a7-1ce4-4b9d-8978-25eb54d94623</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals errror msg detail" id="2a36e1d5-4637-4232-ab1f-4da96da9ef7a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgWithoutBISpec</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for stockout bi with none associate user" id="a506e35f-efdd-48c7-bada-52d7ba238c11">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stockout bi with none associate user</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userId</con:name>
        <con:sourceType>DefaultUserRoleId</con:sourceType>
        <con:sourceStep>#Project#</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stockout bi with none associate user</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stockout bi with none associate user</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stockout bi with none associate user" id="ac65a260-26a6-40cb-989f-bd7b02199cca">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>403</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>Invalid user role id in the request</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is not created with none associate user" id="3c9c734d-1c84-4e55-9e2e-d9792e553210" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3b35d806-c0e9-46f0-924b-ac621ce49f5f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ac65a260-26a6-40cb-989f-bd7b02199cca</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="12f1054c-a1ba-4edd-ac82-b733f0456f90">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>dae7f32d-5660-4937-9f6a-43a1529e812f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ac65a260-26a6-40cb-989f-bd7b02199cca</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals errorMsg" id="6a7bd019-b060-4d7b-83d6-3f9ec9dd32c6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>userNotInSoError</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id which is not exist" id="c30628e9-e305-4146-8c3f-456b8c6dc5f4">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit bi which is not exist</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit bi which is not exist" id="035bfad6-84a1-4fcf-94fe-b4996b6fc59e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>404</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is not submitted which is not exist" id="b9fec50c-d45a-460c-aabb-135ab6ba20c0">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>75d4ec27-cacb-4492-bbe1-715825192641</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>035bfad6-84a1-4fcf-94fe-b4996b6fc59e</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d6f684aa-0fa6-47da-8f0c-ed7e87bbd27c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>7cc3768e-178c-448a-aa28-f7b5bfb937c5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>035bfad6-84a1-4fcf-94fe-b4996b6fc59e</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="b07368ca-440f-45d4-8c5e-33682b5bd21b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMessage404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set stock out bi request parameters" id="d70094d2-b624-4c71-9bc7-d7a2fcdffbde">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>bispec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock-out business interaction with or without session</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock-out business interaction with or without session</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock-out business interaction with or without session</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock-out business interaction with or without session" id="f5f2c704-11aa-4bf1-a77a-c8f24d37c33b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2131</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is created successfully" id="922b28e9-7bea-44ac-9414-6b08827b4efc">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>20029fe9-631f-42fc-9ad9-eee84a37271d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f5f2c704-11aa-4bf1-a77a-c8f24d37c33b</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="ff01c0e2-92d0-48bd-80de-fbb798405ae7">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ba9ffd71-f9fe-4e3c-9a22-57ecd280c74b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f5f2c704-11aa-4bf1-a77a-c8f24d37c33b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5c6d088d-d64e-4656-94c1-67a8c2c41f61">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id to submit without items" id="4086b09a-2726-435e-a493-19ab7a735b02">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock-out business interaction with or without session</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out business interaction without items</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out business interaction without items" id="1fdbe111-6f01-4b4d-b83e-f04ec856defd">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2131</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BI_CANNOT_SUBMIT_WITHOUT_ITEMS</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is not submitted without items" id="e6bcbc9f-d99d-4a9d-b185-d34d8b61e5e8">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e934a32b-2749-452d-9a95-5ad47969387b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1fdbe111-6f01-4b4d-b83e-f04ec856defd</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="6b62e8c2-e80c-4d29-a5ab-653c2c81a146">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b9c758d0-44b3-41cf-a736-2b300db72d15</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1fdbe111-6f01-4b4d-b83e-f04ec856defd</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="3ecc8ab9-205c-40e2-bbfb-c72a55fd53f3">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgBiCannotSubmitWithoutItems</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for adding item to BI which does not exist" id="b3cfa9f6-d6c3-41db-b608-2874729849cd">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to BI which does not exist</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>NonSerializedProductId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to BI which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to BI which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to BI which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to BI which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to BI which does not exist" id="d685e839-32af-47ca-a7c1-bd4517435150">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion can not add item to the BI which does not exist" id="76914e7c-1fe5-45f9-b0e5-e3751c479593">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ca5fdf19-9595-4253-ab45-cac5801ddd10</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d685e839-32af-47ca-a7c1-bd4517435150</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="a3e7e194-3c85-480c-bbf4-75b054645538">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1ea91f10-f9cd-428f-8a91-7657fd6bbe7e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d685e839-32af-47ca-a7c1-bd4517435150</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="e17306f6-1b64-4fc4-99ea-57c9518b9d1c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMessage404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set product infos" id="25301057-3b50-467e-bbc5-b7a2194f2382">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProducdId</con:name>
        <con:sourceType>NonSerializedProductId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>nonSerializedProductId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductId</con:name>
        <con:sourceType>SerializedProductId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>serializedProductId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductId</con:name>
        <con:sourceType>SerializedWithoutRangeProductId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>serializedWithoutRangeProductId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProductSpecExtId</con:name>
        <con:sourceType>NonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>nonSerializedProductSpecExtId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductSpecExtId</con:name>
        <con:sourceType>SerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>serializedProductSpecExtId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductSpecExtId</con:name>
        <con:sourceType>SerializedWithoutRangeProductSpecExtId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>serializedWithoutRangeProductSpecExtId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>req_placeId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>placeId</con:targetType>
        <con:targetStep>Product infos</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>validBiId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock-out business interaction with or without session</con:sourceStep>
        <con:targetType>validBiId</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Product infos" id="21df94df-efe8-4a19-be91-ba4c978f6c96">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>nonSerializedProductId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductId</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductId</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductSpecExtId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>placeId</con:name>
          <con:value>34</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource for adding item with invalid values" id="5b349da8-ec0a-45e5-90fa-df7d25e9ad0a">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#notExistBIId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutReasonSales}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#biNotFound}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#emptyValue}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgWithoutReason}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#invalidStockOutReason}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgStockOutReasonNotFound}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutReasonSales}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgGivenProductIsNotFoundOnTheSystem}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#notExistProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutReasonLost}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgQuantityCannotBeLessThanOneForNonSerializedProduct}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutReasonLost}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgQuantityCannotBeLessThanOneForNonSerializedProduct}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityNegative}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode400}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#validBiId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutReasonLost}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode406}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Product infos#nonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">qwwwq</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#httpCode406}</con:entry></xml-fragment>]]></row>
        </con:configuration>
      </con:dataSource>
      <con:property>biId</con:property>
      <con:property>stockOutReason</con:property>
      <con:property>errorCode</con:property>
      <con:property>productId</con:property>
      <con:property>quantity</con:property>
      <con:property>errorCodeNumber</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for error msg" id="4a483f2e-238c-4f57-94b7-2a8e2d9c40e5">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def errorCode = context.expand( '${DataSource for adding item with invalid values#errorCode}' )
return errorCode.toString();</script>
        </con:configuration>
        <con:name>errorMsg</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def errorCodeNumber = context.expand( '${DataSource for adding item with invalid values#errorCodeNumber}' )
return errorCodeNumber.toInteger();</script>
        </con:configuration>
        <con:name>errorCode</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set add item to bi with invalid values" id="caef8ab8-0a89-457f-86ac-f9372e5bac2f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>biId</con:sourceType>
        <con:sourceStep>DataSource for adding item with invalid values</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to bi with invalid values</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>productId</con:sourceType>
        <con:sourceStep>DataSource for adding item with invalid values</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to bi with invalid values</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantity</con:sourceType>
        <con:sourceStep>DataSource for adding item with invalid values</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to bi with invalid values</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReason</con:sourceType>
        <con:sourceStep>DataSource for adding item with invalid values</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to bi with invalid values</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level before add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level before add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to bi with invalid values</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level before add" id="cc018acb-784c-4cf3-b5d0-2e2c95844d2a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert product stock level before add" id="4f9b718a-a3af-4541-bc8e-4b96da867341">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>af521134-9ceb-4b8c-b2fb-788ac2c112e2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>cc018acb-784c-4cf3-b5d0-2e2c95844d2a</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="0fad1cb8-797e-40d7-9387-0674a0929a94">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>830d2c98-b783-41f2-bd4e-907935812142</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>cc018acb-784c-4cf3-b5d0-2e2c95844d2a</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved zero" id="b2c3d33c-9c21-40f3-9534-8ed3a0120c03">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2a00295e-a08c-49bd-95d7-1cc9e30c0390</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>cc018acb-784c-4cf3-b5d0-2e2c95844d2a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="a810da5b-14f9-4ed6-9fff-d8fea8cb6bdd">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to bi with invalid values" id="d27542e2-b01b-44c7-9032-706f31a316e7">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>${Given properties for the test steps#validBiId}</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Product infos#nonSerializedProductId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>qwwwq</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>${Given properties for the test steps#stockOutReasonLost}</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_newProductId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is not added" id="7c41a0bf-0222-4b85-9d85-8f62b2ce3deb">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>1cf6354b-5e2e-4c8b-a401-2e2013ede6d9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d27542e2-b01b-44c7-9032-706f31a316e7</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals fail" id="7c5cbe18-df8c-4f80-8ffa-4cc0d1ea4b12">
          <con:configuration>
            <patternObjectId>4a483f2e-238c-4f57-94b7-2a8e2d9c40e5</patternObjectId>
            <patternProperty>errorCode</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>34438d1a-e4ab-4537-b1ce-af70be8b8899</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d27542e2-b01b-44c7-9032-706f31a316e7</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error code" id="6a872d20-3839-4f8c-a52a-896a763877e6">
          <con:configuration>
            <patternObjectId>4a483f2e-238c-4f57-94b7-2a8e2d9c40e5</patternObjectId>
            <patternProperty>errorMsg</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control" id="73ae2b8d-68ca-4f95-8083-941d6ce59a49">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after failure add</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after failure add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productID</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after failure add" id="f0bb5e30-fab6-4b52-b409-371e911557b6">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock control" id="9c7e2ddc-52c4-4823-9a41-a55376d238ea">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert product stock level and lock after failure add" id="d6ab8d7b-0a95-4bfd-9a5d-5d5c4d6f35a7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>5a0d274d-1842-481f-96c7-a6c2416d12fc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f0bb5e30-fab6-4b52-b409-371e911557b6</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="82b54957-add7-4888-84d6-ed2a092eb02a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a7e4c2cf-a4da-4cf2-8a94-4ff875d201ef</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f0bb5e30-fab6-4b52-b409-371e911557b6</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved zero" id="b921e10f-95ec-4bb7-97f7-8f55fd5ce96a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ef5b53f4-7a2b-43ad-9fb0-e96655ce9291</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f0bb5e30-fab6-4b52-b409-371e911557b6</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="a42b7d8f-27c8-46a1-a6f6-a612602e2639">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>718e547f-8a88-4aad-afd6-32f6dc40359f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9c7e2ddc-52c4-4823-9a41-a55376d238ea</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals lock res code" id="084735f4-817b-42ea-ad2a-033265c1ae9e">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1a04d61b-8ca3-4bcd-9b7a-2ff1c57de71e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9c7e2ddc-52c4-4823-9a41-a55376d238ea</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biId" id="e192204f-1c00-4a01-a19f-a3fceced6fd0">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fd8abac4-94be-4dd5-a86a-90893077a6e8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9c7e2ddc-52c4-4823-9a41-a55376d238ea</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biItem id" id="732ed6df-f2ba-42aa-b1db-36d0b4ad1b81">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop for adding item with invalid values" id="cd1d7632-62ec-4ce8-84c2-8e51015dc41d">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource for adding item with invalid values</dataSourceStep>
      <targetStep>DataGen for error msg</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for add item with product specification" id="9eb346fb-11a3-4aab-b686-53bbe67ffebb">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>validBiId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with product specification id which does not exist</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item with product specification id which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productInformationQuantity</con:targetType>
        <con:targetStep>Add item with product specification id which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>salesReasonInteger</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReason</con:targetType>
        <con:targetStep>Add item with product specification id which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>specId</con:name>
        <con:sourceType>quantityNegative</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productSpecId</con:targetType>
        <con:targetStep>Add item with product specification id which does not exist</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with product specification id which does not exist" id="a75f3e54-4d91-4f44-a597-f49278d83e74" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a239e376-803b-4815-9136-a9a9a795a4de</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2131</con:value>
        </con:property>
        <con:property>
          <con:name>req_productInformationQuantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReason</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>483</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>159</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with product spec id which does not exist" id="8e820fd1-6e37-4ada-8da5-f5b2850dc456" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>c6d4b5ad-73ec-46fb-90d4-f0b5b583a7d5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a75f3e54-4d91-4f44-a597-f49278d83e74</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="61e00201-c58f-4aa1-bd26-ef9fcdcf3c8b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>35c1b2b9-0403-46d5-8bae-5f7e3722d5ca</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a75f3e54-4d91-4f44-a597-f49278d83e74</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="47add474-1e50-4299-bf49-76017a57b1d3">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgProductSpecNotExist</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set end session business interaction parameters" id="9572b435-fc5c-43c9-adcb-d98610b55663">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_salesOrgRoleId</con:targetType>
        <con:targetStep>Create and submit end session business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create and submit end session business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create and submit end session business interaction" id="c5751a2c-b51d-4800-acaf-2cf7377830b5">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a66f1305-af6e-491f-81cf-d1647cb6fb4a</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrgRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2141</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion end session submitted successfully" id="791c06d5-ffbe-4706-8d85-3745aeb42af0">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e4e45966-de3b-48e6-8007-d0acbd153bca</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c5751a2c-b51d-4800-acaf-2cf7377830b5</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="16de4b1d-3cbd-429f-b3f9-9e646ea2b0ae">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for creating and submitting session bi" id="07cd280d-26aa-454a-8667-fc1fb66e99ce">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create and submit start session business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrgRoleId</con:targetType>
        <con:targetStep>Create and submit start session business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>terminalId</con:name>
        <con:sourceType>req_terminalId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_terminalId</con:targetType>
        <con:targetStep>Create and submit start session business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create and submit start session business interaction" id="8c3516d0-b45a-487b-9899-e8c6d958aa60">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a8bc6612-7b48-44cc-84ed-0b76bc1c8f6d</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_terminalId</con:name>
          <con:value>16</con:value>
        </con:property>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrgRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2151</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert start session bi is created and submitted successfully" id="c6ad9fdd-3611-4caa-b412-1af0e76a12bf">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>58b5bbfc-a984-40e3-9187-021ccc0a048a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8c3516d0-b45a-487b-9899-e8c6d958aa60</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="201a687f-9d8f-4672-89d3-f90036fac573">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set new business interaction parameters" id="8f0f3835-c90c-4abf-8fe0-ef3cbdd705f2">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create new business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create new business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create new business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create new business interaction" id="134eb39a-4b40-40e3-a723-e7716905cf8b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is created" id="1800c3f6-01ab-41f2-add2-98b51fcfd3f1">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>30b543b6-8140-43ab-90cc-eea4b22323cd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>134eb39a-4b40-40e3-a723-e7716905cf8b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="fec3f952-ccad-4014-851a-a51503e1ce54">
          <con:configuration>
            <token/>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2aa5d169-186c-4362-b9b8-ae880ac590f3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>134eb39a-4b40-40e3-a723-e7716905cf8b</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biId" id="ce04b9f0-fae9-437f-ac41-d7d6302b1df1">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set add stock out item with more without range quantity" id="9e7bfb33-df1f-418b-a065-1f082155ae08">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add stock out item with more without range quantity</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>serializedWithoutRangeProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add stock out item with more without range quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add stock out item with more without range quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add stock out item with more without range quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add stock out item with more without range quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>serializedWithoutRangeProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display stock level before adding more without range product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display stock level before adding more without range product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display stock level before adding more without range product" id="80f0ffcd-df21-411c-a301-bb65ae7a5bbb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock level control for without range quantity" id="15badd11-a1c4-4cef-a036-715b4b71e8b9">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d23f048f-156b-48c0-853d-5a9fd8be9b7a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>80f0ffcd-df21-411c-a301-bb65ae7a5bbb</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total 1" id="3ae862cc-8c62-4e1a-ac9c-d24b33c81121">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ad94e0c8-28c1-4557-92a1-8ce7e4518462</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>80f0ffcd-df21-411c-a301-bb65ae7a5bbb</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available 1" id="a3bda467-f29d-42af-9c16-9aa760e8473d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b718ebab-bec9-45f9-a468-0529489c7617</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>80f0ffcd-df21-411c-a301-bb65ae7a5bbb</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved 0" id="30eba27f-f8ba-48b5-b29d-786bee3586d6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add stock out item with more without range quantity" id="b388ed3d-9d2f-4ae4-90f6-5b27d85cd39e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>QUANTITY_CANNOT_BE_DIFFERENT_THAN_ONE_FOR_SERIALIZED_WITHOUT_RANGE_PRODUCT</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_newProductId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion add stock out item with more without range quantity" id="634051cc-d4a6-4088-8c66-6955f4256d52">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>0903a402-c21f-4c0e-9df5-26d953bce66e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b388ed3d-9d2f-4ae4-90f6-5b27d85cd39e</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="8aa808bc-d25a-44e2-9c1c-812b9cd778aa">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c0e87fd1-001a-468f-b877-eec31c84faff</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b388ed3d-9d2f-4ae4-90f6-5b27d85cd39e</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="ae339db8-0ac4-474f-8129-98a19c02f9c2">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgQuantityCannotBeDifferentThanOneForSerializeWORangeProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control for without range product" id="454a297d-c475-456a-a42d-4859bbd50504">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>serializedWithoutRangeProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level for without range product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level for without range product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productID</con:name>
        <con:sourceType>serializedWithoutRangeProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for without range product lock</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level for without range product" id="2ece1683-78b7-4ca5-9d8e-cde868e62a55">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for without range product lock" id="97b4c020-1618-4239-adf5-844d9ce9ed27">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert product stock level and lock after failure add 2" id="3e1d0b3d-70ad-49d1-b799-c2c7988ac0ba">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>6420474d-1428-4b2f-9afb-fa895c0395b9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2ece1683-78b7-4ca5-9d8e-cde868e62a55</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total 1" id="27ac6258-c26c-459c-ba7a-a4da5262bfe5">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>51b4e2cb-55ba-4360-b497-2209326cd180</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2ece1683-78b7-4ca5-9d8e-cde868e62a55</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved 0" id="4c18a5f5-4165-45f4-8aa9-af46bdc85a4d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c5eb1004-f0ed-4a60-8b21-8bec530c1672</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2ece1683-78b7-4ca5-9d8e-cde868e62a55</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available 1" id="f9c193c8-4c3d-4726-ade6-94708db84e8a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8ee4b6d1-2b02-4711-b87a-0af2bb4b8643</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97b4c020-1618-4239-adf5-844d9ce9ed27</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals lock res code" id="ee6874a5-49af-4145-a013-323e723afd48">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>21456177-3770-44b7-b4d7-2138b373a15b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97b4c020-1618-4239-adf5-844d9ce9ed27</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biId" id="f0187716-8898-4754-82ce-3e2f5b8c0b71">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cb9c0fcc-3ed3-46f7-8d86-159e72c09979</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97b4c020-1618-4239-adf5-844d9ce9ed27</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biItemId" id="fdb9c4e5-30c6-41ab-9534-e1b30632e2ee">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for more quantity calculation" id="b9cbc055-f6da-4083-9a07-08e9acb0543d">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def stockInQuantity = context.expand( '${Given properties for the test steps#stockInQuantity}' )
int moreQuantity = stockInQuantity.toInteger() + 1;
return moreQuantity;</script>
        </con:configuration>
        <con:name>moreQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T adding serialized product to stock out bi with more quantity" id="65b65115-4bde-434d-a5de-e7f77d696961">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add serialized product item with more quantity</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add serialized product item with more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>moreQuantity</con:sourceType>
        <con:sourceStep>DataGen for more quantity calculation</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add serialized product item with more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add serialized product item with more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add serialized product item with more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add serialized product item with more quantity" id="cafcf0b9-8742-4ba5-8ba5-824dc25ccc1a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>QUANTITY_CANNOT_BE_MORE_THAN_PRODUCTS_QUANTITY</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>293</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_newProductId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert cannot add serialized item with more quantity" id="cc123a7f-5ad1-4465-aba0-43740ca0d605">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>79bc9207-ecf4-46a9-bb3b-54ed900b2a14</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>cafcf0b9-8742-4ba5-8ba5-824dc25ccc1a</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="4132f0f5-1408-4b5d-a7c0-5942581efdf5">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>52234c15-ecc7-406f-925e-5ec7397eca8b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>cafcf0b9-8742-4ba5-8ba5-824dc25ccc1a</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="d1a0c53a-f0d8-4192-be07-b746bb5ca530">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgQuantityCannotBeMoreThanProductsQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control for serialized product with more quantity" id="e83164fc-1689-4d2b-a868-e2b6393ffb74">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level for serialized more quantity</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level for serialized more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productID</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for serialized more quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level for serialized more quantity" id="287d4d3d-7efb-4709-883a-debd4aad9076">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for serialized more quantity" id="3a931dd3-57d5-4592-a8a7-56790b5e9cf9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert serialized product stock level and lock control" id="1cdd9415-de49-49e7-91b5-a0835cd501f3">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>dbcb05fe-da19-4e4a-ae16-0732f2e0492e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>287d4d3d-7efb-4709-883a-debd4aad9076</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total quantity" id="9b52813f-d3f0-49a1-a27b-074225a2e18c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ea5fd45b-5ae1-430d-9cb2-3bfa24514c3c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>287d4d3d-7efb-4709-883a-debd4aad9076</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved quantity" id="3d11fc71-4476-4714-99b2-082a26bfe27a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8397a233-ace1-4afc-a2f7-56905204f2f8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>287d4d3d-7efb-4709-883a-debd4aad9076</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available quantity" id="4692ce40-ce0c-4d19-a76e-ffd1dd3b8508">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>20ed5312-38fd-4250-8afe-c3ff3cdfe50c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3a931dd3-57d5-4592-a8a7-56790b5e9cf9</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id lock" id="4f4e476d-1efd-4aa6-8a85-66743e03ab54">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fadfd608-ac10-46e4-a823-b5d72d6fbbd8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3a931dd3-57d5-4592-a8a7-56790b5e9cf9</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi item id lock" id="455604eb-8da1-4825-b019-24339fd6a960">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for add operation without reason info" id="530bc400-5ec2-4d0d-8a98-c720366ab41e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi without reason info</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi without reason info</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi without reason info</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>biId2</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi without quantity</con:targetStep>
        <con:targetPath/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>productId2</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi without quantity</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi without quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi without quantity</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi without reason info" id="088df842-d945-45b7-b252-9e9710af7cb8">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>60d40ac2-dbac-455a-a2bb-be26618211a0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi without quantity" id="13dac3ed-0879-481d-b29d-b3b91e01e88b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>e650fa47-5ba1-49f9-ba2e-a83ac0cecfdc</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>406</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert cannot add item without reason info" id="72afe791-d151-4845-a7e9-e1c27314c7bb">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3c70c72e-486f-42d4-833d-e5fb2c41ee1b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>088df842-d945-45b7-b252-9e9710af7cb8</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="3e07da30-7ac3-42e5-8e6c-807422dd5b3c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode406</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0d839abd-19b7-46c6-8426-c7479a92862e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>088df842-d945-45b7-b252-9e9710af7cb8</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="eb9ebdf4-5397-42cb-a406-300ab99f1a65">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode406</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b2fd3e19-f86a-4ae1-8510-02f09f18a3a6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13dac3ed-0879-481d-b29d-b3b91e01e88b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="res code 2" id="160df58d-c6b5-4216-8583-5ce5a0d4e3d7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode406</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>571c255f-8b20-42f7-945f-e93a48923b81</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13dac3ed-0879-481d-b29d-b3b91e01e88b</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="res error 2" id="19a663ad-f735-4a8f-8b51-ab7e1d57b334">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode406</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control after adding without reason" id="900322e6-ff62-4f77-a95a-3ad1341b37fe">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level adding without reason</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level adding without reason</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>new_product_id</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock  adding without reason</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level adding without reason" id="13b1a0bc-af9f-4960-931c-bf731625df78">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock  adding without reason" id="1f3e0325-52ce-477a-a4bb-b0f69f957b17">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock level and lock after adding without reason" id="d7887be4-abfb-4d77-a3b3-173f989b4254">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>40a8ccf4-fe98-49a9-99d1-63ce5572d928</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13b1a0bc-af9f-4960-931c-bf731625df78</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="229eb293-37ba-4891-a71a-813e8a51e5b7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>76bc1604-b68a-4a31-9d81-b8b1413c4ca8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13b1a0bc-af9f-4960-931c-bf731625df78</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved 0" id="3da26d15-9718-4b80-b35c-1b37a4c12c6c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>aadc4653-a6d9-432d-a099-396b743bebef</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13b1a0bc-af9f-4960-931c-bf731625df78</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="ec7ef9c8-b6e9-46cd-a383-6be9393903f6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>88fc76b0-5f14-4e9d-af4e-096e4bbd6fcf</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1f3e0325-52ce-477a-a4bb-b0f69f957b17</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id empty" id="48ffc0bf-f603-427a-a929-28d74c639b98">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>7d9aef50-5d8d-444d-aeb9-90ea589a04a4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1f3e0325-52ce-477a-a4bb-b0f69f957b17</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains item id empty" id="2661e25a-9d87-4ec5-83ac-77259bc2cda4">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set add item properties" id="a0fbdaa7-96fa-4d82-a47f-02a5c9b7add3">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>biId1</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add nonserialized product item with more quantity</con:targetStep>
        <con:targetPath/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>productId1</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add nonserialized product item with more quantity</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>productQuantity1</con:name>
        <con:sourceType>moreQuantity</con:sourceType>
        <con:sourceStep>DataGen for more quantity calculation</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add nonserialized product item with more quantity</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>reason1</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add nonserialized product item with more quantity</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>stockOutReasonDescription1</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add nonserialized product item with more quantity</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display stock level before adding nonserialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display stock level before adding nonserialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display stock level before adding nonserialized product" id="37843947-f14c-4442-9542-122ea42e517f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock level before adding nonserialized product" id="2330424c-5612-4220-bc65-c0e5637b6d57">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>1f814410-6aab-409e-8164-d9adee79bda7</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>37843947-f14c-4442-9542-122ea42e517f</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="876471e6-2017-4c32-abd2-d92cd07cc38c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>6c12d60f-df9c-41b0-9484-22c6d21a009c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>37843947-f14c-4442-9542-122ea42e517f</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="c6bba715-d708-43f1-a6db-c73b04cb14a5">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2224d951-ad2c-4a39-9227-a55a0854a70d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>37843947-f14c-4442-9542-122ea42e517f</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved 0" id="1b4bc879-ead2-44f6-99d6-3c93cccc54e1">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add nonserialized product item with more quantity" id="07d67ee1-9582-43eb-a9e7-a57a9367f30a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>293</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>QUANTITY_CANNOT_BE_MORE_THAN_PRODUCTS_QUANTITY</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out business interaction" id="7dc55907-9a65-4356-a5b3-04b7a689ae71">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>490</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>63</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item is added successfully" id="24730fa8-3c92-466b-b8ce-621a713eb12d">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4eaa1cba-2b19-4d92-b01f-215479e8e0d9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7dc55907-9a65-4356-a5b3-04b7a689ae71</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5decdc55-68b4-4456-8731-f7ef550c5a36">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5f28156b-4d75-4a69-b4ee-92aa25458dfc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>07d67ee1-9582-43eb-a9e7-a57a9367f30a</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="error res code" id="8794bb33-f7da-4d16-bd0d-05ce96503a55">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5952a192-a709-4959-bf41-3d53671085fe</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>07d67ee1-9582-43eb-a9e7-a57a9367f30a</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="error" id="156059b4-d711-4531-af7a-8e88ff9d7bd7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgQuantityCannotBeMoreThanProductsQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control after adding operation" id="dad7669b-7cad-42db-b9e0-584ed66d3386">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level for nonserialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level for nonserialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>new_product_id</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item to stock out business interaction</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for nonserialized product lock</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level for nonserialized product" id="b0ad3304-c800-476e-96f9-a3cc19843e85">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for nonserialized product lock" id="9fee6f5a-38c3-43d4-b955-154223d7157e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>490</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for stock level and lock control for nonserialized product" id="294f76ff-2af4-4411-b31b-3c8da95256bc">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>daf10255-344a-49ca-9c34-247718220bbf</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b0ad3304-c800-476e-96f9-a3cc19843e85</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total quantity" id="18d2d854-1ccc-4a8c-94a3-22b4a55e9226">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>465f9e71-73a9-4d1a-806e-94735684a16c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b0ad3304-c800-476e-96f9-a3cc19843e85</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="424dddac-59e2-4c75-aa91-d730d6200023">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stockInQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0fa237a3-fe71-459e-8372-89a4ba44cb79</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b0ad3304-c800-476e-96f9-a3cc19843e85</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="41ca3746-2631-452b-99fe-5b6c16c0dfa0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0dda6613-f08e-4273-a3ff-f10089cee8ea</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9fee6f5a-38c3-43d4-b955-154223d7157e</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals biId lock" id="cde8ed9f-673c-4cbf-ba65-d5fbfb6159a0">
          <con:configuration>
            <patternObjectId>7dc55907-9a65-4356-a5b3-04b7a689ae71</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cb2f8dae-02b2-442b-bffe-bed4368501ea</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9fee6f5a-38c3-43d4-b955-154223d7157e</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi item id lock" id="9f0fe246-b910-41eb-b02d-56d8138bf2d8">
          <con:configuration>
            <patternObjectId>7dc55907-9a65-4356-a5b3-04b7a689ae71</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for deleting one item with invalid biId" id="f4a78c34-4199-4e56-b8c7-fb4c0517e9b6">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>notExistBIId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Delete one item with invalid biId</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>itemId</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add item to stock out business interaction</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Delete one item with invalid biId</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Delete one item with invalid biId" id="80fbcf5d-1b34-4f9d-9686-02d674afa62c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>bccdd447-0a75-4474-8bc9-fa822e114224</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>490</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BI_WITH_ID_NOT_FOUND</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot delete one item with invalid biId" id="1e028cfd-a25a-43db-bef8-6615135a4f9a">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9ae88cad-70e1-4d39-94e0-5ba81e7853ec</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>80fbcf5d-1b34-4f9d-9686-02d674afa62c</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="c821ec29-eb67-4247-a55d-83d66e6ecf9c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>727603e9-be62-4fd9-adc3-d45842f7bc28</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>80fbcf5d-1b34-4f9d-9686-02d674afa62c</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="3bea6a06-246b-4b7a-b132-6b9ed77aa72b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>biNotFound</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for deleting one item with invalid itemId" id="e0621446-c102-41b3-a445-ae7e4a152aa3">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Delete one item with invalid itemId</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>itemId</con:name>
        <con:sourceType>notExistBIId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Delete one item with invalid itemId</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Delete one item with invalid itemId" id="390dbd44-4dbb-49b8-99d2-1a637efcfd37">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>bccdd447-0a75-4474-8bc9-fa822e114224</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BI_ITEM_WITH_ID_NOT_FOUND</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot delete one item with invalid itemId" id="6bed7fea-ff87-447f-8107-e07716bf7f40">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ce4cc993-25f6-4177-8f2b-27290e45fd54</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>390dbd44-4dbb-49b8-99d2-1a637efcfd37</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="12af03f5-53f0-47ef-af5d-69dd597adf6c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>59ee8251-622b-4c4f-a6a5-6378ab0e5938</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>390dbd44-4dbb-49b8-99d2-1a637efcfd37</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="4add2ccd-04e6-47e1-be4f-d128ea32dea5">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgBiItemIdWithIdNotFound</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for deleting one item with noneAssociateId" id="e7e10db1-1072-44f9-ab29-414c191aa979">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Delete one item with noneAssociateId</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>wrongItemId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item to stock out business interaction</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Delete one item with noneAssociateId</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Delete one item with noneAssociateId" id="52f46d67-5135-44bc-94fa-f2df64e5fc3f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>bccdd447-0a75-4474-8bc9-fa822e114224</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BI_ITEM_WITH_ID_NOT_FOUND</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot delete one item with noneAssociateId" id="ea173c49-087b-4fab-a016-1159b6c6f475">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9769e8ce-db1a-45b5-a77f-fcc14a641676</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>52f46d67-5135-44bc-94fa-f2df64e5fc3f</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="495905ed-f115-4281-9878-03e10d8422d6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>54bbc1d9-52b7-4b6f-b337-e3a918228ffc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>52f46d67-5135-44bc-94fa-f2df64e5fc3f</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="3d25f03d-4bf6-4e8a-9357-09d7551168ab" disabled="true">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgBI_ITEM_WITH_ID_IS_NOT_IN_BI_WITH_ID</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d6545e39-2509-4071-9780-86c404f699d8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>52f46d67-5135-44bc-94fa-f2df64e5fc3f</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals 3" id="348d25de-1f76-4c31-974c-18b790cdda98">
          <con:configuration>
            <patternText>BI_ITEM_WITH_ID_NOT_FOUND</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for displaying items of stockout bi" id="c4fe067a-9314-4147-beec-d9f693486881">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>bi id</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display items of stockout bi</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display items of stockout bi" id="f6de65a0-f722-451f-8c59-43dce6be3917">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>6667f206-8494-405c-a243-a3c102438a0d</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_firstItemQuantity</con:name>
        </con:property>
        <con:property>
          <con:name>res_firstItemProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_firstItemId</con:name>
        </con:property>
        <con:property>
          <con:name>res_secondItemQuantity</con:name>
        </con:property>
        <con:property>
          <con:name>res_secondItemProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_secondItemId</con:name>
        </con:property>
        <con:property>
          <con:name>response</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for displaying items of stockout bi" id="76cd5a83-1836-4875-a327-69b1705fb318">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4479cafe-e05a-4b8a-bf3b-5346af4eb9d2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f6de65a0-f722-451f-8c59-43dce6be3917</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="b8732a3a-c50d-419c-b2b3-efb735b1352f">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for deleting one item from stockout bi" id="493d6dff-bc9d-41e3-82e2-4839d43e07e4">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Delete one stockout bi item</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>itemId</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add item to stock out business interaction</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Delete one stockout bi item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Delete one stockout bi item" id="797761a1-3aae-468a-a9ec-42d6e63199bd">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>bccdd447-0a75-4474-8bc9-fa822e114224</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>490</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for deleting one stockout item" id="04c97530-3f5c-40ba-8515-f716090d145c">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>adb7fd81-020a-4b04-bfc9-abbd6ee4e622</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>797761a1-3aae-468a-a9ec-42d6e63199bd</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="c2a83422-d37d-42ce-b80a-4efa35bf8adb">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Dynamic variables for new product ids after add operation" id="4b614fdc-aff9-42ee-b8e9-0e8587d3c2e5">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>NonSerializedNewProductId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedNewProductId</con:name>
          <con:value>61</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedWithoutRangeNewProductId</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>NonSerialized2NewProductId</con:name>
          <con:value>68</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource add stock out items" id="053ec2c4-5854-498d-b362-9a39d62bf43c">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">NonSerialized</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#TestCase#NonSerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#remainingQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#NonSerializedNewProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userToken}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Serialized</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#TestCase#SerializedProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#SerializedNewProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userToken}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">SerializedWithoutRange</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityOne}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${#TestCase#SerializedWithoutRangeProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityOne}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityOne}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#SerializedWithoutRangeNewProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#userToken}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products#salesOrgRoleId}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">NonSerialized2</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductId2}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockOutQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#remainingQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#stockInQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#NonSerialized2NewProductId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products 2#userRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products 2#salesOrgRoleId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products 2#userToken}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Create initial data and products 2#salesOrgRoleId}</con:entry></xml-fragment>]]></row>
        </con:configuration>
      </con:dataSource>
      <con:property>trackingType</con:property>
      <con:property>productSpecExtId</con:property>
      <con:property>stockOutQuantity</con:property>
      <con:property>productId</con:property>
      <con:property>stockLevelReservedQuantity</con:property>
      <con:property>stockLevelQuantity</con:property>
      <con:property>stockLevelTotalQuantity</con:property>
      <con:property>newProductId</con:property>
      <con:property>userRoleId</con:property>
      <con:property>salesOrgRoleId</con:property>
      <con:property>userToken</con:property>
      <con:property>userSo</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen stockLevel quantities" id="57bc7f51-9a2d-4805-9ec5-86cf2645a0b4">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>int stockOutQuantity = context.expand( '${DataSource add stock out items#stockLevelQuantity}' ).toInteger();
return stockOutQuantity;</script>
        </con:configuration>
        <con:name>stockLevelQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>int stockLevelTotalQuantity = context.expand( '${DataSource add stock out items#stockLevelTotalQuantity}' ).toInteger();
return stockLevelTotalQuantity;</script>
        </con:configuration>
        <con:name>stockLevelTotalQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>int stockLevelReservedQuantity = context.expand( '${DataSource add stock out items#stockLevelReservedQuantity}' ).toInteger();
return stockLevelReservedQuantity;</script>
        </con:configuration>
        <con:name>stockLevelReservedQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def userToken = context.expand( '${DataSource add stock out items#userToken}' )

return userToken.toString();</script>
        </con:configuration>
        <con:name>userToken</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def headerSo = context.expand( '${DataSource add stock out items#userSo}' )

return headerSo.toString();</script>
        </con:configuration>
        <con:name>headerSo</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for creating new stockout business interaction" id="545ff374-918c-4261-b297-82546f0c23ae">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create new stockout business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create new stockout business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create new stockout business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>DataGen stockLevel quantities</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>userSo</con:name>
        <con:sourceType>headerSo</con:sourceType>
        <con:sourceStep>DataGen stockLevel quantities</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create new stockout business interaction" id="d5b9fa71-c53b-410d-990e-fd3086a033b7">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>${Create initial data and products 2#userRoleId}</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>${Create initial data and products 2#salesOrgRoleId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for creating new stockout business interaction" id="15bc9527-e492-4b47-94da-c04750b93d72">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>73c22076-87ba-4107-be24-f255ae0fde63</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d5b9fa71-c53b-410d-990e-fd3086a033b7</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="49b4f105-b50c-4144-936f-21db67112be8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>bc294a1e-d994-4fc7-9082-c1cd81479cc2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d5b9fa71-c53b-410d-990e-fd3086a033b7</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="d6582529-a72d-448b-8db6-66e5e24143c4">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for dynamic biIds" id="8e06b189-371a-4cc1-b8e0-b60f5e51bc2f">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def biId = context.expand( '${Create new stockout business interaction#res_biId}' )
def productType = context.expand( '${DataSource add stock out items#trackingType}' )

testRunner.testCase.testSteps['Dynamic stockout bi ids'].setPropertyValue(productType+"BiId", biId.toString());</script>
        </con:configuration>
        <con:name>dynamicBiId</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set another add item properties" id="daebb8fc-261d-4a93-a8aa-84d4e98906ce">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new stockout business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add another item to stock out business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>productId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add another item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>stockOutQuantity</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add another item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add another item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add another item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add another item to stock out business interaction" id="ff7967bd-456c-4c63-9b0d-e7ecc3f88211">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Given properties for the test steps#NonSerializedProductId2}</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>501</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>${Given properties for the test steps#stockOutQuantity}</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>68</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert another bi item is added" id="2f6c7fa8-28af-4875-9686-237e7ee9a6b2">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>a5d63adf-9ec6-4160-9e3c-bfda2b3ae22e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="aebec750-f9e5-4c96-b591-a1647d2ddfd0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for dynamic new product id" id="14ecc2b9-9de0-457c-8c25-9909d047a038">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def newProductId = context.expand( '${Add another item to stock out business interaction#res_new_product_id}' )
def productType = context.expand( '${DataSource add stock out items#trackingType}' )

testRunner.testCase.testSteps['Dynamic variables for new product ids after add operation'].setPropertyValue(productType+"NewProductId", newProductId.toString());</script>
        </con:configuration>
        <con:name>newProductId</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set display stock level and lock control" id="e567d41f-bbeb-4d65-b285-62edf1748f1b">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>productSpecExtId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>req_placeId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add another item to stock out business interaction</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level" id="2df82efe-ee67-4c39-a4e6-0e65f23b3e3b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>${Given properties for the test steps#NonSerializedProductSpecExtId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock" id="36204ccd-66bc-4839-be3d-4309e443c350">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>68</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>68</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>501</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock" id="dbf730cf-d384-4750-a7ea-720abff24e5b">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>86391d5f-95d5-4b79-856e-94aaef8356ef</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2df82efe-ee67-4c39-a4e6-0e65f23b3e3b</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="c0098444-50cb-4a9e-84a7-85a55943c5da">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c0a10533-ab8b-42f6-aa99-ab2c44956507</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2df82efe-ee67-4c39-a4e6-0e65f23b3e3b</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="92240ab4-2dfd-4c04-95f2-d8392b16f9cc">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelTotalQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8301a0ad-7594-4363-ac37-66726c21c2af</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2df82efe-ee67-4c39-a4e6-0e65f23b3e3b</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="145a4a27-45b7-4f66-a67e-d271320b42d0">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelReservedQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c9ced9d1-c306-460d-88c1-665faa6c9bf6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>36204ccd-66bc-4839-be3d-4309e443c350</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id" id="f12be12b-b107-4693-8187-4c7acbb31333">
          <con:configuration>
            <patternObjectId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>88799167-83eb-444a-8b6f-1e078c37f698</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>36204ccd-66bc-4839-be3d-4309e443c350</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id" id="84de5f83-2ad8-460c-b0c5-21ad8c35e79c">
          <con:configuration>
            <patternObjectId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding locked item properties" id="a5c033b3-f39e-44dc-9bd0-fcb067c2a141">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new stockout business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add locked item to stock out business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>newProductId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add locked item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>stockOutQuantity</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add locked item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add locked item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add locked item to stock out business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add locked item to stock out business interaction" id="c12810be-37b2-4ce2-ac8e-bc99e0f8690d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Dynamic variables for new product ids after add operation#NonSerialized2NewProductId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>PRODUCT_WITH_ID_ALREADY_LOCKED_BY_BI_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>${Given properties for the test steps#stockOutQuantity}</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert cannot add locked item to bi" id="f99bff66-87a2-483a-8e07-065c4ce972f9">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>45a204e9-a239-40d2-b35a-980fa1e529e4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c12810be-37b2-4ce2-ac8e-bc99e0f8690d</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="b5ad05ca-6493-45fd-90de-5b0c2f5d191d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5377b89b-fe08-463a-bd4f-021eee521fa3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c12810be-37b2-4ce2-ac8e-bc99e0f8690d</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error locked message" id="1d2e079a-768e-4648-b1e5-2aecbfeae107">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMessageAddingLockedProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control after failure locked product add" id="1f87b5d4-c5a1-48c4-a889-57015cc27b21">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>productSpecExtId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after failure locked product add</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>req_placeId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after failure locked product add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>newProductId</con:sourceType>
        <con:sourceStep>DataSource add stock out items</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after failure locked product add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after failure locked product add" id="d43f9b28-a063-4c52-ac85-59ad522245b4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>${Given properties for the test steps#NonSerializedProductSpecExtId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after failure locked product add" id="918352fa-4401-4d85-b925-b43ef3638d9f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Dynamic variables for new product ids after add operation#NonSerialized2NewProductId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>68</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>501</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock after failure locked product add" id="494788bd-15b5-42ee-a339-d10fb6355cbb">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ad68c909-f68d-457d-8c75-99e5e6fcc51d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d43f9b28-a063-4c52-ac85-59ad522245b4</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="98882bf0-d75c-46f3-a737-a74869155c3d">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f2acb0bb-3452-44a7-bc23-06bd710edd71</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d43f9b28-a063-4c52-ac85-59ad522245b4</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="ad916892-c43a-48a5-b599-cd920416193a">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelTotalQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>3e640184-c66d-476f-bd91-084cd7d11647</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d43f9b28-a063-4c52-ac85-59ad522245b4</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="bc6b56b8-a0af-4688-9b9b-33723a7fa301">
          <con:configuration>
            <patternObjectId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</patternObjectId>
            <patternProperty>stockLevelReservedQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a6b0b688-d2ac-4e15-b302-3a3469b078bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>918352fa-4401-4d85-b925-b43ef3638d9f</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id for lock" id="69e2199c-d07f-425c-8c16-0d2341e555be">
          <con:configuration>
            <patternObjectId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2dc500c5-95c6-42b1-97ab-ba4fd2328ad7</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>918352fa-4401-4d85-b925-b43ef3638d9f</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi item id for lock" id="fbf7a975-1b67-4a25-a866-8560717c0fce">
          <con:configuration>
            <patternObjectId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop add stockout items" id="1f75ee72-a3ed-4184-8ab0-6cb3b8e07e6e">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource add stock out items</dataSourceStep>
      <targetStep>DataGen stockLevel quantities</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Dynamic stockout bi ids" id="b702f884-76b1-403e-9915-caf29785d106">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>NonSerializedBiId</con:name>
          <con:value>2181</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedBiId</con:name>
          <con:value>2191</con:value>
        </con:property>
        <con:property>
          <con:name>SerializedWithoutRangeBiId</con:name>
          <con:value>2201</con:value>
        </con:property>
        <con:property>
          <con:name>NonSerialized2BiId</con:name>
          <con:value>2211</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource submit stockout bi" id="ff349081-a4f0-4f23-8407-fbbc06573ed1">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic stockout bi ids#NonSerializedBiId}&lt;/con:entry>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></row>
          <row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic stockout bi ids#SerializedBiId}&lt;/con:entry>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></row>
          <row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic stockout bi ids#SerializedWithoutRangeBiId}&lt;/con:entry>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></row>
          <row>&lt;xml-fragment>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic stockout bi ids#NonSerialized2BiId}&lt;/con:entry>&lt;con:entry xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></row>
        </con:configuration>
      </con:dataSource>
      <con:property>biId</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id to submit" id="67fe2a85-30a2-4b02-bb89-be7af5fabda2">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>biId</con:sourceType>
        <con:sourceStep>DataSource submit stockout bi</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out business interaction" id="95b2bcb4-435f-4d9f-a1c4-12bd921a1d2d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>${Dynamic stockout bi ids#NonSerialized2BiId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is submitted successfully" id="961805be-6245-4be4-9262-4783005da7fd">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>06a9c327-56e8-41d8-9e00-c428cee82d7c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>95b2bcb4-435f-4d9f-a1c4-12bd921a1d2d</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d4840e50-1e3c-4e39-b511-ef63fb05633c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8e7e09d5-06d4-4530-90b8-c4849e63b32a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>95b2bcb4-435f-4d9f-a1c4-12bd921a1d2d</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="3f4bb44d-aae4-40cd-82dc-00dafcd96841">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop submit stockout bi" id="3a605269-0d48-4a51-9ff7-d01722f7f0bc">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource submit stockout bi</dataSourceStep>
      <targetStep>Set bi id to submit</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource submitted product stock level" id="d9f07acc-ffd8-4278-a491-e15066bfcbc5">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">NonSerialized</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#remainingQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#remainingQuantity}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#NonSerialized2NewProductId}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Serialized</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#SerializedNewProductId}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">SerializedWithoutRange</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductSpecExtId}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityZero}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Dynamic variables for new product ids after add operation#SerializedWithoutRangeNewProductId}</con:entry></xml-fragment>]]></row>
        </con:configuration>
      </con:dataSource>
      <con:property>productTrackingType</con:property>
      <con:property>productSpecExtId</con:property>
      <con:property>stockLevelQuantity</con:property>
      <con:property>stockLevelTotalQuantity</con:property>
      <con:property>stockLevelReservedQuantity</con:property>
      <con:property>newProductId</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen stockLevel quantities 2" id="f9e7728e-7bec-41f4-a8a3-ce1456cb08eb">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>int stockOutQuantity = context.expand( '${DataSource submitted product stock level#stockLevelQuantity}' ).toInteger();
return stockOutQuantity;</script>
        </con:configuration>
        <con:name>stockLevelQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>int stockLevelTotalQuantity = context.expand( '${DataSource submitted product stock level#stockLevelTotalQuantity}' ).toInteger();
return stockLevelTotalQuantity;</script>
        </con:configuration>
        <con:name>stockLevelTotalQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>int stockLevelReservedQuantity = context.expand( '${DataSource submitted product stock level#stockLevelReservedQuantity}' ).toInteger();
return stockLevelReservedQuantity;</script>
        </con:configuration>
        <con:name>stockLevelReservedQuantity</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set display stock level and lock" id="712f11f1-afc4-4e54-9e80-b6352ed85a89">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>productSpecExtId</con:sourceType>
        <con:sourceStep>DataSource submitted product stock level</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>newProductId</con:sourceType>
        <con:sourceStep>DataSource submitted product stock level</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock 2</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level control" id="7d8e017e-6f3c-40fc-8a6c-439471e16de2">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>${Given properties for the test steps#SerializedWithoutRangeProductSpecExtId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-GALAXYNOTE4-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock 2" id="b6dee659-2740-44af-9653-ae2fb3246d6b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Dynamic variables for new product ids after add operation#SerializedWithoutRangeNewProductId}</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>62</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display submitted products stock levels and lock" id="37f8cd23-d985-4830-a7aa-9ad2a9482b3d">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>560801c8-9f4b-4a5d-b87d-6828171448c0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b6dee659-2740-44af-9653-ae2fb3246d6b</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id empty" id="a87c02d5-0690-4559-ba58-b6753f0a3d40">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>031b2056-baf6-4b20-847b-bb0e864c75a6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b6dee659-2740-44af-9653-ae2fb3246d6b</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains item id empty" id="b76d0bb6-b0fe-49e4-a623-22ebb58cf702">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8e4605c1-238c-496a-bf27-6a07a409e18d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b6dee659-2740-44af-9653-ae2fb3246d6b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="54e78097-5753-4c01-ac37-0fa1b26476ee">
          <con:configuration>
            <patternText>200</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>281d08f0-2701-4fb2-bbb5-751010b11734</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7d8e017e-6f3c-40fc-8a6c-439471e16de2</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals 2" id="619a23dd-fe85-468b-8bd6-1095942cf434">
          <con:configuration>
            <patternText>200</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a0d70fc3-6dec-4cf6-86ce-610fe5bdf8dc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b6dee659-2740-44af-9653-ae2fb3246d6b</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple NotContains" name="Not Contains" id="f5581262-2b62-4541-9730-2874f015c3ac">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop submitted stock level" id="162a285d-8e8c-41d3-8c45-a90b9b3b13c9">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource submitted product stock level</dataSourceStep>
      <targetStep>DataGen stockLevel quantities 2</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id to submit which is already submitted" id="6c790ce4-a681-41ad-a155-04ca1851869d">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Submit stock out business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out business interaction which is already submitted</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out business interaction which is already submitted" id="e0086b9d-44e7-4047-b8a0-ea43046f24e4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>NEXT_STATE_NOT_FOUND</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is submitted which is already submitted" id="7ddda1c5-e48e-4fe8-a9b1-f7a283d4ea85">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d592cd3e-3573-4647-84ad-973b9d0ebbd1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e0086b9d-44e7-4047-b8a0-ea43046f24e4</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="0e472ee6-8d18-4b93-a6f5-fd9e0c5d4c53">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4f82644c-7da0-4d06-add9-090b6094c05f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e0086b9d-44e7-4047-b8a0-ea43046f24e4</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="0598e54c-41d2-4b6e-8d7a-f249bca91f34">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgNextStateNotFound</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for retrieving single bi with invalid id" id="be9286aa-3829-4cb8-94f5-187e738a30a1">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>invalidId</con:name>
        <con:sourceType>notExistBIId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Retrieve single bi with invalid id</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Retrieve single bi with invalid id" id="9041027e-cea7-4be0-a4e2-f1d2afa03e62">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b26c29e4-8386-4cb1-b869-b135718eede8</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_mainState</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_state</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_tag1TransactionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_tag2CorrelationId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_mainState</con:entry>
        <con:entry>res_state</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert cannot retrieve single stock out bi with invalid id" id="092b44c6-01d8-4d90-8e3f-d0ae7cbdc8c8">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>a8521752-ce5b-46f1-b43c-a958bbdf6c81</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9041027e-cea7-4be0-a4e2-f1d2afa03e62</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="0b910937-2aa5-47e6-a5b2-4699a0d7dd01">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e6684ca7-d0e8-4b5f-a40a-37cd340296af</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9041027e-cea7-4be0-a4e2-f1d2afa03e62</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="c914ead4-1913-414d-90b8-cc402fac49b7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set bi id to retrieve single" id="e36e80f7-f824-4d92-86de-4d14d6faaa37">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Submit stock out business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Retrieve single stock out bi</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Retrieve single stock out bi" id="440827eb-5902-47dc-9e26-b11a8e468d35">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b26c29e4-8386-4cb1-b869-b135718eede8</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_mainState</con:name>
          <con:value>Closed</con:value>
        </con:property>
        <con:property>
          <con:name>res_state</con:name>
          <con:value>Closed</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
        <con:property>
          <con:name>res_tag1TransactionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_tag2CorrelationId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_mainState</con:entry>
        <con:entry>res_state</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion retrieve single stock out bi" id="817cb5a0-e3e2-4058-84bc-b75038896709">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ff5c3a9d-27e7-489d-a3cc-368e6945a10f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>440827eb-5902-47dc-9e26-b11a8e468d35</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="55e44085-1fa4-41e7-8d41-79ac5dad1e98">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>39ce624e-07c0-478a-9e7a-9129511af05c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>440827eb-5902-47dc-9e26-b11a8e468d35</con:sourceId>
        <con:propertyName>res_mainState</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals main state" id="b2fc0fc5-b644-4326-9048-7413cde1e31d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>mainStateClosed</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f355e156-9516-491f-bffc-531c4ba322fd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>440827eb-5902-47dc-9e26-b11a8e468d35</con:sourceId>
        <con:propertyName>res_state</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals state" id="ca99ff7b-b9bc-425c-b393-c0f6579bd977">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>stateClosed</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for displaying one stockout item with invalid biId" id="831a86a0-e7ca-49fd-bb28-76d2280707eb">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>invalidBiId</con:name>
        <con:sourceType>notExistBIId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display one stockout item with invalid biId</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>itemId</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add another item to stock out business interaction</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Display one stockout item with invalid biId</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display one stockout item with invalid biId" id="2020f966-8150-4778-b817-e107eece49e9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>7be6e7d3-277b-4f9a-8e57-c22b188a8c9e</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>501</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
        <con:property>
          <con:name>res_newProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>404</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot display one stockout item with invalid biId" id="eee987a5-9def-4bd7-a35f-b0903dbcaca7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ba2bf99d-9ad6-4519-8115-717dd3f9c6d4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2020f966-8150-4778-b817-e107eece49e9</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="ff0f0fc0-6c90-4b5c-97c7-941d222bf176">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2613d174-62e6-4e2a-8fea-54ca781c0d27</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2020f966-8150-4778-b817-e107eece49e9</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="8a6d9d4d-5e9d-45b7-8ca7-591ce9830001">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for displaying one stockout item with invalid itemId" id="61ab7547-c53d-4715-b0fa-7f02d3da032f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create new business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display one stockout item with invalid itemId</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>invalidItemId</con:name>
        <con:sourceType>notExistBIId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Display one stockout item with invalid itemId</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display one stockout item with invalid itemId" id="73211513-e0bd-4d00-a4a3-26124996d026">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>7be6e7d3-277b-4f9a-8e57-c22b188a8c9e</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2171</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>404</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
        <con:property>
          <con:name>res_newProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>404</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot display one stockout item with invalid itemId" id="36eaffd7-b671-46f7-9956-a8beabc092f5">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>8586df0b-66ba-42c0-bd7e-b8c686500f97</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>73211513-e0bd-4d00-a4a3-26124996d026</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="2175099e-552c-47d2-bfe1-3966f6430fff">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>438e5d0c-a77f-4fa2-ad2c-792e95c7eaf3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>73211513-e0bd-4d00-a4a3-26124996d026</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="a94c3723-2d9f-4a9a-a3fc-4efdf6964008">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode404</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Retrieve all stock out business interactions" id="de463ff7-bcbb-41cd-a54d-5a10ddc7036a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>08c66daa-4c3e-4c7f-8505-dda4f3fc7ce2</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion retrieve all stock out business interactions" id="522e49fd-a5dd-470b-b197-213e4d918b73">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>004e606b-f7fd-4afe-a1f0-9d4633b87f1c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>de463ff7-bcbb-41cd-a54d-5a10ddc7036a</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1d7a9f63-f9b4-402b-a835-62706c45a45d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set add item properties to which is already closed" id="e701cfed-1b09-441a-942d-21e79a2773bf">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Submit stock out business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out business interaction which is already closed</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out business interaction which is already closed</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>stockInQuantity</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out business interaction which is already closed</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out business interaction which is already closed</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out business interaction which is already closed</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out business interaction which is already closed" id="6683ae48-ff80-4576-9253-ee6c82633a6c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2211</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>BI_MUST_BE_IN_DRAFT_OR_ONGOING_STATE</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>292</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item is not added" id="add21877-e2d1-4973-8dab-be03625198cd">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3e884b32-a0c3-46b1-bb58-6ea3f1b64434</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6683ae48-ff80-4576-9253-ee6c82633a6c</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="f838bfdd-e461-42e1-b562-7746d7a21324">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2e6516a8-b605-435c-84ad-562a91298d30</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6683ae48-ff80-4576-9253-ee6c82633a6c</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error message" id="9a7f2697-f248-4c93-95c4-e2d29826e28d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgBiMustBeInDraftorOngoing</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for stock level and lock control 2" id="67f38b7d-f3bc-4718-81da-19a0cab2055f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after failure add operation</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after failure add operation</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productID</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock control after failure add operation</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after failure add operation" id="787504e8-c845-4f9f-a8c1-2b28224912ec">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock control after failure add operation" id="68411978-8bf8-4751-8300-1ba20b73fccb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert product stock level and lock after failure add operation" id="85c3a28c-31b8-4a2b-be76-e070427509b0">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>55b8c841-d6ed-4414-a84d-977708930f51</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>787504e8-c845-4f9f-a8c1-2b28224912ec</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="674ebc6f-1d34-41b8-abb5-c877121e8786">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>remainingQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0e957d68-9314-4ae3-aace-6d187c06baab</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>787504e8-c845-4f9f-a8c1-2b28224912ec</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="dcdc0cf3-b223-4972-8a21-104e0bb8bd5b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>remainingQuantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c23ff2f6-a68e-4539-99c5-aed7c6842ca6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>787504e8-c845-4f9f-a8c1-2b28224912ec</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="b5a95314-fe68-497e-bf09-5dfc75c5fab9">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e9a1f2d7-2733-4289-a228-82e47754888d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>68411978-8bf8-4751-8300-1ba20b73fccb</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals res code" id="dc9acb15-9abf-446a-a306-0d1cfca8b6c7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>33352eb7-5b84-4bbc-92cc-d72fe46c8f89</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>68411978-8bf8-4751-8300-1ba20b73fccb</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains biId" id="8a939ebc-c604-4c94-8293-0bc0b6e6dabe">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>42f7fa26-af56-46b6-bbe0-8400df6c8a53</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>68411978-8bf8-4751-8300-1ba20b73fccb</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi item id" id="8a86961b-d08c-498e-8a95-37e31d5807cb">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for total quantity in out of org place" id="5f349ddc-7455-4936-9099-e2c10e1c4474">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>int currentQuantityInOutOfOrgPlaceForNonSerializedProduct = context.expand( '${Given properties for the test steps#currentQuantityInOutOfOrgPlaceForNonSerializedProduct}' ).toInteger();
int stockOutQuantity = context.expand( '${Given properties for the test steps#stockOutQuantity}' ).toInteger();
int totalQuantityInOutOfOrgPlaceForNonSerializedProduct = currentQuantityInOutOfOrgPlaceForNonSerializedProduct + stockOutQuantity + stockOutQuantity; 

return totalQuantityInOutOfOrgPlaceForNonSerializedProduct;</script>
        </con:configuration>
        <con:name>totalQuantityInOutOfOrgPlaceForNonSerializedProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for product query after stock out for out of org control" id="e588bdd6-6385-494a-b62f-14c63a68a7a3">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpectExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Product infos</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query after stock out for out of org control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query after stock out for out of org control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query after stock out for out of org control" id="3cdf65f3-d088-4fa5-9fd5-c8ff4779bb51">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>68</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>140</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T setting for total quantity in out of org place" id="ea445caa-6b33-4fc1-9c00-927db4167a55">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>lastQuantity</con:name>
        <con:sourceType>res_quantityOutOfOrg</con:sourceType>
        <con:sourceStep>Product query after stock out for out of org control</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>totalQuantityInOutOfOrgPlaceForNonSerializedProduct</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert control total quantity for out of org place" id="33a0fdff-76b5-473f-8a57-a5b415c0645d">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>60717933-1c9e-4ea4-963f-4bd186b4c7d3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3cdf65f3-d088-4fa5-9fd5-c8ff4779bb51</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="814c4377-449d-4dbf-838c-61728b0345fe">
          <con:configuration>
            <patternObjectId>5f349ddc-7455-4936-9099-e2c10e1c4474</patternObjectId>
            <patternProperty>totalQuantityInOutOfOrgPlaceForNonSerializedProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T. for getting active session of user" id="8df07525-49ee-4009-b225-708000fd3560">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userID</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userId</con:targetType>
        <con:targetStep>Get a single user's active session</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Get a single user's active session" id="c469eedf-1d4f-4b3b-aae2-f27520182608">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>386bb547-46b2-440b-b144-5beef75aa635</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>res_activeSessionId</con:name>
          <con:value>2161</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_initialAccountAmount</con:name>
        </con:property>
        <con:property>
          <con:name>res_transactionalAccountAmount</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_activeSessionId</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert active session received successfully" id="c384ab6e-24f6-4a0d-80d9-6b8cc3673aa9">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>fb2d77ee-1661-49c7-bd13-e335d250dbdd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c469eedf-1d4f-4b3b-aae2-f27520182608</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success" id="bae90ea7-432f-40e2-92cd-132a68b559e8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>43ff9bbf-e6a8-420d-a755-7c051b1d7219</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c469eedf-1d4f-4b3b-aae2-f27520182608</con:sourceId>
        <con:propertyName>res_activeSessionId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="ced50b46-5363-4dbf-a1f4-02fba3b52e28">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for getting product movements of session" id="a6e8a86b-a1b9-4eae-86c3-d13bd4678511">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>activeSessionId</con:name>
        <con:sourceType>res_activeSessionId</con:sourceType>
        <con:sourceStep>Get a single user's active session</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_activeSessionId</con:targetType>
        <con:targetStep>Get product movements of session</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Get product movements of session" id="5170fe0e-5d0d-4601-aca7-ee180e68a98e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>e186105e-ef9b-4f73-b09a-8686d26538be</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_activeSessionId</con:name>
          <con:value>2161</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_body</con:name>
          <con:value>[]</con:value>
        </con:property>
        <con:property>
          <con:name>res_generatorBIId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_generatorFirstItemBIId</con:entry>
        <con:entry>res_generatorSecondItemBIId</con:entry>
        <con:entry>res_generatorThirdItemBIId</con:entry>
        <con:entry>res_body</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for controlling bi ids" id="e89af1f3-9fb8-40bc-b183-8837cf1fc42d">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script><![CDATA[int biContainsControl=1;//true

def serializedBiId = context.expand( '${Dynamic stockout bi ids#SerializedBiId}' )
def serializedWithoutRangeBiId = context.expand( '${Dynamic stockout bi ids#SerializedWithoutRangeBiId}' )
def nonSerializedBiId = context.expand( '${Dynamic stockout bi ids#NonSerializedBiId}' )

def res_generatorSecondItemBIId = context.expand( '${Get product movements of session#res_generatorSecondItemBIId}' )
def res_generatorThirdItemBIId = context.expand( '${Get product movements of session#res_generatorThirdItemBIId}' )
def res_generatorFirstItemBIId = context.expand( '${Get product movements of session#res_generatorFirstItemBIId}' )


if(!res_generatorSecondItemBIId.equals("") && (!res_generatorSecondItemBIId.equals(serializedBiId) && !res_generatorSecondItemBIId.equals(serializedWithoutRangeBiId) && !res_generatorSecondItemBIId.equals(nonSerializedBiId)))
biContainsControl=0;

if(!res_generatorThirdItemBIId.equals("") && (!res_generatorThirdItemBIId.equals(serializedBiId) && !res_generatorThirdItemBIId.equals(serializedWithoutRangeBiId) && !res_generatorThirdItemBIId.equals(nonSerializedBiId)))
biContainsControl=0;

if(!res_generatorFirstItemBIId.equals("") && (!res_generatorFirstItemBIId.equals(serializedBiId) && !res_generatorFirstItemBIId.equals(serializedWithoutRangeBiId) && !res_generatorFirstItemBIId.equals(nonSerializedBiId)))
biContainsControl=0;

return biContainsControl;]]></script>
        </con:configuration>
        <con:name>containsBiIdWithinMovementBI</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert product movements of session is received successfully" id="dffc6415-535f-48d1-b943-624ea1db7a6a">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>171164ca-bc2a-496d-adfe-ef566eabe38d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5170fe0e-5d0d-4601-aca7-ee180e68a98e</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="2ebaaa64-814e-44ea-9c13-855caeffa629">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2b021508-36f8-4cb0-846c-2a77b37e6a2a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e89af1f3-9fb8-40bc-b183-8837cf1fc42d</con:sourceId>
        <con:propertyName>containsBiIdWithinMovementBI</con:propertyName>
        <con:assertion type="Simple Equals" name="biContainsControl" id="c2031688-482e-49a1-8f03-fbca544e0953">
          <con:configuration>
            <patternText>1</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="TODO Detailed control for product movement" id="ed951808-78e1-4278-9f08-273a5c8a71a8">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating and submitting end session bi" id="6b9c9a81-c229-475a-93dd-89c907ea36de">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create and submit end session bi</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrgRoleId</con:targetType>
        <con:targetStep>Create and submit end session bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create and submit end session bi" id="04bd6603-ff60-415f-860e-7e7c2cc165a9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a66f1305-af6e-491f-81cf-d1647cb6fb4a</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrgRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2221</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert end session bi is created and submitted  successfully" id="72a551a2-4191-480a-82b4-3717b2605be4">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>c96e070f-d5a0-4e2a-b998-b9b8f1dadac5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>04bd6603-ff60-415f-860e-7e7c2cc165a9</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id" id="4b5a88fe-eb41-45f7-b258-cca3c7c04969">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource for stock out with different product statuses" id="0c4498c7-0246-469b-b1f7-45ce843d1573">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">IPHONE 6S 4.7' 32GB A7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Galaxy Note 4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Apple Mouse</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">IPHONE 6S 4.7' 32GB A7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Damaged</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusDamaged}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">IPHONE 6S 4.7' 32GB A7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Lost</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusLost}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">IPHONE 6S 4.7' 32GB A7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">NonSellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusNonSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">IPHONE 6S 4.7' 32GB A7</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-IPHONE6S-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sold</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSold}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Galaxy Note 4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Damaged</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusDamaged}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Galaxy Note 4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Lost</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusLost}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Galaxy Note 4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">NonSellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusNonSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Galaxy Note 4</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#SerializedWithoutRangeProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-GALAXYNOTE4-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sold</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSold}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Apple Mouse</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Damaged</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusDamaged}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Apple Mouse</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Lost</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusLost}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Apple Mouse</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">NonSellable</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusNonSellable}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">Apple Mouse</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">EXT-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#NonSerializedProductIdDifferentStatus}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CODE-APPLMOUSE-1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Sold</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#statusSold}</con:entry></xml-fragment>]]></row>
        </con:configuration>
      </con:dataSource>
      <con:property>description</con:property>
      <con:property>prodSpecExtId</con:property>
      <con:property>productId</con:property>
      <con:property>prodSpecCode</con:property>
      <con:property>statusName</con:property>
      <con:property>statusValue</con:property>
      <con:startRow/>
      <con:endRow/>
      <con:recordsPerIteration>1</con:recordsPerIteration>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:gotoLoopOnEmpty>false</con:gotoLoopOnEmpty>
      <con:trimValues>false</con:trimValues>
      <con:entitizeValues>false</con:entitizeValues>
      <con:restartOnRun>true</con:restartOnRun>
      <con:expandProperties>false</con:expandProperties>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Set one quantity for create product" id="0e632e09-ffaa-4715-99c8-3ba080116b8e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Create products for status change</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create products for status change" id="d3b27b2a-d8c7-49af-b091-473c4ad95f29">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>5e4beeb6-f397-47ec-8202-d19549f54f59</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>userRoleId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>salesOrgRoleId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>inventoryId</con:name>
          <con:value>74</con:value>
        </con:property>
        <con:property>
          <con:name>terminalId</con:name>
          <con:value>18</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductId</con:name>
          <con:value>70</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductStartSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>serializedWithoutRangeProductSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeProductSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_nonSerializedProductSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>userToken</con:name>
          <con:value>Bearer eyJraWQiOiIxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJVTVMtUHJlZmlsdGVyLUNoZWNrQXV0aG9yaXplIiwic3ViIjoiVEVTVCIsImF1ZCI6IlJNIiwiaWF0IjoxNDg3MTYwOTc5LCJleHAiOjE1NTI2Mzc3MzEsImF1dGhfdGltZSI6IjEzMTEyODA4NzAiLCJub25jZSI6Im4tMFM2X1d6QTJNaiIsIm5hbWUiOiJVTVMgVGVzdCBVc2VyIiwieF9kYnNzIjp7ImF1dGh6UHJvZmlsZU5hbWUiOiJDU1JfQXV0aHpQcm9maWxlIiwidmVyc2lvbiI6InYxIiwicGFydHlfaWQiOiIxMjMiLCJleHRlcm5hbF91c2VybmFtZSI6InViNzhiZDRiYi0xZWQ2LTRlNGItYWQ3Mi0yMWNjZmViZjQyNjYifX0.c8c1u49GCAJIWgxrbTF9UlUUc4UohgApD4HAavuDLhEoAuU1B5AsnFnneVHu2mlYRuu0Qe7jaq696v09dT3QHl0x-H37pV5dyhld637JXyB-DedwmMmp1gLw-6hDsYLV3DbPA7DaKHQCUBTgWW0bpsmdrGGiRN3uKM3XpDpcGdQ</con:value>
        </con:property>
        <con:property>
          <con:name>userIntToken</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedBatchId</con:name>
        </con:property>
        <con:property>
          <con:name>res_serializedWithoutRangeBatchId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>userRoleId</con:entry>
        <con:entry>salesOrgRoleId</con:entry>
        <con:entry>placeId</con:entry>
        <con:entry>inventoryId</con:entry>
        <con:entry>terminalId</con:entry>
        <con:entry>serializedProductId</con:entry>
        <con:entry>serializedWithoutRangeProductId</con:entry>
        <con:entry>nonSerializedProductId</con:entry>
        <con:entry>userToken</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for creating products for stockout" id="5f717d8b-0757-494d-8abf-bc3212d3ad9c">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d9e95d69-4036-48e8-b491-31ba33ed2c58</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>userRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains user" id="ae3dd191-3779-44db-8fde-c70fcfc9f70b">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>df328cb3-e747-4973-bd51-80b4427f612b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>salesOrgRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains so" id="6bbc8735-5a42-4a26-b489-aaa424b118b1">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>37722d6e-d290-447f-b3cc-b5f47b9dbe44</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>placeId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains place" id="1c2349d7-2570-4d6d-8553-649c79f92ca1">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>954f84e4-ea03-4bb9-a48f-ebd40b4781ba</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>inventoryId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains inventory" id="403abcc7-b67f-441e-97f9-42ad20767427">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>3ef0576a-849c-4f69-9bf8-407efcf8ef4e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>terminalId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains terminal" id="a4d692f1-7d3e-428d-9c7a-18c0584ef8f6">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c6595e22-9f0e-486a-ab9a-42bafee78b46</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>serializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized" id="d9fdbb87-0f82-46aa-983f-b2fa291c0df8">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a1971509-dc48-444f-88a2-b9144918a970</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>serializedWithoutRangeProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized without" id="64c245e7-b365-4c96-8d11-f36ce256773d">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>73f45c7b-9d1a-479e-aad9-eacb31eb80a9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d3b27b2a-d8c7-49af-b091-473c4ad95f29</con:sourceId>
        <con:propertyName>nonSerializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains nonserialized" id="8cc2e335-e335-4354-a63f-847a74a59e1a">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for updating user token and so" id="20867e6d-aecb-4113-a533-f4a684dad888">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting product informations" id="dc582c6e-e89e-42c0-a285-6b196255e3ab">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>placeIdForDifferentProductStatuses</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>SerializedProductIdDifferentStatus</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProductId</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>NonSerializedProductIdDifferentStatus</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serializedWithoutRangeProductId</con:name>
        <con:sourceType>serializedWithoutRangeProductId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>SerializedWithoutRangeProductIdDifferentStatus</con:targetType>
        <con:targetStep>Given properties for the test steps</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting change product status params" id="80213d87-ad1f-467c-a8a5-56dfcdacc055">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true">
        <con:name>productId2</con:name>
        <con:sourceType>productId</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>req_userId</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>req_soId</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>finalStatus</con:name>
        <con:sourceType>statusName</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:targetType>req_finalStatus</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>productId</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Change product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Change product status" id="78122a01-5ea6-4ec2-b71e-cccaf42520bb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>0c7c3c39-9c96-48fa-b5cd-451c90e170cf</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>req_soId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:value>
        </con:property>
        <con:property>
          <con:name>req_finalStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_newProductId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2331</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_newProductId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_biId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi parameters" id="3a7a0f04-c597-4efa-b19c-cf9c222d5b2e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for different product status</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for different product status" id="ec3d15d7-f517-4a83-9403-142e7361511c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2341</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock out bi is created" id="757f8fe7-5be6-434a-9745-5d630e113593">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>33fa879e-7b33-4ba0-9411-3ca6238d8931</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ec3d15d7-f517-4a83-9403-142e7361511c</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id" id="df85d1bf-49a7-444f-8128-a9ad7712d8f2">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8ff3446e-cb68-48f6-83b3-1e6b258405f1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ec3d15d7-f517-4a83-9403-142e7361511c</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="e8cc65ca-186a-44f7-86a5-8db77efd2f8b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item properties" id="15ac880a-7c0e-473a-b70a-955d0472b642">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for different product status</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi for different product status</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>productId</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi for different product status</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi for different product status" id="f8d85e76-2530-402b-bf99-331de11d5548">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2341</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>${Given properties for the test steps#SerializedProductIdDifferentStatus}</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>515</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>69</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item is added successfully 2" id="6ec51e6d-f487-4ae1-b32b-f16d1bf2fe48">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>0df590cc-2250-4e3d-a277-af6997aaa154</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f8d85e76-2530-402b-bf99-331de11d5548</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success" id="82e8b950-7359-4f9f-a91a-e788ebda25f0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after add" id="5361f443-9ef4-4939-acaf-27fa4572d5d4">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>prodSpecExtId</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after add</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeIdForDifferentProductStatuses</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productStatus</con:name>
        <con:sourceType>statusValue</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:targetType>req_productStatus</con:targetType>
        <con:targetStep>Display product stock level after add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item to stock out bi for different product status</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after add" id="e8081845-df73-4ff0-87fe-8863459b2de3">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value>${Given properties for the test steps#statusSellable}</con:value>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after add" id="01eaa48b-c668-4071-a03f-56d2ca283a50">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2341</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>515</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock for different product status" id="417d54dd-0eb8-49b4-bc3e-41a698a14a22">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d93951e3-6779-4655-93c9-3dfc22da6d66</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>01eaa48b-c668-4071-a03f-56d2ca283a50</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id" id="1a3e012c-f479-4951-a275-a2333fef7032">
          <con:configuration>
            <patternObjectId>f8d85e76-2530-402b-bf99-331de11d5548</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5f765834-c458-49ad-a8c0-62c9861b9018</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>01eaa48b-c668-4071-a03f-56d2ca283a50</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id" id="5e746acd-85a6-408d-af4d-e13c34bdb5fb">
          <con:configuration>
            <patternObjectId>f8d85e76-2530-402b-bf99-331de11d5548</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fa0050de-f0f5-4f9a-ad17-a69655eae8b2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e8081845-df73-4ff0-87fe-8863459b2de3</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="b9207964-e277-41aa-be30-6af43dc7e69a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>52bb55a8-cf6b-475e-827f-fdd66b020b9f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e8081845-df73-4ff0-87fe-8863459b2de3</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="a32ee6d0-760f-41fd-9ba8-f2f03ce546e0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0c445b06-a1ef-4399-838b-7b8aeb595d9a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e8081845-df73-4ff0-87fe-8863459b2de3</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="1ad02875-88ca-4359-8c83-57b30b8c377e">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting bi id to submit" id="b5a84216-de71-4b04-bf2b-442c2ad7eeba">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for different product status</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out bi for different product status</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out bi for different product status" id="01125a2b-9044-49f8-90dd-2cf2778a0ae1">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2341</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2341</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is submitted successfully for different product status" id="52fcc119-0c91-4495-8d42-63f00c36d8a6">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4ab05896-8b09-4df5-a9f6-d30aa99490bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>01125a2b-9044-49f8-90dd-2cf2778a0ae1</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id" id="cf709b57-a104-4e1c-baad-6298a66e6552">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>142591ae-d4ec-4fd3-9030-9ff21861c060</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>01125a2b-9044-49f8-90dd-2cf2778a0ae1</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5c995030-b2b2-4c8b-b1c3-3257640643e7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock after submit" id="2e4f531e-f50e-4521-b0b7-b80747c3b131">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>prodSpecExtId</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level control after submit</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeIdForDifferentProductStatuses</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level control after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productStatus</con:name>
        <con:sourceType>statusValue</con:sourceType>
        <con:sourceStep>DataSource for stock out with different product statuses</con:sourceStep>
        <con:targetType>req_productStatus</con:targetType>
        <con:targetStep>Display product stock level control after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item to stock out bi for different product status</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level control after submit" id="fdd4efd4-3edf-41da-a788-1a257d1fb3f4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value>${Given properties for the test steps#statusSellable}</con:value>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after submit" id="1e29138c-8f99-422f-8d0d-0481f527ce5c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert display stock level and lock for different product status" id="79c0b018-54fa-4493-b08c-7125560754c7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e0b0604d-3c86-46af-b291-ff147ec80ada</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1e29138c-8f99-422f-8d0d-0481f527ce5c</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id empty" id="c2918d23-063c-4060-9465-8a5aadcf9335">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>6b8cc5fc-7db7-48d0-95c5-38f6d7c52954</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1e29138c-8f99-422f-8d0d-0481f527ce5c</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains item id empty" id="b6b4763a-c858-426b-a1f7-d266e5287b53">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1275d538-c160-4371-9a83-1af08a11dafc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>fdd4efd4-3edf-41da-a788-1a257d1fb3f4</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="65a4ec23-3741-4dcd-88eb-fa6c2b28d80f">
          <con:configuration>
            <patternText>0</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ac5a2454-2839-4e13-ac88-84c2b2eed079</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>fdd4efd4-3edf-41da-a788-1a257d1fb3f4</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals 2" id="537fac04-2d36-4cba-bdcc-52ac62998136">
          <con:configuration>
            <patternText>0</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>134ad274-d0c7-4999-8090-2723d6d1ea27</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>fdd4efd4-3edf-41da-a788-1a257d1fb3f4</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals 3" id="9145982e-e878-4aec-87aa-73501a4e2bb2">
          <con:configuration>
            <patternText>0</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop for stock out with different product statuses" id="10716654-09ee-4b0d-9a52-998322d65e43">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource for stock out with different product statuses</dataSourceStep>
      <targetStep>Set quantity for create product</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for stock out to another place and update test" id="11b83c6c-507a-4b25-9dd1-f51ccc165966">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>place1</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>fromPlace</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>place2</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>toPlace</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProduct1</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>nonSerializedProductIdAtFromPlace</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>nonSerializedProduct2</con:name>
        <con:sourceType>nonSerializedProductId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>nonSerializedProductIdAtToPlace</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForDifferentPlace</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:targetType>placeIdForDifferentPlace</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>fromSoId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>fromSoId</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>toSoId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>toSoId</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>UserSo</con:sourceType>
        <con:sourceStep>#Project#</con:sourceStep>
        <con:targetType>temporarySoIdToken</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Properties for stock out to another place and update test" id="a1a87fdf-5642-417d-88d1-004fc37bd6d7">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>fromPlace</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductIdAtFromPlace</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>toPlace</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductIdAtToPlace</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>nonSerializedProductSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>beginningQuantityFromPlace</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>lastQuantityFromPlace</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>beginningQuantityToPlace</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>lastQuantityToPlace</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>availableQuantityAfterAddingItem</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>totalQuantityAfterAddingItem</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>availableAndTotalQuantityAfterSubmit</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>beginAndLastQuantityForDifferentPlace</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>availableQuantityAfterAddWithToPlace(ForUpdate)</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>placeIdForDifferentPlace</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>availableQuantityAfterAddWithToPlace</con:name>
          <con:value>220</con:value>
        </con:property>
        <con:property>
          <con:name>fromSoId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>toSoId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>temporarySoIdToken</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>SoIdToken2</con:name>
          <con:value>63</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for querying product before stock out" id="f628e3bf-a9bf-45d3-9d4f-76f74007f332">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForFromPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for FromPlace</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForFromPlace</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for FromPlace</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForToPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for ToPlace</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForToPlace</con:name>
        <con:sourceType>toPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for ToPlace</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForDifferentPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for different place (for update test)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForDifferentPlace</con:name>
        <con:sourceType>placeIdForDifferentPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for different place (for update test)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for FromPlace" id="93ea38ef-a867-4a0e-8a02-24d9161bc71d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer userSo for different place" id="ba27964a-1b07-4a38-b714-7fabf168d353">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for different place (for update test)" id="b74eda6f-aab5-4b88-a6f5-2b88a855bc47">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer userSo" id="cb353732-1004-4431-9525-9523876d01c0">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for ToPlace" id="5beb4d33-9531-4075-a1db-999892a29522">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer restoreUserSo" id="54711672-37b0-43dc-b346-0e3f6bd5d98c">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>temporarySoIdToken</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for getting products with quantity info successfully" id="7b7e62d9-ff5d-4223-b5b5-144916c1ab64">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>34a61864-ce91-49c7-a00a-4dc78c3ac14e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>93ea38ef-a867-4a0e-8a02-24d9161bc71d</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for fromPlace" id="e14eac4e-3b24-4a82-ac01-9f372a4c07ec">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>853aa889-0be7-4927-8683-a2d96801ff3d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5beb4d33-9531-4075-a1db-999892a29522</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for toPlace" id="ab75908a-8979-4a4b-add0-714c0139732f">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5dd636bc-d7a8-4c86-a5b9-31d92678e398</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b74eda6f-aab5-4b88-a6f5-2b88a855bc47</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for different place" id="4b666fac-6569-4c38-8178-d493fe905b76">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantity calculations for another place" id="02696a02-4aa2-4b18-8a05-46729a611743">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityFromPlace = context.expand( '${Product query for FromPlace#res_quantityOutOfOrg}' ).toInteger();

return beginningQuantityFromPlace;</script>
        </con:configuration>
        <con:name>beginningQuantityFromPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityFromPlace = context.expand( '${Product query for FromPlace#res_quantityOutOfOrg}' ).toInteger();
int lastQuantityFromPlace = beginningQuantityFromPlace - 1 ;

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("beginningQuantityFromPlace", beginningQuantityFromPlace.toString());
testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("lastQuantityFromPlace", lastQuantityFromPlace.toString());

return lastQuantityFromPlace;</script>
        </con:configuration>
        <con:name>lastQuantityFromPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityToPlace = context.expand( '${Product query for ToPlace#res_quantityOutOfOrg}' ).toInteger();

return beginningQuantityToPlace;</script>
        </con:configuration>
        <con:name>beginningQuantityToPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityToPlace = context.expand( '${Product query for ToPlace#res_quantityOutOfOrg}' ).toInteger();
int lastQuantityToPlace = beginningQuantityToPlace;

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("beginningQuantityToPlace", beginningQuantityToPlace.toString());
testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("lastQuantityToPlace", lastQuantityToPlace.toString());

return lastQuantityToPlace;</script>
        </con:configuration>
        <con:name>lastQuantityToPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def res_quantityDifferentPlace = context.expand( '${Product query for different place (for update test)#res_quantityOutOfOrg}' )
int quantityDifferentPlace=0;

if(res_quantityDifferentPlace =="")
quantityDifferentPlace=0;
else 
quantityDifferentPlace=res_quantityDifferentPlace.toInteger();

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("beginAndLastQuantityForDifferentPlace", quantityDifferentPlace.toString());

return quantityDifferentPlace;</script>
        </con:configuration>
        <con:name>beginAndLastQuantityDifferentPlaceForUpdate</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi parameters 2" id="e266d4f3-ad69-432b-858e-759c4fd6120f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for another place</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for another place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for another place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userTOKEN</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for another place" id="e6ec603e-b603-43c4-90fc-c411339ebbe6">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock out bi is created successfully" id="ef502501-7bb4-41e6-b49b-dd03acc25481">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ef0691f8-9662-454a-8512-9fb03e608daa</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e6ec603e-b603-43c4-90fc-c411339ebbe6</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="4ded29a0-523a-40b5-9e8d-0c97ed428d3f">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5fa9fa22-40d7-45b3-89b2-aa1c7d5a6e90</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e6ec603e-b603-43c4-90fc-c411339ebbe6</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d184a5e1-853f-45c2-b34c-0b116770bd47">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with different place for update test" id="de8d71a2-bb49-44f8-982d-362c4679d636">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for another place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductIdAtToPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>toPlaceId</con:name>
        <con:sourceType>placeIdForDifferentPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_toPlaceId</con:targetType>
        <con:targetStep>Add item to stock out bi with different place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi with different place for update test" id="462248c6-78f3-48e1-913a-bb270d96b2bd">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ed0a89cc-0cb9-486c-b91e-4c9ae9344433</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>TO_PLACE_SHOULD_BE_OUT_OF_ORGANIZATION_PLACE</con:value>
        </con:property>
        <con:property>
          <con:name>req_toPlaceId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item with diffrent toPlaceId value cannot add for update test" id="a3dda4f3-4fe6-4db1-92c7-bfcd4a882593">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>267972ba-f0ee-4b7b-893c-67da12eb01f8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>462248c6-78f3-48e1-913a-bb270d96b2bd</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="f0a1e9a1-8bb4-4198-8278-7c0d3996e856">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2bdffed1-bf56-4cdb-a83c-5d9ee372b4a2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>462248c6-78f3-48e1-913a-bb270d96b2bd</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="a19cc77d-f56b-4c31-9077-485709c7645c">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgToPlaceForOutOrgPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with out of org place for update test" id="1c8b7ee8-a243-4a14-a24e-27cbfc80a1dc">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for another place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductIdAtToPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>toPlaceId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_toPlaceId</con:targetType>
        <con:targetStep>Add item to stock out bi with out of org place for update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi with out of org place for update test" id="b16c0f09-e440-4116-8b92-fe7ad12828a2">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ed0a89cc-0cb9-486c-b91e-4c9ae9344433</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>517</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_toPlaceId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>72</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item with out of org placeId is added for update test" id="b44e6fbc-d119-4717-a4c8-a0f4dd8de04e">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9905d1e2-5252-4911-91bb-4cc6420b3f65</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b16c0f09-e440-4116-8b92-fe7ad12828a2</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="6ba2352d-fda4-4768-b893-a72b9959838f">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for stock level calculation after add" id="7467867b-38c6-4f26-b681-245a11b28e25">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityToPlace = context.expand( '${DataGen for quantity calculations for another place#beginningQuantityToPlace}' )

int totalQuantity = beginningQuantityToPlace.toInteger();
return totalQuantity;</script>
        </con:configuration>
        <con:name>totalQuantityAfterAdd</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningQuantityToPlace = context.expand( '${Properties for stock out to another place and update test#beginningQuantityToPlace}' ).toInteger();
int availableQuantityAfterAddWithToPlace = beginningQuantityToPlace - 2 ;

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("availableQuantityAfterAddWithToPlace", availableQuantityAfterAddWithToPlace.toString());

return availableQuantityAfterAddWithToPlace;</script>
        </con:configuration>
        <con:name>AvailableQuantityAfterAddWithToPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after adding item for update" id="89aa9619-eb8b-4035-8945-9747f8cbed88">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after adding item for update</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>toPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after adding item for update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productStatus</con:name>
        <con:sourceType>statusSellable</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productStatus</con:targetType>
        <con:targetStep>Display product stock level after adding item for update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item to stock out bi with out of org place for update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after adding item for update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForToPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for ToPlace after add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForToPlace</con:name>
        <con:sourceType>toPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for ToPlace after add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after adding item for update" id="07d58736-d7de-4fc5-89ff-e3ade1f7b910">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>220</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after adding item for update" id="ab4c7239-2f9d-4707-83bb-21bc27f36949">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>72</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>72</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>517</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for ToPlace after add" id="57f033b4-1e39-4d7c-bcab-6c01989052f4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>220</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock for update" id="17455845-bfa6-43ae-8b84-7b715567d69d">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>6384b8bb-f739-48be-a5f8-fdf0866325aa</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>07d58736-d7de-4fc5-89ff-e3ade1f7b910</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="99ed5e55-c102-4f69-af5e-25d56c2b200c">
          <con:configuration>
            <patternObjectId>7467867b-38c6-4f26-b681-245a11b28e25</patternObjectId>
            <patternProperty>totalQuantityAfterAdd</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>84dcc601-6dbd-4d07-921c-35756569b585</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>07d58736-d7de-4fc5-89ff-e3ade1f7b910</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="eefad324-be8f-4011-bb5f-ad0c32397f1f">
          <con:configuration>
            <patternObjectId>7467867b-38c6-4f26-b681-245a11b28e25</patternObjectId>
            <patternProperty>AvailableQuantityAfterAddWithToPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>7b83bd5b-a0c7-496a-a97a-1cbc9a89197f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>07d58736-d7de-4fc5-89ff-e3ade1f7b910</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="f314d87e-d781-4ee3-9ce7-12800b4590e1">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityTwo</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>be739584-f493-45b1-bf61-68c39f6ab2ef</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ab4c7239-2f9d-4707-83bb-21bc27f36949</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals biId" id="f8c510a3-504e-4fee-a5bc-ecd9da2ca61f">
          <con:configuration>
            <patternObjectId>b16c0f09-e440-4116-8b92-fe7ad12828a2</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>38264001-9470-4582-81cd-de53eae14d2c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ab4c7239-2f9d-4707-83bb-21bc27f36949</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi item id" id="7b02307f-3b66-47fd-bb06-d6730dd2d87b">
          <con:configuration>
            <patternObjectId>b16c0f09-e440-4116-8b92-fe7ad12828a2</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5795794a-5454-4a77-9474-3782e6a8881c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>57f033b4-1e39-4d7c-bcab-6c01989052f4</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals product quantity" id="b7081c6c-cec3-4dde-85c0-95eacc6c0a9b">
          <con:configuration>
            <patternObjectId>7467867b-38c6-4f26-b681-245a11b28e25</patternObjectId>
            <patternProperty>AvailableQuantityAfterAddWithToPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T displaying stock out bi item for quantity control" id="2c5a2e89-14ab-4c39-9b46-6d84d359c51e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>bi id</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for another place</con:sourceStep>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display stock out bi item for quantity control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>item Id</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add item to stock out bi with out of org place for update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Display stock out bi item for quantity control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display stock out bi item for quantity control" id="15e86ce2-15c8-468d-ac0c-16118207e3e6">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>7be6e7d3-277b-4f9a-8e57-c22b188a8c9e</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>517</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>res_newProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert quantity control for item which is added to stock out bi" id="6e0712cc-be34-4b23-92ad-9c38da28e702">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>73e78543-1184-4368-89b2-b13ec01859d3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>15e86ce2-15c8-468d-ac0c-16118207e3e6</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success" id="32fb150c-baa5-4cf2-b26c-fc79bef39547">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fb47751c-6729-49cb-95e6-ded9f46652f1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>15e86ce2-15c8-468d-ac0c-16118207e3e6</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity" id="74b31659-5d9f-41f9-a4ef-61d40ae6fe4a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityTwo</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer to delete last item" id="3287e2f5-121c-4863-98b5-df9b2c2b56e1">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for another place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Delete stock out bi last item</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biItemId</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add item to stock out bi with out of org place for update test</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Delete stock out bi last item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Delete stock out bi last item" id="0561e8e9-8064-4101-9b62-702847849587">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>bccdd447-0a75-4474-8bc9-fa822e114224</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2351</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>517</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi item is deleted successfully" id="14603e3c-496b-4c05-a31c-cf7b8beee7a0">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9774d025-c651-4323-8f19-91318d564b55</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0561e8e9-8064-4101-9b62-702847849587</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d0daecc5-5d8c-488c-83ed-fb086b656300">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi parametrs" id="95ecb201-38a3-491b-84b2-ebb5c91d38fe">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stockout bi for another place</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stockout bi for another place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stockout bi for another place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userTOKEN</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stockout bi for another place" id="332f60fe-460b-40f1-932b-89f9a3234662">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for creating stock out bi parametrs" id="8511f097-f461-441b-88fd-c26f6cd2c042">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>62fc2575-0138-4ef8-ad2a-681d166aa364</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>332f60fe-460b-40f1-932b-89f9a3234662</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="ef920f1a-32a8-425b-8de8-6d4f5bc504f8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>6f5fd319-3bd5-418b-aad2-dac8f48ea898</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>332f60fe-460b-40f1-932b-89f9a3234662</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="7e971ca3-64e0-4a68-a7e2-aac8a602c8ad">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding new item with toPlaceId for another place and update test" id="8e0a4a80-69c2-473b-b0e2-6f3363409226">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stockout bi for another place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductIdAtFromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>toPlaceId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_toPlaceId</con:targetType>
        <con:targetStep>Add new item to stock out bi with toPlaceId for another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add new item to stock out bi with toPlaceId for another place and update test" id="00c102e9-6413-4aae-a5b7-18539baa4779">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ed0a89cc-0cb9-486c-b91e-4c9ae9344433</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>519</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_toPlaceId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>73</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi new item is added successfully for another place" id="7eec8aad-fb30-48df-931b-706a8150e6a2">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4bb95b9e-590e-418a-8dcc-22a20ce75f75</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>00c102e9-6413-4aae-a5b7-18539baa4779</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="cebb8220-2b17-4fd8-90d6-f5527085fdc0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for stock level calculations" id="17c96498-c570-461d-9123-87ad4fbb0c1f">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantity = context.expand( '${Given properties for the test steps#remainingQuantity}' ).toInteger();

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("totalQuantityAfterAddingItem", totalQuantity.toString());
return totalQuantity;</script>
        </con:configuration>
        <con:name>totalQuantityAfterAddForFromPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantity = context.expand( '${Given properties for the test steps#remainingQuantity}' ).toInteger();
int availableQuantityAfterAddingItem = totalQuantity - 1 ;

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("availableQuantityAfterAddingItem", availableQuantityAfterAddingItem.toString());
return availableQuantityAfterAddingItem;</script>
        </con:configuration>
        <con:name>availableQuantityAfterAddForFromPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def availableQuantityAfterAdd = context.expand( '${DataGen for stock level calculations#availableQuantityAfterAddForFromPlace}' ).toInteger();
int availableAndTotalQuantityAfterSubmit = availableQuantityAfterAdd;

testRunner.testCase.testSteps['Properties for stock out to another place and update test'].setPropertyValue("availableAndTotalQuantityAfterSubmit", availableAndTotalQuantityAfterSubmit.toString());
return availableAndTotalQuantityAfterSubmit;</script>
        </con:configuration>
        <con:name>availableAndTotalQuantityAfterSubmitForFromPlace</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after adding item" id="2e7d7e1d-1ca2-48ab-bb5a-2ad595fa4754">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level after adding item</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level after adding item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productStatus</con:name>
        <con:sourceType>statusSellable</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productStatus</con:targetType>
        <con:targetStep>Display product stock level after adding item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add new item to stock out bi with toPlaceId for another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after adding item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForToPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for fromPlace after update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForToPlace</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for fromPlace after update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level after adding item" id="97df2244-bf20-4236-9ada-ac5f69e9abb7">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after adding item" id="2913e4e8-f337-454e-a88d-3f612899838c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>519</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for fromPlace after update" id="0bc495da-bc42-4513-bed4-6c4e6381fe7d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock after adding item" id="97572f67-c6c5-4d97-ae55-ce46bf50df18">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4595b547-bc73-4ea2-badb-f107fa98f665</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2913e4e8-f337-454e-a88d-3f612899838c</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id for lock" id="de2a42ed-e16a-458c-9627-18af8416900d">
          <con:configuration>
            <patternObjectId>00c102e9-6413-4aae-a5b7-18539baa4779</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e8558899-2aeb-4cb9-9480-e8e881a0478f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2913e4e8-f337-454e-a88d-3f612899838c</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id for lock" id="b18156e8-6502-45c9-b94c-968d33cf1fef">
          <con:configuration>
            <patternObjectId>00c102e9-6413-4aae-a5b7-18539baa4779</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5a3e9855-017b-4b5b-b548-e129fc316421</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97df2244-bf20-4236-9ada-ac5f69e9abb7</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="a622c2b2-3589-488e-8fe3-f6bf6f791bde">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ed5779f1-3aa1-4a7a-9c03-ea1a0390fa41</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97df2244-bf20-4236-9ada-ac5f69e9abb7</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="6b332781-3e96-44e4-a553-71b39ea08b5d">
          <con:configuration>
            <patternObjectId>17c96498-c570-461d-9123-87ad4fbb0c1f</patternObjectId>
            <patternProperty>availableQuantityAfterAddForFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>9a97273d-4438-4ecc-8b67-2b4ac625053e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>97df2244-bf20-4236-9ada-ac5f69e9abb7</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="25ecf34a-3de7-4463-8a1b-234056ce8f7a">
          <con:configuration>
            <patternObjectId>17c96498-c570-461d-9123-87ad4fbb0c1f</patternObjectId>
            <patternProperty>totalQuantityAfterAddForFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f41c7540-a565-49ba-acba-817947ce8e52</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0bc495da-bc42-4513-bed4-6c4e6381fe7d</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals product quantity" id="3a43deca-62cc-41a3-b78d-18f2485ad0fd">
          <con:configuration>
            <patternObjectId>17c96498-c570-461d-9123-87ad4fbb0c1f</patternObjectId>
            <patternProperty>availableQuantityAfterAddForFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T displaying stock out bi item for quantity control after update" id="9a480790-6754-4732-98e2-d70a2401d80e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>bi id</con:name>
        <con:sourceType>req_biId</con:sourceType>
        <con:sourceStep>Add new item to stock out bi with toPlaceId for another place and update test</con:sourceStep>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display stock out bi item for quantity control after update</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>item Id</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add new item to stock out bi with toPlaceId for another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Display stock out bi item for quantity control after update</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display stock out bi item for quantity control after update" id="d81424fe-86d3-498f-879b-868abc86374a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>7be6e7d3-277b-4f9a-8e57-c22b188a8c9e</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>519</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>res_newProductId</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert stock out bi item for quantity control after update" id="ddd4b6ab-ced8-4ff5-9ab0-27c07ccb78ef">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>74023002-4868-4b19-87c6-2630f5fd91c0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d81424fe-86d3-498f-879b-868abc86374a</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="4500f478-266f-44d3-ac81-9ff4746921ef">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e9f1fb71-77df-427f-8017-a258737675bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d81424fe-86d3-498f-879b-868abc86374a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity" id="13bacdb4-b620-49bd-b1b3-a088793deb7a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting bi id to submit for another place" id="2c6d08fb-322a-484a-ab1b-9d0ac5a6e3f8">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stockout bi for another place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out bi for another place</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out bi for another place" id="8f524df1-a934-4955-9026-313e8581cf70">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2361</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert bi is submitted successfully for another place" id="143fbc84-8b23-4c30-b8fe-25ddc4b5cd80">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>82593d02-dc3b-4059-96a5-a00741a4cf27</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8f524df1-a934-4955-9026-313e8581cf70</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="486b9638-681b-40ba-a679-12561260f880">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4305caf3-2e01-4107-9773-41aa3c7ef674</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8f524df1-a934-4955-9026-313e8581cf70</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1631a79c-3aed-4315-8dfd-88a4d059fd54">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock after submit op." id="d0d82c77-0e3a-4182-8e7a-dfe77c4a7fbd">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtId</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display product stock level control after submit op.</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level control after submit op.</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productStatus</con:name>
        <con:sourceType>statusSellable</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productStatus</con:targetType>
        <con:targetStep>Display product stock level control after submit op.</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add new item to stock out bi with toPlaceId for another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display product by id for lock after submit op.</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level control after submit op." id="6fcfcddc-9a66-49ac-997c-0d5f19e5d91a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ae70f14b-9b62-4330-9f1f-32535bcddc8b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecCode</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecArticle</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>108</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSerialText</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationId</con:name>
        </con:property>
        <con:property>
          <con:name>req_parentSerialNumberText</con:name>
        </con:property>
        <con:property>
          <con:name>req_batchId</con:name>
        </con:property>
        <con:property>
          <con:name>req_country</con:name>
        </con:property>
        <con:property>
          <con:name>req_state</con:name>
        </con:property>
        <con:property>
          <con:name>req_city</con:name>
        </con:property>
        <con:property>
          <con:name>req_regionId</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product by id for lock after submit op." id="842b32a3-08b2-4d9b-bcfe-03446fc328d2">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>141</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert display stock level and lock for another place" id="d4efacf1-7d31-4f74-b646-ec9901bec15e">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d9b80512-2aa9-4f64-8b13-19a9b6d2953d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>842b32a3-08b2-4d9b-bcfe-03446fc328d2</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id" id="c6ff47d0-bce2-4b81-b952-ea81f6cc3d6d">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>9d6170bf-5a52-4fd3-86b4-b40785d71f4f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>842b32a3-08b2-4d9b-bcfe-03446fc328d2</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi item" id="0168470c-aeba-4369-aa89-7ebd7532959f">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fec020af-60d8-43dc-80fd-3758306f7ff5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6fcfcddc-9a66-49ac-997c-0d5f19e5d91a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="ca57527e-efda-40aa-bdcf-8078d6758e06">
          <con:configuration>
            <patternObjectId>17c96498-c570-461d-9123-87ad4fbb0c1f</patternObjectId>
            <patternProperty>availableAndTotalQuantityAfterSubmitForFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>bd62bc41-0050-43a4-8a33-af588d685a30</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6fcfcddc-9a66-49ac-997c-0d5f19e5d91a</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="7b464370-ac83-416f-9df5-7016fb959266">
          <con:configuration>
            <patternObjectId>17c96498-c570-461d-9123-87ad4fbb0c1f</patternObjectId>
            <patternProperty>availableAndTotalQuantityAfterSubmitForFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e92d7f61-7be8-4ff6-9179-9eacfd16910f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6fcfcddc-9a66-49ac-997c-0d5f19e5d91a</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="de48cf9c-4193-4cd3-b12e-9edaf63255aa">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for querying product after stock out" id="99314829-f983-460c-a8d4-4db073587709">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForFromPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for FromPlace after stock out</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForFromPlace</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for FromPlace after stock out</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForToPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for ToPlace after stock out</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForToPlace</con:name>
        <con:sourceType>toPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for ToPlace after stock out</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForDifferentPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for different place after stock out (for update test)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForDifferentPlace</con:name>
        <con:sourceType>placeIdForDifferentPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for different place after stock out (for update test)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>saveSoIdToken2</con:name>
        <con:sourceType>UserSo</con:sourceType>
        <con:sourceStep>#Project#</con:sourceStep>
        <con:targetType>SoIdToken2</con:targetType>
        <con:targetStep>Properties for stock out to another place and update test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for FromPlace after stock out" id="ac9290aa-11d7-4d37-88ed-64698d34e71f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>221</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer userSo2" id="7fdbf83c-31d5-4c09-a26e-d3d0bbd79ea7">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for ToPlace after stock out" id="58352fc3-191e-4b4e-890f-83566679923e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>36</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>72</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>222</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer restore userSo2" id="dad3be9a-0282-43cf-9e3a-e4ebf41da121">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>restoreUserSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create products for status change</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for different place after stock out (for update test)" id="0a04b3be-6a9e-4fad-8544-fa077a1ddc7a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>38</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>71</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantity of different place" id="02146aaf-f7b1-4cb3-a1a4-7e0e2f8326d4">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def res_quantityOutOfOrg = context.expand( '${Product query for different place after stock out (for update test)#res_quantityOutOfOrg}' )

if(res_quantityOutOfOrg=="")
{
testRunner.testCase.testSteps['Product query for different place after stock out (for update test)'].setPropertyValue("res_quantityOutOfOrg", "0");
}</script>
        </con:configuration>
        <con:name>quantityOfDifferentPlaceProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert for getting products with quantity information" id="163ef59a-21d0-4866-b579-b0af63e2fc41">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>f973e010-7774-42f9-8eb3-ca03a7e5bb97</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ac9290aa-11d7-4d37-88ed-64698d34e71f</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for fromPlace" id="2ff28f7e-750b-4bee-9037-718cf3c1cfa5">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d46fdb09-b143-483f-9aa9-8ccfade684a6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>58352fc3-191e-4b4e-890f-83566679923e</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for toPlace" id="d6309eb9-5d4b-4a06-9688-0c1692831df3">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c8ea01d8-3c6d-4f4a-8819-ab37d4dd55c8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ac9290aa-11d7-4d37-88ed-64698d34e71f</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals last quantity for fromPlace" id="7c899b8f-6c78-4520-806c-b0e37de998eb">
          <con:configuration>
            <patternObjectId>02696a02-4aa2-4b18-8a05-46729a611743</patternObjectId>
            <patternProperty>lastQuantityFromPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f6652631-fe3a-44f8-919c-31914ec37e33</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>58352fc3-191e-4b4e-890f-83566679923e</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals last quantity for toPlace" id="2decbfda-ab15-452e-8611-37124a60b72c">
          <con:configuration>
            <patternObjectId>02696a02-4aa2-4b18-8a05-46729a611743</patternObjectId>
            <patternProperty>lastQuantityToPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>55496b98-6d88-4324-a869-6819d7a189c4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0a04b3be-6a9e-4fad-8544-fa077a1ddc7a</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals success for different place" id="880077b8-3e98-41f4-9993-7a8f2f07c425">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b4a81c96-1a47-460f-a515-f2dae72a9e4d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0a04b3be-6a9e-4fad-8544-fa077a1ddc7a</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals last quantity for different place" id="05fad72e-def4-41ea-b016-759a4a8c90e5">
          <con:configuration>
            <patternObjectId>02696a02-4aa2-4b18-8a05-46729a611743</patternObjectId>
            <patternProperty>beginAndLastQuantityDifferentPlaceForUpdate</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Stockout Case with product which is at out of org place" id="0b4e1d23-d4cd-48c6-8171-1f99b29892ed">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stockout bi for using product which is at out of org place" id="f5412466-8ef0-4170-9e7f-1bcb2aaa6f44">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userID</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stockout bi for using product which is at out of org place</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stockout bi for using product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stockout bi for using product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stockout bi for using product which is at out of org place" id="9ac74a15-0566-404a-a50f-9b7b0fddb184">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2371</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for creating stockout bi for using product which is at out of org place" id="ac8f2c37-361c-41cf-b5bb-23314f837832">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e235b856-b40a-4cdc-9d10-bde71b02eaa0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9ac74a15-0566-404a-a50f-9b7b0fddb184</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d2156565-bbb1-4cc6-b48d-b3ff6b081864">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1466ef8b-45dd-40c7-8f00-536727ae6d9c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9ac74a15-0566-404a-a50f-9b7b0fddb184</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="1d35b373-2a6e-43ad-a09a-6ed62cb37a53">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with product which is at out of org place" id="4722f111-d96b-48f4-933c-d91392d5ec87">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stockout bi for using product which is at out of org place</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with product which is at out of org place</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add new item to stock out bi with toPlaceId for another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item with product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with product which is at out of org place</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with product which is at out of org place" id="3c225188-6af7-4f1f-8969-96e0ab7a0adc">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2371</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>73</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>PRODUCT_PLACE_CANNOT_BE_OUT_OF_ORGANIZATION_PLACE</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for adding item with product which is at out of org place" id="4e3960ae-484b-4540-a8fd-4c69b87e65b1">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4ac67329-c9fe-421e-a88a-28fa91d0dfbb</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3c225188-6af7-4f1f-8969-96e0ab7a0adc</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="6625c604-aacc-46bb-8a33-ce6ef9c03bac">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d3e3b4f4-15b5-4685-bd32-8835dd437d72</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3c225188-6af7-4f1f-8969-96e0ab7a0adc</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="error" id="1cef77a0-670c-441f-b536-c04f1447f127">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgProductPlaceCannotBeOutOfOrgPlace</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for transferring product to incoming inventory" id="39013e07-9245-4425-a13f-f512834ef1d5">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>transfer_userRoleId</con:name>
        <con:sourceType>req_userRoleId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create product transfer business interaction</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>transfer_salesOrgRoleId</con:name>
        <con:sourceType>req_salesOrgId</con:sourceType>
        <con:sourceStep>#TestCase#</con:sourceStep>
        <con:targetType>req_salesOrgRoleId</con:targetType>
        <con:targetStep>Create product transfer business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>transfer_biSpecCode</con:name>
        <con:sourceType>biSpecForTransfer</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpecCode</con:targetType>
        <con:targetStep>Create product transfer business interaction</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create product transfer business interaction" id="7b4305d7-4c5f-4a66-98fc-c562a43b7a8d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>0eaadb51-eaa4-48ba-82d0-42592e2839fc</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>65</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrgRoleId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpecCode</con:name>
          <con:value>PRD_TRANSFER</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2381</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_fromSalesOrganizationId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_biId</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion product transfer bi is created" id="8f45b2f5-a722-464a-aee7-f53ba2bc87fc">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>b4f8f2c9-f074-4210-8534-4276d29c576f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7b4305d7-4c5f-4a66-98fc-c562a43b7a8d</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="abfa04df-1f92-429b-8a20-1ead09299e63">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c3a13c70-db40-48f0-9963-a75b5dbdb5f0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7b4305d7-4c5f-4a66-98fc-c562a43b7a8d</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="6f88e067-d1e5-43fe-a026-1376dae6b0fe">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for adding item" id="b0ea4d38-9d08-4910-abca-951a77c1a6fd">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create product transfer business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>fromSalesOrgId</con:name>
        <con:sourceType>fromSoId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_fromSalesOrgId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>fromPlaceId</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_fromPlaceId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>toSalesOrgId</con:name>
        <con:sourceType>toSoId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_toSalesOrgId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>toPlaceId</con:name>
        <con:sourceType>placeIdNull</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_toPlaceId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductIdAtFromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to product transfer bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to product transfer bi" id="76cbe541-e49d-44d7-bd67-acaa46ad005a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>7c4acae7-b767-466d-bd0c-dd74ed4387da</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2381</con:value>
        </con:property>
        <con:property>
          <con:name>req_fromSalesOrgId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_fromPlaceId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_toSalesOrgId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>req_toPlaceId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>522</con:value>
        </con:property>
        <con:property>
          <con:name>res_error_message</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_error_message</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion item is added successfully" id="a18f2f77-709c-46df-aad6-7ddf5096aa54">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>ec2e14fa-547b-4a39-8f02-73f985675f20</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>76cbe541-e49d-44d7-bd67-acaa46ad005a</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="bb57b89b-6a87-4b99-9093-1fdf41a05dd8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0ca4cf6c-b6e1-46cd-892d-9c18f2597e49</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>76cbe541-e49d-44d7-bd67-acaa46ad005a</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="a5507b6f-8f17-4377-8746-00be1fd3fa78">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for submitting product transfer bi" id="76b5c09d-c817-4733-8f86-07a02b735f54">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create product transfer business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit product transfer bi to send product into incoming inv</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit product transfer bi to send product into incoming inv" id="6acf7f5a-4c22-4ecd-b8cf-ca74cace25f9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a5a4c9dc-43ee-430a-815c-f07265bcdeae</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2381</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2381</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_biId</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion item is submitted successfully" id="1361d346-1d52-4baa-8553-975754503821">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>2612db7c-d820-40ae-8fbe-adb0f9d0ea0f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6acf7f5a-4c22-4ecd-b8cf-ca74cace25f9</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="0e05f624-1336-4bcb-b852-ccbb5a3f8ceb">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>04a99933-43bf-4c44-9d86-899b3aebd498</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6acf7f5a-4c22-4ecd-b8cf-ca74cace25f9</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals biId" id="7a6c95ab-78c2-4ea4-9761-00c789da043c">
          <con:configuration>
            <patternObjectId>6acf7f5a-4c22-4ecd-b8cf-ca74cace25f9</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for getting new product id at incoming inventory" id="c9e6cef7-85af-419d-8112-8978e20d31e2">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create product transfer business interaction</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Display product transfer bi single item</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>itemId</con:name>
        <con:sourceType>res_itemId</con:sourceType>
        <con:sourceStep>Add item to product transfer bi</con:sourceStep>
        <con:targetType>req_itemId</con:targetType>
        <con:targetStep>Display product transfer bi single item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product transfer bi single item" id="8d6b9349-c7fb-4cf0-b2df-dbf64755c643">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>540131b9-266a-4c94-968d-0cc0eaf6c492</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2381</con:value>
        </con:property>
        <con:property>
          <con:name>req_itemId</con:name>
          <con:value>522</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>74</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>522</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productId</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for displaying single item" id="4bac8346-4fe3-4d5a-9e5e-6e88bd21dc5c">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>b92013b0-ac6a-434d-8f00-45d098409b48</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8d6b9349-c7fb-4cf0-b2df-dbf64755c643</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="582885c4-a96a-4b6f-aa49-1e34a1121021">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b3e6ff8d-dcaf-4add-9705-2fff6379fddf</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8d6b9349-c7fb-4cf0-b2df-dbf64755c643</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id" id="3d4b65fa-8821-4094-bbc6-017bc65521ec">
          <con:configuration>
            <patternObjectId>8d6b9349-c7fb-4cf0-b2df-dbf64755c643</patternObjectId>
            <patternProperty>req_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d8a4f185-dc6a-481c-8bc0-7a1ee989ce25</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>8d6b9349-c7fb-4cf0-b2df-dbf64755c643</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity" id="fcdd70a5-69b6-4b66-ab45-c2658dbe0326">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityOne</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for from place quantity" id="8a8e37ae-1181-4f1f-be0f-48773709f9f1">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def lastQuantityFromPlace = context.expand( '${DataGen for quantity calculations for another place#lastQuantityFromPlace}' ).toInteger();
int lastQuantityFromPlaceAfterTransfer = lastQuantityFromPlace - 1 ;
return lastQuantityFromPlaceAfterTransfer;</script>
        </con:configuration>
        <con:name>lastQuantityFromPlaceAfterTransfer</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T querying product at from place after transfer" id="fe6dae25-e226-4527-b87c-c4058df676c8">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExtIdForFromPlace</con:name>
        <con:sourceType>nonSerializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Product query for FromPlace after transfer</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeIdForFromPlace</con:name>
        <con:sourceType>fromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Product query for FromPlace after transfer</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Product query for FromPlace after transfer" id="5c7478cc-3570-40bb-b39a-07a484f53345">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1b20aee-34be-45cc-8886-0209fb859459</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>34</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-APPLMOUSE-1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCode</con:name>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantityOutOfOrg</con:name>
          <con:value>220</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_quantityOutOfOrg</con:entry>
        <con:entry>res_headerCode</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for product quantity control after transfer" id="aac36e6f-6140-4bfa-9675-cc0c3b687812">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>cf6afa56-283a-4078-973f-1cf102c017a6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5c7478cc-3570-40bb-b39a-07a484f53345</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="d3554d70-253d-47ce-874d-d92c5bdaabc1">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>84c3643d-4e58-4a0f-96e6-f27edd57df75</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5c7478cc-3570-40bb-b39a-07a484f53345</con:sourceId>
        <con:propertyName>res_quantityOutOfOrg</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity" id="fae70d95-9c5e-4d5a-8e84-ca136b479c7d">
          <con:configuration>
            <patternObjectId>8a8e37ae-1181-4f1f-be0f-48773709f9f1</patternObjectId>
            <patternProperty>lastQuantityFromPlaceAfterTransfer</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi for incoming inv test" id="fc2d95dc-ba81-4851-82e2-9257592dc62f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for incoming inventory test</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for incoming inventory test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for incoming inventory test</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create initial data and products 2</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for incoming inventory test" id="f1405867-8b46-49c6-a8b1-2279a0a1cd1e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>69</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>67</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2401</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion bi is created for incoming inv test" id="d75530e0-cf46-4676-a9eb-30e042bf1cf6">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>0461c628-1fdf-4d03-9005-7447d48e4807</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f1405867-8b46-49c6-a8b1-2279a0a1cd1e</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="baf7f5ec-8d1f-4c83-9a78-6511b40f9086">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>35c0948d-5b04-4640-8033-0775e065590f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f1405867-8b46-49c6-a8b1-2279a0a1cd1e</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="6ffcc9aa-686e-4f7f-ba03-b2d3ed55e62d">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T to add item with product which is in incoming inventory" id="1ca2f0e2-5083-4259-a844-2f9bc18ec412">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for incoming inventory test</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with product which is in incoming inventory</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_productId</con:sourceType>
        <con:sourceStep>Display product transfer bi single item</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item with product which is in incoming inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with product which is in incoming inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonSales</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with product which is in incoming inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with product which is in incoming inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with product which is in incoming inventory" id="a8358934-b855-4830-9068-28bfc4f623f1">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2401</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>74</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>PRODUCT_WITH_ID_ALREADY_LOCKED_BY_BI_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Sales</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot  add item with product which is in incoming inventory" id="1f00e11b-dc3d-4c84-b0ae-b51365bde5a7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e2a6cccf-f3c8-4ea2-8b35-4b3606904dd5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a8358934-b855-4830-9068-28bfc4f623f1</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="10ad0809-7cf8-4b04-a734-ac2099a89d94">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d8a488cc-2531-499d-be97-581fdd33d3cb</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a8358934-b855-4830-9068-28bfc4f623f1</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error msg" id="3a88f707-a81c-4f97-baa7-2e63b7900ba2">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errroMsgProductWithIdAlreadyLockedByBIWithId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="AUTO SLICE CASES" id="36157e37-eec0-457c-a489-e59393a1f7f4">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for creating serialized pr for characteristic case" id="7739db41-8429-4883-b769-d2015bd53a01">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>quantity</con:name>
        <con:sourceType>quantityTen</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Create serialized product with dynamic product specs</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create serialized product with dynamic product specs" id="1d0e2d18-b048-4d3d-a738-b87f25097cab">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>4b61c651-49ba-44ed-bc4c-5398fea7947b</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>salesOrgRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>inventoryId</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>terminalId</con:name>
          <con:value>19</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>serializedProductStartSerialNumber</con:name>
          <con:value>42832446</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecCode</con:name>
          <con:value>CODE-IPHONE6S-347153c7-01af-4d1b-a169-0bf0560f5dd8</con:value>
        </con:property>
        <con:property>
          <con:name>res_serializedProductSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_charValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>res_charValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>res_charValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>res_charUseExtId1</con:name>
        </con:property>
        <con:property>
          <con:name>res_charUseExtId2</con:name>
        </con:property>
        <con:property>
          <con:name>res_charUseExtId3</con:name>
        </con:property>
        <con:property>
          <con:name>res_charValueExtId1</con:name>
        </con:property>
        <con:property>
          <con:name>res_charValueExtId2</con:name>
        </con:property>
        <con:property>
          <con:name>res_charValueExtId3</con:name>
        </con:property>
        <con:property>
          <con:name>userToken</con:name>
          <con:value>Bearer eyJraWQiOiIxIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJVTVMtUHJlZmlsdGVyLUNoZWNrQXV0aG9yaXplIiwic3ViIjoiVEVTVCIsImF1ZCI6IlJNIiwiaWF0IjoxNDg3MTYwOTc5LCJleHAiOjE1NTI2Mzc3MzgsImF1dGhfdGltZSI6IjEzMTEyODA4NzAiLCJub25jZSI6Im4tMFM2X1d6QTJNaiIsIm5hbWUiOiJVTVMgVGVzdCBVc2VyIiwieF9kYnNzIjp7ImF1dGh6UHJvZmlsZU5hbWUiOiJDU1JfQXV0aHpQcm9maWxlIiwidmVyc2lvbiI6InYxIiwicGFydHlfaWQiOiIxMjMiLCJleHRlcm5hbF91c2VybmFtZSI6InVlYmQ0OTVmZC04ZTkzLTQyN2YtOTJmZC1iOGJlYzcyYzJjMDIifX0.P8rCH3-cttJnfjvhURFxZ94nVST8p2jLtrry7UlyF9eESWy9NlgVFfHT7MORO0EQuIgp2WzNOEtu6tc2kiCXi9EZLx_8WWjf9SR9x-iNrw36AlGek8BgOrRmoMk1Nfrie2bIXMR7xv04EyGYC7o6COS_yWp_rH6UMF7snIkoL48</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>userRoleId</con:entry>
        <con:entry>salesOrgRoleId</con:entry>
        <con:entry>placeId</con:entry>
        <con:entry>inventoryId</con:entry>
        <con:entry>terminalId</con:entry>
        <con:entry>serializedProductId</con:entry>
        <con:entry>serializedProductStartSerialNumber</con:entry>
        <con:entry>res_serializedProductSpecCode</con:entry>
        <con:entry>res_serializedProductSpecExtId</con:entry>
        <con:entry>res_charValueId1</con:entry>
        <con:entry>res_charValueId2</con:entry>
        <con:entry>res_charValueId3</con:entry>
        <con:entry>userToken</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for controlling new serialized product" id="7b7f6b19-d81c-4098-9f2c-ca21ea8eb497">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9a007a25-9913-468b-bc8d-24832270ec46</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>userRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains user" id="f1bda94f-8aff-4716-b162-19f5e7f65d9d">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0f69b36f-ec84-49ce-ba21-99769fd8535c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>salesOrgRoleId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains so" id="5f5af969-9772-42c9-aa00-7df38da471df">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5dae95b8-6d23-4255-bd78-90738659fb7f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>placeId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains place" id="d393b4d4-27ac-4a6e-81ab-0055cc01d313">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>eeb2431b-9da7-49e1-b8fc-2f23157d1f35</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>inventoryId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains inventory" id="13b41032-1593-4c5b-99d0-cf669484d3ff">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2e010dbb-07d3-43fc-bc73-2dc7621ca35b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>terminalId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains terminal" id="083c3aef-660d-4039-b0af-e46f301441f9">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ca767b28-91ae-47c2-b7f3-042a4f8ead97</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1d0e2d18-b048-4d3d-a738-b87f25097cab</con:sourceId>
        <con:propertyName>serializedProductId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains serialized pr" id="22b01909-c4da-466a-b017-9ce74399acf2">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi for auto slice of serialized product and characteristic case" id="8da1522b-7293-4807-9f4d-066b48e07bba">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for auto slice of serialized product and characteristic case</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for auto slice of serialized product and characteristic case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for auto slice of serialized product and characteristic case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for auto slice of serialized product and characteristic case" id="0e9c7129-77c6-4788-8cc4-8ee41aab348c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion bi is created for auto slice of serialized product and characteristic case" id="5e234196-f26d-451b-baa8-b4de1b3ebc02">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>dfc38fc7-bffb-486a-8538-12b98dd9e7c6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0e9c7129-77c6-4788-8cc4-8ee41aab348c</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="2a66fc62-cf4c-47f6-81df-b8abe1d337b8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>70fa39df-5e08-4d38-b96c-cb5d3b48bedc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0e9c7129-77c6-4788-8cc4-8ee41aab348c</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="1b78ea96-74ff-45a7-84dd-167d5c33df1f">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding first item for serialized product" id="25e316e6-4024-47b6-8180-18741671fc58">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add first item to stock out bi for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add first item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add first item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add first item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add first item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add first item to stock out bi for serialized product" id="d89acbe8-5a84-4d63-b7af-6c6e44b99b7f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>533</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>76</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion first item is added for serialized product" id="7724e30c-0ead-4649-b6e6-b25fc7ea3f1e">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>06555675-6852-4c41-8963-a50396959263</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="a425c07d-4c61-4ba2-b8a3-8ee5c07da870">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>79d91d65-c6e7-4277-b8e2-8e7b8776dd27</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="7e4486e7-843b-49fc-b44c-9e75aa25c2eb">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantities and serial numbers after add first item" id="e4f18bc9-22b3-4c12-af9c-eff4f515b60f">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def quantityTotal = context.expand( '${Given properties for the test steps#quantityTen}' )
def quantityForAddedFirstItem = context.expand( '${Add first item to stock out bi for serialized product#req_quantity}' )

int remainingQuantityForOriginalProduct = quantityTotal.toInteger() - quantityForAddedFirstItem.toInteger() ;
return remainingQuantityForOriginalProduct;</script>
        </con:configuration>
        <con:name>remainingQuantityForOriginalProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def serializedProductStartSerialNumber = context.expand( '${Create serialized product with dynamic product specs#serializedProductStartSerialNumber}' )
return serializedProductStartSerialNumber.toInteger();</script>
        </con:configuration>
        <con:name>newProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def serializedProductStartSerialNumber = context.expand( '${Create serialized product with dynamic product specs#serializedProductStartSerialNumber}' ).toInteger();
def quantityForAddedFirstItem = context.expand( '${Add first item to stock out bi for serialized product#req_quantity}' ).toInteger();

int newProductEndSerialNumber = serializedProductStartSerialNumber + quantityForAddedFirstItem -1;
return newProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>newProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def serializedProductStartSerialNumber = context.expand( '${Create serialized product with dynamic product specs#serializedProductStartSerialNumber}' ).toInteger();
def quantityForAddedFirstItem = context.expand( '${Add first item to stock out bi for serialized product#req_quantity}' ).toInteger();

int orgProductStartSerialNumber = serializedProductStartSerialNumber + quantityForAddedFirstItem;
return orgProductStartSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def serializedProductStartSerialNumber = context.expand( '${Create serialized product with dynamic product specs#serializedProductStartSerialNumber}' ).toInteger();
def quantityTotal = context.expand( '${Given properties for the test steps#quantityTen}' ).toInteger();

int orgProductEndSerialNumber = serializedProductStartSerialNumber + quantityTotal - 1;
return orgProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after add first item" id="e1aa45cd-3b45-4875-a375-4ed274e8af2e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add first item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>originalProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display original product by id for lock after add first item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics after add first item" id="e5fbf2e0-d714-4a45-9dac-bf17f6143a2e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>8</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":8,"totalQuantity":10,"reservedQuantity":2,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock after add first item" id="b8957034-d871-428e-81d7-b90b3b65e074">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>76</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>76</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>533</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832446</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832447</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display original product by id for lock after add first item" id="4c25405a-b32b-4f1c-8396-606bc4ff3912">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832448</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>8</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert display stock level with characteristics and lock after add first item" id="19c70422-e7a3-4250-8eb1-544e63f8bdb7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>47b23e86-24c4-48be-bd26-0d757fa9f0bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e5fbf2e0-d714-4a45-9dac-bf17f6143a2e</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="abe74fe4-8b16-4cbd-ae80-7ae4335a932a">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityTwo</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4348c5ff-60b3-4a58-ab1b-5422708a149f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e5fbf2e0-d714-4a45-9dac-bf17f6143a2e</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="06b204b8-bee3-4f80-b820-2e2c862ec7a8">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityTen</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ea72bacd-2649-4487-ab0b-9f854b16d00b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e5fbf2e0-d714-4a45-9dac-bf17f6143a2e</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="78034909-80d8-42d1-9211-8490e37dbc20">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>606d5611-d04b-4566-aab2-c34f1c2569db</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>e5fbf2e0-d714-4a45-9dac-bf17f6143a2e</con:sourceId>
        <con:propertyName>res_productSpecificationExternalId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals spec ext id" id="26ff91cb-8724-402b-8df2-72c7285a3fa9">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>res_serializedProductSpecExtId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>9988b769-24b9-47a5-8c27-d71f8543520c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b8957034-d871-428e-81d7-b90b3b65e074</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id" id="eed55e31-406d-4019-9fd7-af10cdceb808">
          <con:configuration>
            <patternObjectId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b13bac80-e6a3-4521-9b0f-a6e96eec0ca7</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b8957034-d871-428e-81d7-b90b3b65e074</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id" id="bc60ea39-8a72-4c7d-900f-0d5db9273e6e">
          <con:configuration>
            <patternObjectId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2adc7eb7-e842-47e3-8cbe-113bf05d30cf</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b8957034-d871-428e-81d7-b90b3b65e074</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductStartSerialNumber" id="8142a681-c4e7-4151-be6e-19db4151557d">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ca805ab4-15ac-458d-90e0-120949729ed2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b8957034-d871-428e-81d7-b90b3b65e074</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductEndSerialNumber" id="9763b34c-208f-4bd4-81d7-917e547b23b1">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>dbabfda9-a7d1-48c4-9b64-7262d615419b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b8957034-d871-428e-81d7-b90b3b65e074</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of new product" id="4d5568e8-e5cb-4674-ac5d-3cbad8e95ffd">
          <con:configuration>
            <patternObjectId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>58280031-a99c-45bb-bf38-c3fcf99a0887</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4c25405a-b32b-4f1c-8396-606bc4ff3912</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id lock" id="274fb349-d3ab-4462-80d0-c6cbaa8f864d">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8cae221a-534f-4702-9ab7-8a03ae7118b0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4c25405a-b32b-4f1c-8396-606bc4ff3912</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi item id" id="77e595e3-1cc4-4705-8183-b2a2dfaaa9fb">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>248383e1-c8df-4764-90e9-683c3c8a9bef</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4c25405a-b32b-4f1c-8396-606bc4ff3912</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductStartSerialNumber" id="468bfd20-b1fa-4e90-b817-a5ae8454ee44">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>orgProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>bb4edb1a-678d-49b9-8f62-90a8a21855ae</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4c25405a-b32b-4f1c-8396-606bc4ff3912</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductEndSerialNumber" id="f768892b-c271-4591-a333-522d6b2939fe">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>orgProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0534fa3f-9171-4d1a-9a64-7ca7ffd19489</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4c25405a-b32b-4f1c-8396-606bc4ff3912</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of org product" id="7aacc3b0-ea73-40b1-985c-0674b3361cd5">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding second item for serialized product" id="c0de5cf9-349d-46bc-80bf-c644f0aa805a">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTree</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumberEmpty</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add second item to stock out bi for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add second item to stock out bi for serialized product" id="c29f47dd-976c-4861-9532-06ba0254b66b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>535</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion second item is added for serialized product" id="38f9d87b-2364-41b6-8a85-485080fa32bd">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>2210c0e5-a110-4e91-bf3a-a2133f94ba77</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c29f47dd-976c-4861-9532-06ba0254b66b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="6f7ac979-e4b5-44f8-9ee5-3c1cd681acdf">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>16aac698-52b8-443f-aeb2-836c5c5a5999</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c29f47dd-976c-4861-9532-06ba0254b66b</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="8bd71c04-88a1-426c-b2d1-a10282df2b3e">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantities and serial numbers after add second item" id="514706c4-7f9c-4b64-aaf5-fe2c0d277a51">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def remainingQuantityForOriginalProductAfterFirstItem = context.expand( '${DataGen for quantities and serial numbers after add first item#remainingQuantityForOriginalProduct}' ).toInteger();
def quantityForAddedSecondItem = context.expand( '${Add second item to stock out bi for serialized product#req_quantity}' ).toInteger();

int remainingQuantityForOriginalProductAfterSecondItem = remainingQuantityForOriginalProductAfterFirstItem - quantityForAddedSecondItem ;
return remainingQuantityForOriginalProductAfterSecondItem;</script>
        </con:configuration>
        <con:name>remainingQuantityForOriginalProductAfterSecondItem</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newSecondProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add first item#orgProductStartSerialNumber}' ).toInteger();
return newSecondProductStartSerialNumber;</script>
        </con:configuration>
        <con:name>newSecondProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newSecondProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add first item#orgProductStartSerialNumber}' ).toInteger();
def quantityForAddedSecondItem = context.expand( '${Add second item to stock out bi for serialized product#req_quantity}' ).toInteger();

int newSecondProductEndSerialNumber = newSecondProductStartSerialNumber + quantityForAddedSecondItem -1;
return newSecondProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>newSecondProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newSecondProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add first item#orgProductStartSerialNumber}' ).toInteger();
def quantityForAddedSecondItem = context.expand( '${Add second item to stock out bi for serialized product#req_quantity}' ).toInteger();

int orgProductStartSerialNumber = newSecondProductStartSerialNumber + quantityForAddedSecondItem;
return orgProductStartSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newSecondProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add first item#orgProductStartSerialNumber}' ).toInteger();
def remainingQuantityForOriginalProductAfterFirstAdd = context.expand( '${DataGen for quantities and serial numbers after add first item#remainingQuantityForOriginalProduct}' ).toInteger();


int orgProductEndSerialNumber = newSecondProductStartSerialNumber + remainingQuantityForOriginalProductAfterFirstAdd - 1;
return orgProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def quantityForAddedFirstItem = context.expand( '${Add first item to stock out bi for serialized product#req_quantity}' ).toInteger();
def quantityForAddedSecondItem = context.expand( '${Add second item to stock out bi for serialized product#req_quantity}' ).toInteger();

int reservedQuantityForOriginalProductAfterSecondItem = quantityForAddedFirstItem + quantityForAddedSecondItem;
return reservedQuantityForOriginalProductAfterSecondItem;</script>
        </con:configuration>
        <con:name>reservedQuantityForOriginalProductAfterSecondItem</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after add second item" id="fd27a381-b143-4cac-b76e-bf86a30bba5f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add second item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>originalProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display original product by id for lock after add second item</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics after add second item" id="5955e0e2-febb-4279-82f0-42cb4275347c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":5,"totalQuantity":10,"reservedQuantity":5,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock after add second item" id="71cb69e7-4719-4fa2-9a7e-9d9f4e754f65">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>535</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832448</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832450</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display original product by id for lock after add second item" id="24e2756f-d3e7-4884-8197-b0a3369d22bd">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert display stock level with characteristics and lock after add second  item" id="423830db-6909-4ad3-943e-f89e939f39da">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>6e00dfba-f54d-43cc-b6dc-bdd64b1a1294</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5955e0e2-febb-4279-82f0-42cb4275347c</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="e351a575-fb69-4f8d-8574-ec22bb4b84f9">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>reservedQuantityForOriginalProductAfterSecondItem</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b1c2a949-f1cd-4b00-a5e7-cdc589a4b134</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5955e0e2-febb-4279-82f0-42cb4275347c</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="859e376a-51ef-4a76-8172-63d04a139b21">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityTen</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5059f982-c1cd-4172-a91d-4e8b902040dd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5955e0e2-febb-4279-82f0-42cb4275347c</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="8745942d-6826-4344-8dc1-983caaa47c01">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProductAfterSecondItem</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0eca259e-3d0d-4dcc-8699-74cd1896ed18</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5955e0e2-febb-4279-82f0-42cb4275347c</con:sourceId>
        <con:propertyName>res_productSpecificationExternalId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals spec ext id" id="0fd0ace7-7531-40f2-831f-68b073aac0c8">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>res_serializedProductSpecExtId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d2a8a76b-6a66-4575-bbad-11fdc7256512</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id" id="acbbfe57-374d-4665-904f-0929bc453c4f">
          <con:configuration>
            <patternObjectId>c29f47dd-976c-4861-9532-06ba0254b66b</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e52e2625-e3fa-4456-949e-9a935aca2c26</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id" id="da0d6ad9-9f7a-4058-95d1-a72d7c80c40b">
          <con:configuration>
            <patternObjectId>c29f47dd-976c-4861-9532-06ba0254b66b</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e9ba9df7-a51f-4e57-b834-cae6a34793ba</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductStartSerialNumber" id="c3f3ed26-38d6-47a2-b976-cec5f548aab2">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>dbcebaf2-f881-4df9-a642-751bddbd82d4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductEndSerialNumber" id="66773b5a-3975-4a91-b718-c0e356023249">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5a0b5178-82aa-4fc2-a128-280a883b5743</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of new product" id="edba7cba-a016-452a-b096-d1cd79753296">
          <con:configuration>
            <patternObjectId>c29f47dd-976c-4861-9532-06ba0254b66b</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>662cf1da-9529-47db-9838-577ed740eba9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id lock" id="45dbacc6-4ed7-4a43-afea-fd66c2d94e9a">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5a57382d-e12b-42e7-a6e2-a946736706e1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi item id" id="2bf5050b-f510-4bb3-aada-183c4fbe5f35">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c9405b53-544d-454c-8504-c5656d84fc75</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductStartSerialNumber" id="ddd8720a-c88d-4474-a593-244fe9607882">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>orgProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e307e21e-6182-4ec8-8197-2727348cb0e2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductEndSerialNumber" id="ab319b91-e804-4795-956c-b448b1021b32">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>orgProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>01737a07-9b8e-442f-9b8e-5b31a9e6f5be</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of org product" id="c7259d3e-1d7b-4515-a1fe-d15a8d6aaa13">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProductAfterSecondItem</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for adding item with product id and serial for locked serialized product" id="7c9986c9-4052-40b6-829c-bb2c3dd07ed4">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>req_productId</con:sourceType>
        <con:sourceStep>Display new product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumberEnd</con:name>
        <con:sourceType>res_endSerialNumber</con:sourceType>
        <con:sourceStep>Display new product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item to stock out bi with product id and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi with product id and serial for locked serialized product" id="73446ff2-1e4c-4b16-87ed-2729e12ef2f1">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832450</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>CANNOT_UNLOCK_PRODUCT_WITH_ID_WHICH_IS_LOCKED_BY_BI_WITH_ID_AND_BI_ITEM_WITH_ID</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item to stock out bi with product id and serial for locked serialized product" id="4fa34671-6103-4cb9-a9fe-e5bbf57301e4">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3da7dc92-0086-4a67-be56-d4429c4876e4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>73446ff2-1e4c-4b16-87ed-2729e12ef2f1</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="7d0b59a0-f572-4c02-bfa0-c2779a38def0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0effb7c7-ff93-42c1-b54b-4052b18439e6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>73446ff2-1e4c-4b16-87ed-2729e12ef2f1</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="1a958617-99ed-45a9-9d90-af321ff0f987">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgCannotUnlockProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with spec ext and serial for locked serialized product" id="232c2036-35af-4194-8cd7-9e609045c24e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecExt</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumberStart</con:name>
        <con:sourceType>res_startSerialNumber</con:sourceType>
        <con:sourceStep>Display new product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item to stock out bi with spec ext and serial for locked serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item to stock out bi with spec ext and serial for locked serialized product" id="761afdbf-8c2b-4feb-bf66-63f5e19c7a82">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832448</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>REQUESTED_INPUT_AND_PRODUCT_NOT_EQUAL</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item to stock out bi with spec ext and serial for locked serialized product" id="df99c43b-a7d1-46fa-90c8-29c47876c926">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>0c6db591-d614-41c7-a248-6e275a359d3b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>761afdbf-8c2b-4feb-bf66-63f5e19c7a82</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1cc432e8-b5f3-4303-b498-a3f37c6d1e71">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>6df62fd7-867a-48a8-bd5b-2b3414e81d90</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>761afdbf-8c2b-4feb-bf66-63f5e19c7a82</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="error" id="3dec0fba-a6de-4ed3-b77a-843ea908ec18">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgRequestedInputAndProductNotEqual</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for adding item for quantity - serial incompatibility" id="dce4fb55-8a10-4318-a490-78a71a588814">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>req_productId</con:sourceType>
        <con:sourceStep>Display original product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>res_quantity</con:sourceType>
        <con:sourceStep>Display original product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumberEnd</con:name>
        <con:sourceType>res_endSerialNumber</con:sourceType>
        <con:sourceStep>Display original product by id for lock after add second item</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item for quantity - serial incompatibility" id="d545fcc1-9b39-47d9-a85f-9d379b124c21">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>REQUESTED_ENDSERIAL_IS_NOT_IN_CURRENT_RANGE</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item for quantity - serial incompatibility" id="59b44bda-4ace-41f0-8d93-615496d54018">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>e9670e3c-01a3-446d-b4b4-3f71c07453f3</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d545fcc1-9b39-47d9-a85f-9d379b124c21</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="7e4e3558-ef61-4a19-8708-3dd424fc0bdb">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>91583376-4be0-4254-b36a-a3f0ace650bc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d545fcc1-9b39-47d9-a85f-9d379b124c21</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="5eae29c4-fe8f-44ec-802b-8aedde2dd3df">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgRequestedEndSerialNumberIsNotInCurrentRange</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting bi id to submit stockout" id="bbc6596b-1946-45c0-813b-56b49d382231">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slice of serialized product and characteristic case</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out bi for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out bi for serialized product" id="3be58fec-8ba4-42d1-be81-3277c78b3414">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2491</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion bi is submitted for serialized product" id="1f0e8ff9-e1e8-4ee4-b53e-a87f3ad1a3cc">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>20648d74-27ee-49c4-9998-12d74fd8f3a1</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3be58fec-8ba4-42d1-be81-3277c78b3414</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="eb9e36f5-108c-4728-96bc-5d5ff6d241f1">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantities and serial numbers after submit" id="cfebad2a-0134-43ff-a541-d29f6362d9f8">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def remainingQuantityForOriginalProductAfterSecondItem = context.expand( '${DataGen for quantities and serial numbers after add second item#remainingQuantityForOriginalProductAfterSecondItem}' )
int totalAndAvailableQuantityForOriginalProduct = remainingQuantityForOriginalProductAfterSecondItem.toInteger();

return totalAndAvailableQuantityForOriginalProduct;</script>
        </con:configuration>
        <con:name>totalAndAvailableQuantityForOriginalProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock after submit bi" id="77f0cff2-4564-4daf-8e0c-d12a6cdcbf7f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>originalProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display original product by id for lock after submit bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>firstProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add first item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display first product by id for lock after submit bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>secondProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add second item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display second product by id for lock after submit bi</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>placeId2</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with invalid characteristics</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId1Invalid</con:name>
        <con:sourceType>quantityZero</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with invalid characteristics</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId2Invalid</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with invalid characteristics</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId3Invalid</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with invalid characteristics</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics after submit" id="db6051d7-250b-4aaa-b2aa-ded50ae56de1">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":5,"totalQuantity":5,"reservedQuantity":0,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display original product by id for lock after submit bi" id="1be1bfad-cf6a-481d-8d29-fa8bfbff192e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display first product by id for lock after submit bi" id="f7738aba-42a0-46a3-bcdf-7de2b73af80a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>76</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>76</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832446</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832447</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display second product by id for lock after submit bi" id="d9664fcf-1c36-410f-97ff-64aea1e3513c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832448</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832450</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with invalid characteristics" id="c39c9431-4944-47eb-a1e1-4b37dc8bdc39">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="BUG 1319 - Assertion display stock level with characteristics and lock" id="f9afe2b5-f3ec-4840-bcdd-8d4068d041a9">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>5e30a973-1374-4e0e-8faa-bf8c4c3de11d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>db6051d7-250b-4aaa-b2aa-ded50ae56de1</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="477ac8c1-1a17-42fb-97f4-ca08dbb5c26a">
          <con:configuration>
            <patternObjectId>cfebad2a-0134-43ff-a541-d29f6362d9f8</patternObjectId>
            <patternProperty>totalAndAvailableQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>97dca1c7-7be6-4e5a-9b02-33ee341d609a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>db6051d7-250b-4aaa-b2aa-ded50ae56de1</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="d9bc57f0-7d6b-46d6-b40d-0223fbe71b41">
          <con:configuration>
            <patternObjectId>cfebad2a-0134-43ff-a541-d29f6362d9f8</patternObjectId>
            <patternProperty>totalAndAvailableQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1959ef98-3f36-41fe-be27-5203b6edea89</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>db6051d7-250b-4aaa-b2aa-ded50ae56de1</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="df67d812-6e9e-49dc-b555-e804cf8d66aa">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f1c4c839-cb42-4885-bf54-804d9d6e9da6</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>db6051d7-250b-4aaa-b2aa-ded50ae56de1</con:sourceId>
        <con:propertyName>res_productSpecificationExternalId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals spec ext id" id="8a47abbf-22a9-48a8-afb8-bba920f44059">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>res_serializedProductSpecExtId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a3443611-b74f-4c6d-b7dc-db306475b62a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains org pr lock bi id" id="d6da4b3e-b4b7-48ba-b35a-5e0d88905527">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>72452bf9-41ad-4845-a24d-acdf2eb4c34a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains org pr lock item id" id="570f9191-8f34-40a8-b45e-6493a810c59d">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e38bad62-e59f-4a98-8076-3061d0e25934</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals org pr start serial number" id="6d23663a-8b7e-4837-a46f-7c0a2fdea905">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>orgProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>51eca5cb-77a7-4998-88e4-e13133b2e371</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals org pr end serial number" id="7b84aadf-5a7b-4ab6-8793-006d683de989">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>orgProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>20a35b5c-647a-4104-9a4a-a80ad9d1a164</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals org pr quantity" id="33469ee3-d5a5-4b26-be8d-51421f346d90">
          <con:configuration>
            <patternObjectId>cfebad2a-0134-43ff-a541-d29f6362d9f8</patternObjectId>
            <patternProperty>totalAndAvailableQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cb08865c-01ea-4a70-aed8-00c24b468dfb</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains first pr lock bi id" id="3ecacf72-75e7-4d28-9d0e-f52c2e39f3bc">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>896f310e-7303-4118-9968-2940206614ed</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains first pr lock item id" id="76065038-2852-45ca-8dfe-d7a511c3948f">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8e81c23a-0f7f-452a-97a8-9db3a9c08579</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr start serial number" id="79564e97-c534-426a-ba2c-668718d33ec9">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8c551ef9-de0a-475f-b4ab-410a33a8b07d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr end serial number" id="0b0ec522-78cc-4103-9e6b-bdfcf7e3f785">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>7e3d67c0-afa4-462a-ad61-9996e119997c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr quantity" id="e473cbcf-66b2-4959-bed2-d5c9730a15c7">
          <con:configuration>
            <patternObjectId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fc1988bd-e6f1-4dde-972a-821b6b023552</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d9664fcf-1c36-410f-97ff-64aea1e3513c</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains second pr lock bi id" id="0db30fcc-793a-4c9a-9763-e88cdb79398a">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>65f03b72-d97f-414b-9c11-4c6bc6ac8245</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d9664fcf-1c36-410f-97ff-64aea1e3513c</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains second pr lock item id" id="0fb4295e-e393-4389-b76a-6e87b0d99b89">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>050c2f20-9a2e-43b4-85d4-78a5a2af4c02</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d9664fcf-1c36-410f-97ff-64aea1e3513c</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr start serial number" id="fd5a2a83-267a-49f1-9bb0-a30fe940e3c6">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>c9158460-cb33-4aac-84ba-9ff28738f767</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d9664fcf-1c36-410f-97ff-64aea1e3513c</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr end serial number" id="d97bb18b-98f8-42e8-b88d-f12df72f2191">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>35420e58-a26e-4b71-91ac-ca721d979fcb</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>d9664fcf-1c36-410f-97ff-64aea1e3513c</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr quantity" id="a166e669-ff4e-45fa-8d4e-dd99cb61dc50">
          <con:configuration>
            <patternObjectId>c29f47dd-976c-4861-9532-06ba0254b66b</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>f55a9bf8-af00-42f7-a923-4b0dab5a4c7f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c39c9431-4944-47eb-a1e1-4b37dc8bdc39</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="res code invalid chars" id="6596ae4a-b9ee-4d68-abdf-eeeb69db6d1d" disabled="true">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>6b9ad52a-eaa0-4625-8cac-4eafa10e5428</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c39c9431-4944-47eb-a1e1-4b37dc8bdc39</con:sourceId>
        <con:propertyName>res_fullResponse</con:propertyName>
        <con:assertion type="Simple Equals" name="empty list for invalid chars" id="9c72e960-73b3-4b88-aa33-27f848d7628c" disabled="true">
          <con:configuration>
            <patternText>[]</patternText>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for controlling out of organization for new serialized products after auto slice" id="ef080fda-ea34-47d6-b70f-8e230f86e947">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display first serialized product at out of organization</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>specExtId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display first serialized product at out of organization</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add first item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display first serialized product at out of organization</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId2</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display second serialized product at out of organization</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>specExtId2</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display second serialized product at out of organization</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId2</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add second item to stock out bi for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display second serialized product at out of organization</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display first serialized product at out of organization" id="09cea0bc-ea02-428c-b5f0-9e29c8d87abb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b6847006-44e8-4d10-bf78-39a5419c6192</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>76</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832446</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832447</con:value>
        </con:property>
        <con:property>
          <con:name>res_inventoryId</con:name>
        </con:property>
        <con:property>
          <con:name>req_querySoId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productStatus</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display second serialized product at out of organization" id="6866f33b-af67-4ed5-9f68-b01090a6984a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b6847006-44e8-4d10-bf78-39a5419c6192</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832448</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832450</con:value>
        </con:property>
        <con:property>
          <con:name>res_inventoryId</con:name>
        </con:property>
        <con:property>
          <con:name>req_querySoId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productStatus</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for controlling out of organization for new serialized products after auto slice" id="65b8c8b9-e9b2-4668-acf5-28395183b074">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>18892951-ebd3-490a-8325-cd3b27e7e583</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>09cea0bc-ea02-428c-b5f0-9e29c8d87abb</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr quantity" id="3f5932d3-5a58-447e-866f-63a1fcbaad4d">
          <con:configuration>
            <patternObjectId>d89acbe8-5a84-4d63-b7af-6c6e44b99b7f</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e22eee02-b1e6-4c40-b769-8187cf235024</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>09cea0bc-ea02-428c-b5f0-9e29c8d87abb</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr start serial" id="fe694829-5609-4596-952d-40dc8100d1a1">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e08fe98f-5949-4a70-a601-a221e717cb83</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>09cea0bc-ea02-428c-b5f0-9e29c8d87abb</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr end serial" id="6d253a34-a74b-417b-bae5-1bcdadc71b5d">
          <con:configuration>
            <patternObjectId>e4f18bc9-22b3-4c12-af9c-eff4f515b60f</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b6c3464f-9745-433a-b52e-2bd702e357d5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6866f33b-af67-4ed5-9f68-b01090a6984a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr quantity" id="2039e3a4-72d7-4b60-96bd-5eb6c9952109">
          <con:configuration>
            <patternObjectId>c29f47dd-976c-4861-9532-06ba0254b66b</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fa6d26eb-fe84-490e-865d-ad2faf4564ea</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6866f33b-af67-4ed5-9f68-b01090a6984a</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr start serial" id="75051130-650c-427c-9e05-1baac52e0fef">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>bda064a1-cdd0-4821-a6ca-030e2ba48965</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6866f33b-af67-4ed5-9f68-b01090a6984a</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr end serial" id="3523620a-2b10-43ff-a3fd-08bedc7c45e7">
          <con:configuration>
            <patternObjectId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</patternObjectId>
            <patternProperty>newSecondProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi for auto slicing with serial number input for serialized product" id="07337df5-2b4c-4cfc-8c03-a6dfcfeda7fc">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for auto slicing with serial number input for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for auto slicing with serial number input for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for auto slicing with serial number input for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for auto slicing with serial number input for serialized product" id="0c427db7-f85d-4fca-b3b8-2f0aa8dc8764">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion bi is created for auto slicing with serial number input for serialized product" id="76ff0927-ffc8-4fcb-acdb-f21ffb6a2964">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>a42a4cd6-0a74-46a5-8494-f320c4704696</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0c427db7-f85d-4fca-b3b8-2f0aa8dc8764</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="bd000c2c-f56f-46ea-8a82-f8ad9840add6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0faae808-8c9b-4ac8-8e90-c29b2deb7e95</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>0c427db7-f85d-4fca-b3b8-2f0aa8dc8764</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="8d6e57dc-4d90-4de4-8f7f-08f297ee0373">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen quantities and serial numbers for serial number input cases" id="10730197-247a-44fd-9595-7e23c4a8609c">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def orgProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductStartSerialNumber}' ).toInteger();
def quantityTwo = context.expand( '${Given properties for the test steps#quantityTwo}' ).toInteger();

int beginningSerialNumberInput = orgProductStartSerialNumber + quantityTwo ;
return beginningSerialNumberInput;</script>
        </con:configuration>
        <con:name>beginningSerialNumberInput</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def orgProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductStartSerialNumber}' ).toInteger();
int invalidStartSerialNumber = orgProductStartSerialNumber - 1;
return invalidStartSerialNumber;</script>
        </con:configuration>
        <con:name>invalidStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def orgProductEndSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductEndSerialNumber}' ).toInteger();

int invalidEndSerialNumber = orgProductEndSerialNumber + 1;
return invalidEndSerialNumber;</script>
        </con:configuration>
        <con:name>invalidEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="DataSource for invalid serial number values for adding item" id="156a12da-4854-43d8-9012-40cf629ca34a">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Grid">
        <con:configuration>
          <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#quantityOne}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgRequestedInputAndProductNotEqual}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgSerialNotInCurrentRange}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${DataGen quantities and serial numbers for serial number input cases#invalidEndSerialNumber}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgRequestedInputAndProductNotEqual}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMsgRequestedEndSerialNumberIsNotInCurrentRange}</con:entry></xml-fragment>]]></row>
          <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#invalidCharacter}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMessageSerialContainsOnlyDigit}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${Given properties for the test steps#errorMessageSerialMustBePositiveLong}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
        </con:configuration>
      </con:dataSource>
      <con:property>serialNumber</con:property>
      <con:property>errorMsg</con:property>
      <con:property>errorMsgCase2</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for errorMsg" id="0f40e4cf-8a4b-488e-b4a1-ad344a83b558">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def errorMsg = context.expand( '${DataSource for invalid serial number values for adding item#errorMsg}' )
return errorMsg.toString();</script>
        </con:configuration>
        <con:name>errorMsg</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def errorMsg = context.expand( '${DataSource for invalid serial number values for adding item#errorMsgCase2}' )
return errorMsg.toString();</script>
        </con:configuration>
        <con:name>errorMsgCase2</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with invalid serial number and valid spec ext id for serialized product" id="6b1c6e94-6b8d-481d-b0a2-12feb12cd8a5">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>serialNumber</con:sourceType>
        <con:sourceStep>DataSource for invalid serial number values for adding item</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecificationExternalId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with invalid serial number and valid spec ext id for serialized product" id="42e11a17-92af-46e8-9d4f-ab63f350c647">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>SERIAL_MUST_CONTAIN_ONLY_DIGIT</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>${Given properties for the test steps#invalidCharacter}</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with invalid serial number and valid spec ext id for serialized product" id="a38c3cc3-37bc-47d3-88c2-c5821fb28c04">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3a93c231-597e-425c-b2a0-74a3bb3c92bd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>42e11a17-92af-46e8-9d4f-ab63f350c647</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="63c07893-6a14-4408-b35d-afc8cbaa98e3">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>aa857e47-068a-4467-b76c-5782b9b77d6f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>42e11a17-92af-46e8-9d4f-ab63f350c647</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="66d67fcf-2cb6-46ef-b629-5209bf4fe686">
          <con:configuration>
            <patternObjectId>0f40e4cf-8a4b-488e-b4a1-ad344a83b558</patternObjectId>
            <patternProperty>errorMsg</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with invalid serial number and valid product id for serialized product" id="b036d300-959c-483d-8feb-605eff09ab8e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>serialNumber</con:sourceType>
        <con:sourceStep>DataSource for invalid serial number values for adding item</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with invalid serial number and valid product id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with invalid serial number and valid product id for serialized product" id="343b0da0-cadb-4975-84e7-2304d5e157a1">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>SERIAL_NUMBERS_OF_SERIALIZED_PRODUCTS_MUST_BE_POSITIVE_LONG</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>${Given properties for the test steps#invalidCharacter}</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with invalid serial number and valid product id for serialized product" id="6641bd54-e19a-413c-ac30-a525d86e65c5">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>f5ec24fc-dd90-4a38-8205-9e49667c2be0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>343b0da0-cadb-4975-84e7-2304d5e157a1</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5a8cc04a-317b-4bc9-89f0-e52befed44d7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>fe34a9e0-58df-4399-b84e-8a12e531c3f5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>343b0da0-cadb-4975-84e7-2304d5e157a1</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error msg" id="38974834-2923-4c22-bf7a-c5b91f6c4a0d">
          <con:configuration>
            <patternObjectId>0f40e4cf-8a4b-488e-b4a1-ad344a83b558</patternObjectId>
            <patternProperty>errorMsgCase2</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="DataSource Loop for invalid serial number values for adding item" id="d05ebac6-5c54-449e-97be-02f7caab733c">
    <con:settings/>
    <con:config>
      <dataSourceStep>DataSource for invalid serial number values for adding item</dataSourceStep>
      <targetStep>DataGen for errorMsg</targetStep>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with serial number for serialized product without product id and spec ext id" id="47a3ef37-6708-44ef-80e9-d40bc243021a">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with serial number for serialized product without product id and spec ext id</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with serial number for serialized product without product id and spec ext id</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with serial number for serialized product without product id and spec ext id</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with serial number for serialized product without product id and spec ext id</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>beginningSerialNumberInput</con:sourceType>
        <con:sourceStep>DataGen quantities and serial numbers for serial number input cases</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with serial number for serialized product without product id and spec ext id</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with serial number for serialized product without product id and spec ext id" id="22282173-4d5c-4f1c-94d5-169a97753f61">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>NO_PRODUCT_ID_OR_SPEC_ID_FOUND_IN_PROVIDED_INFORMATION</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with serial number for serialized product without product id and spec ext id" id="f37a676e-5d5d-4592-b5bb-f64f5bced04d">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>1ac9a47a-74df-454a-a362-d0a8e61c8730</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>22282173-4d5c-4f1c-94d5-169a97753f61</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="b201593f-9276-414c-9419-707ed98dbe63">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgNoProductIdOrSpecIdFoundInProvidedInformation</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>db3d7bf7-337b-4a8a-af27-e9386ccf02e8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>22282173-4d5c-4f1c-94d5-169a97753f61</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="2de112b7-a840-41d7-bf38-0637d0c2a412">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with serial number and invalid spec ext id for serialized product" id="80047d86-9622-441a-b3b2-045774d4e786">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>beginningSerialNumberInput</con:sourceType>
        <con:sourceStep>DataGen quantities and serial numbers for serial number input cases</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecificationExternalId</con:name>
        <con:sourceType>invalidExtId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item with serial number and invalid spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with serial number and invalid spec ext id for serialized product" id="33e5294a-c312-487d-9625-0c797fefe3cb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>NO_PRODUCT_SPEC_FOUND_WITH_PROVIDED_EXTERNAL_ID</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with serial number and invalid spec ext id for serialized product" id="42d84b54-3e3c-49c4-b50c-b9c81338bc21">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>7278deea-2936-4d54-bb95-769b715af29a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>33e5294a-c312-487d-9625-0c797fefe3cb</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="34437c5a-265c-4456-980a-74ba78d80f7b">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>2f6a339a-0802-4196-8bb7-764362a9cfc0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>33e5294a-c312-487d-9625-0c797fefe3cb</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="e353877b-1b5e-4b8f-824a-b9d371b0fd23">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgNoProductSpecFoundWithProvidedExternalId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with only spec ext id for serialized product" id="ba3bd799-451a-4cd3-a222-64f8f0dd147b">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with only spec ext id for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with only spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with only spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with only spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecificationExternalId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item with only spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with only spec ext id for serialized product" id="710423e7-d532-4855-82f5-61b2dcd7aa6b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>3087e1d7-639d-4afe-a60a-f49a0afa3eac</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>SERIAL_NUMBER_MUST_BE_PROVIDED</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with only spec ext id for serialized product" id="27fdd68b-80ed-466e-8467-e565c013fe18">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3a0af1d0-aa33-40af-b1da-2b12b16737cf</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>710423e7-d532-4855-82f5-61b2dcd7aa6b</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="486580bf-e7e9-4db2-a39d-6a8ad31161a2">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8d5bf28c-4569-48d3-82f5-0f63507c8308</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>710423e7-d532-4855-82f5-61b2dcd7aa6b</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="493ddd9e-6e51-4611-a4d8-bcaced9f6ed6">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgSerialNumberMustBeProvided</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer for adding item with serial number for quantity - serial incompatibility" id="9209995a-b672-4975-a772-ff503a753b4f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>res_quantity</con:sourceType>
        <con:sourceStep>Display original product by id for lock after submit bi</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>res_endSerialNumber</con:sourceType>
        <con:sourceStep>Display original product by id for lock after submit bi</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecificationExternalId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item with serial number for quantity - serial incompatibility</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with serial number for quantity - serial incompatibility" id="a2640f6b-4400-420f-8604-0397e3430bd8">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>REQUESTED_ENDSERIAL_IS_NOT_IN_CURRENT_RANGE</con:value>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion cannot add item with serial number for quantity - serial incompatibility" id="2c15506c-4623-4c7c-b4e6-2ec9a2f0a7db">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>85a31ca3-b06d-46f7-a277-6d55f938c93e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a2640f6b-4400-420f-8604-0397e3430bd8</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5285a29a-0b3c-4f28-890c-087727dbab44">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>16cbdb23-0eba-4ca4-983c-5e47ba31a496</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a2640f6b-4400-420f-8604-0397e3430bd8</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals error" id="2edac9f6-e8b1-464e-b5c5-33f368597351">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgRequestedEndSerialNumberIsNotInCurrentRange</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding item with serial number and spec ext id for serialized product" id="bc3a5033-5a19-4fcc-8a78-b19ab59b40e9">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonOther</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>beginningSerialNumberInput</con:sourceType>
        <con:sourceStep>DataGen quantities and serial numbers for serial number input cases</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productSpecificationExternalId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Add item with serial number and spec ext id for serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add item with serial number and spec ext id for serialized product" id="2cfe250a-41f2-4c11-85eb-749d40210b4a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9b42630d-2419-4967-ba92-b4d48263736f</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>546</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Other</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion item with serial number and spec ext id is added for serialized product" id="ded92130-ec3b-499a-aab6-18fe2d56c1e8">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>92a65d8e-4597-4cf1-8ea2-f9e53063dafd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2cfe250a-41f2-4c11-85eb-749d40210b4a</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="79b9f12f-3f5e-4a96-b051-e0a2e7696958">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>828f02ee-322d-49e5-aebf-573f70cc0a85</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2cfe250a-41f2-4c11-85eb-749d40210b4a</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="b31972c7-f248-443c-9507-5edd9ace5f5b">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>667695cb-bfb4-4a33-8e93-e888ea2f3e8c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2cfe250a-41f2-4c11-85eb-749d40210b4a</con:sourceId>
        <con:propertyName>res_new_product_id</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains product" id="061c917d-e1c4-4e5e-908f-ebf676f5413f">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantities and serial numbers after add item with serial number" id="43f064aa-e99f-4c93-823d-256169ee8577">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def beginningSerialNumberInput = context.expand( '${DataGen quantities and serial numbers for serial number input cases#beginningSerialNumberInput}' ).toInteger();
def orgProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductStartSerialNumber}' ).toInteger();

int remainingQuantityForOriginalProduct = beginningSerialNumberInput - orgProductStartSerialNumber;
return remainingQuantityForOriginalProduct;</script>
        </con:configuration>
        <con:name>remainingQuantityForOriginalProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningSerialNumberInput = context.expand( '${DataGen quantities and serial numbers for serial number input cases#beginningSerialNumberInput}' ).toInteger();
return beginningSerialNumberInput.toInteger();</script>
        </con:configuration>
        <con:name>newProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningSerialNumberInput = context.expand( '${DataGen quantities and serial numbers for serial number input cases#beginningSerialNumberInput}' ).toInteger();
def quantityToAdd = context.expand( '${Add item with serial number and spec ext id for serialized product#req_quantity}' ).toInteger();

int newProductEndSerialNumber = beginningSerialNumberInput + quantityToAdd -1;
return newProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>newProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def orgProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductStartSerialNumber}' ).toInteger();
return orgProductStartSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def beginningSerialNumberInput = context.expand( '${DataGen quantities and serial numbers for serial number input cases#beginningSerialNumberInput}' ).toInteger();

int orgProductEndSerialNumber = beginningSerialNumberInput - 1;
return orgProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>orgProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newProductEndSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add item with serial number#newProductEndSerialNumber}' ).toInteger();

int newRemainingProductStartSerialNumber = newProductEndSerialNumber + 1 ;
return newRemainingProductStartSerialNumber;</script>
        </con:configuration>
        <con:name>newRemainingProductStartSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def orgProductEndSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add second item#orgProductEndSerialNumber}' ).toInteger();
int newRemainingProductEndSerialNumber =  orgProductEndSerialNumber;
return newRemainingProductEndSerialNumber;</script>
        </con:configuration>
        <con:name>newRemainingProductEndSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantityOfOriginalProduct = context.expand( '${Display original product by id for lock after submit bi#res_quantity}' ).toInteger();
def quantityToAdd = context.expand( '${Add item with serial number and spec ext id for serialized product#req_quantity}' ).toInteger();

int availableQuantityAfterAddItemWithSerialNumber = totalQuantityOfOriginalProduct - quantityToAdd ;
return availableQuantityAfterAddItemWithSerialNumber;</script>
        </con:configuration>
        <con:name>availableQuantityOrgPrAfterAddItemWithSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def quantityToAdd = context.expand( '${Add item with serial number and spec ext id for serialized product#req_quantity}' ).toInteger();
int reservedQuantityAfterAddItemWithSerialNumber = quantityToAdd;
return reservedQuantityAfterAddItemWithSerialNumber;</script>
        </con:configuration>
        <con:name>reservedQuantityOrgPrAfterAddItemWithSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantityOfOriginalProduct = context.expand( '${Display original product by id for lock after submit bi#res_quantity}' ).toInteger();

int totalQuantityAfterAddItemWithSerialNumber = totalQuantityOfOriginalProduct;
return totalQuantityAfterAddItemWithSerialNumber;</script>
        </con:configuration>
        <con:name>totalQuantityOrgPrAfterAddItemWithSerialNumber</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def newRemainingProductEndSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add item with serial number#newRemainingProductEndSerialNumber}' ).toInteger();
def newRemainingProductStartSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add item with serial number#newRemainingProductStartSerialNumber}' ).toInteger();

int totalQuantityOfRemainingProduct = newRemainingProductEndSerialNumber - newRemainingProductStartSerialNumber +1 ;
return totalQuantityOfRemainingProduct;</script>
        </con:configuration>
        <con:name>totalQuantityOfRemainingProduct</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for getting remaining product by product spec ext id and serial number" id="254ff8f0-55bb-4030-8e50-379244350d83">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>specExtId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_prodSpecExtId</con:targetType>
        <con:targetStep>Get remaining product by product spec ext id and serial number</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumber</con:name>
        <con:sourceType>newRemainingProductStartSerialNumber</con:sourceType>
        <con:sourceStep>DataGen for quantities and serial numbers after add item with serial number</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Get remaining product by product spec ext id and serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Get remaining product by product spec ext id and serial number" id="5117e0c0-f841-411d-8593-36ba53d62785">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>33924095-ff79-4ac9-8702-e4724b8c43d0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_productId</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_serialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
        </con:property>
        <con:property>
          <con:name>req_includeLocked</con:name>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
        </con:property>
        <con:property>
          <con:name>res_lockedByItemId</con:name>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_productId</con:entry>
        <con:entry>res_serialNumber</con:entry>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion remaining product is found successfully" id="e60315b4-0820-4ca3-a674-68090225d2d7">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>4fb95bda-26a4-4119-81aa-ea1d722d6344</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5117e0c0-f841-411d-8593-36ba53d62785</con:sourceId>
        <con:propertyName>res_productId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="9fb21332-83c4-4523-98e8-3f2252a456dc">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b7a79342-265d-412d-98ec-c94651e0190f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5117e0c0-f841-411d-8593-36ba53d62785</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="85e5fe83-4666-46c0-adeb-32722ae1d1b7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control after add first item 2" id="7a521de6-f9de-4e7e-acb8-c285e198cbd7">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics  after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics  after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics  after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics  after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>originalProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display original product by id for lock  after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item with serial number and spec ext id for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>remainingProductId</con:name>
        <con:sourceType>res_productId</con:sourceType>
        <con:sourceStep>Get remaining product by product spec ext id and serial number</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display remaining product by id for lock after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics  after auto slicing" id="29ccd722-a37f-43ee-951f-71772f6e9dba">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>5</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":3,"totalQuantity":5,"reservedQuantity":2,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display original product by id for lock  after auto slicing" id="f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832452</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock after auto slicing" id="274e072f-c8a8-459c-8510-ecd83540845f">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>546</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832454</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display remaining product by id for lock after auto slicing" id="c34ecfd9-3fef-4402-83e0-84bcb08a8e33">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assert display stock level with characteristics and lock after auto slicing" id="08e1bfeb-2397-42e5-a15b-704569892eaa">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>533d518b-f0f3-4539-bd68-d9713ea7ce5a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>29ccd722-a37f-43ee-951f-71772f6e9dba</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="14fd9efb-fe64-449a-9fce-bf75594fbeec">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>reservedQuantityOrgPrAfterAddItemWithSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e4931c51-c1d2-4354-a2e6-bc2831f0e202</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>29ccd722-a37f-43ee-951f-71772f6e9dba</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="7d156369-2b12-404f-9eab-a5b535e5753b">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>totalQuantityOrgPrAfterAddItemWithSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>66b76965-7f58-4301-9c16-3d41415330b5</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>29ccd722-a37f-43ee-951f-71772f6e9dba</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="9367aafd-47df-4d46-af20-16bb41ddf6dc">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>availableQuantityOrgPrAfterAddItemWithSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a664526e-fb60-4a54-82e5-0909565e965a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>29ccd722-a37f-43ee-951f-71772f6e9dba</con:sourceId>
        <con:propertyName>res_productSpecificationExternalId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals spec ext id" id="28077130-5678-4225-a172-cdaf83ebf955">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>res_serializedProductSpecExtId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b74de1e8-d045-4f85-a6cf-bbe06f2a8fae</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id lock original pr" id="f876f0dc-85f4-4a83-9af5-fadc9e0d1c46">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>3276737e-ff3c-489a-9d3c-9df177ea5e27</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains item id lock original pr" id="ba19f03e-9b7e-49fd-9d38-607d2c4930da">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>12d64695-6dca-4fa0-8e55-a3456454a444</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductStartSerialNumber" id="ab8bcf9a-cfd4-4bce-831e-f95504fdcccf">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>orgProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>41f38acd-8f28-4cae-bc63-910c474a1d69</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals orgProductEndSerialNumber" id="ced6dc0d-ff36-41c3-8270-a1c1c685a4d8">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>orgProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>68d6fd69-c517-4ab4-bae2-7b3fee9be366</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of org product" id="4536f60d-67d0-431e-8f9d-656713722698">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>16ad459f-59ef-4ef7-b560-51b62dc27397</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>274e072f-c8a8-459c-8510-ecd83540845f</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals bi id lock new pr" id="eaee3f5d-8d23-45ff-b892-66afddc0e4c5">
          <con:configuration>
            <patternObjectId>2cfe250a-41f2-4c11-85eb-749d40210b4a</patternObjectId>
            <patternProperty>req_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>71bf3527-c95b-4add-aed8-c292ad53ab96</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>274e072f-c8a8-459c-8510-ecd83540845f</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals item id lock new pr" id="ca2342c3-e3bd-452a-9249-348089e27912">
          <con:configuration>
            <patternObjectId>2cfe250a-41f2-4c11-85eb-749d40210b4a</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d87adf4d-d2df-4da8-9199-31027f448bdc</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>274e072f-c8a8-459c-8510-ecd83540845f</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductStartSerialNumber" id="58d4519a-259e-4b1b-a4c1-aa992d346493">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cf50f2c4-14f7-4d73-8229-5b617a36c112</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>274e072f-c8a8-459c-8510-ecd83540845f</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals newProductEndSerialNumber" id="177bd9de-edb6-441e-b8dd-247164265a24">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8bf2900a-564f-4338-806a-86afe7edf6e0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>274e072f-c8a8-459c-8510-ecd83540845f</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of new product" id="332fc555-3274-4bcf-ab64-47238218de30">
          <con:configuration>
            <patternObjectId>2cfe250a-41f2-4c11-85eb-749d40210b4a</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>439baab1-0a88-4364-ad31-f3e358afbf5e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c34ecfd9-3fef-4402-83e0-84bcb08a8e33</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains bi id lock remaining pr" id="56a062ed-7c99-432b-9233-914762f9c495">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d6ae479d-4ec8-4942-8fe6-16bb8e260e7c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c34ecfd9-3fef-4402-83e0-84bcb08a8e33</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains item id lock remining pr" id="8ceeca68-524b-43d2-a7a3-f8ef15da1604">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>02b3fa3e-f519-48d2-a078-84eba65c31ec</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c34ecfd9-3fef-4402-83e0-84bcb08a8e33</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals remaningProductStartSerialNumber" id="d4e27467-2cd9-44f3-bb71-4d41f0a64fe7">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newRemainingProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>aaff8e0a-2897-4930-80ca-c23fc4f4285b</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c34ecfd9-3fef-4402-83e0-84bcb08a8e33</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals remaningProductEndSerialNumber" id="ee620f12-7a0f-48e8-a1ec-2e1e15623c56">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newRemainingProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>890e5fd6-61a6-4d01-87b3-5769c19d5727</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>c34ecfd9-3fef-4402-83e0-84bcb08a8e33</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of remaining product" id="c2e6b68e-9118-431d-a75b-d8ea74cd1f74">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>totalQuantityOfRemainingProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for setting bi id to submit stockout with serial number" id="c5f5bd64-0132-434a-82a8-71c995caf8e9">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for auto slicing with serial number input for serialized product</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out bi for serialized product with serial number</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out bi for serialized product with serial number" id="81d787e7-019e-429f-aa31-419b9b099bca">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2501</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion bi is submitted for serialized product with serial number" id="085e89fc-5620-48f9-bdbd-00e998a3d99f">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>8cdba0a3-3878-43ee-86bb-5ac25e436a8f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>81d787e7-019e-429f-aa31-419b9b099bca</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="c4ed8c61-71b4-4e62-9179-a569b01f05ee">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen for quantities and serial numbers after submit with serial number" id="a004ffb5-29ae-4a7e-b772-38b38e7e83d7">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def availableQuantityOrgPrAfterAddItemWithSerialNumber = context.expand( '${DataGen for quantities and serial numbers after add item with serial number#availableQuantityOrgPrAfterAddItemWithSerialNumber}' ).toInteger();

int totalAndAvailableQuantityForOrgPrAfterSubmit = availableQuantityOrgPrAfterAddItemWithSerialNumber;
return totalAndAvailableQuantityForOrgPrAfterSubmit;</script>
        </con:configuration>
        <con:name>totalAndAvailableQuantityForOrgPrAfterSubmit</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock after submit with serial number" id="e274ca8a-6793-44f8-a31c-2b999a315f1e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>originalProductId</con:name>
        <con:sourceType>serializedProductId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display original product by id for lock after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item with serial number and spec ext id for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>remiainingProductId</con:name>
        <con:sourceType>res_productId</con:sourceType>
        <con:sourceStep>Get remaining product by product spec ext id and serial number</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display remaining product by id for lock after submit with serial number</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics after submit with serial number" id="045d00b6-74c5-4f01-9cd7-7d24bf4105d8">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":3,"totalQuantity":3,"reservedQuantity":0,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display original product by id for lock after submit with serial number" id="2c296190-00f2-4541-ba36-e3e1acd7b58c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832452</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock after submit with serial number" id="61bd6892-1bb5-4ebb-a601-6679ea5f217a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832454</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display remaining product by id for lock after submit with serial number" id="5a42a81c-2db0-4188-a7bb-7a5f6dff47b9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion display stock level and lock after submit with serial number" id="8d955d93-268c-4ddf-acb6-61ab6e2f6708">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9304c6d5-ce9c-48aa-b30a-88c7192cc615</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>045d00b6-74c5-4f01-9cd7-7d24bf4105d8</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals total" id="ddcd4b9a-c2c3-4b20-ba57-d8088ac8a682">
          <con:configuration>
            <patternObjectId>a004ffb5-29ae-4a7e-b772-38b38e7e83d7</patternObjectId>
            <patternProperty>totalAndAvailableQuantityForOrgPrAfterSubmit</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b76f20f6-cc92-45c8-a239-54e554d7587f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>045d00b6-74c5-4f01-9cd7-7d24bf4105d8</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals available" id="eb25cb55-71ec-4523-a1e0-960e478d54ea">
          <con:configuration>
            <patternObjectId>a004ffb5-29ae-4a7e-b772-38b38e7e83d7</patternObjectId>
            <patternProperty>totalAndAvailableQuantityForOrgPrAfterSubmit</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1f596880-7445-4b1f-8fc0-89ad0c6a4e5c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>045d00b6-74c5-4f01-9cd7-7d24bf4105d8</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals reserved" id="96da13aa-217e-49ed-8804-4639dccb3963">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>91eaf6a8-f9b4-4930-acc1-72f83b25013d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>045d00b6-74c5-4f01-9cd7-7d24bf4105d8</con:sourceId>
        <con:propertyName>res_productSpecificationExternalId</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals spec ext id" id="1be9e475-4240-424d-83e5-654a0c18f09b">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>res_serializedProductSpecExtId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>35b0dbf5-f2c6-45ef-ac37-d21c5b081e0a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2c296190-00f2-4541-ba36-e3e1acd7b58c</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains org pr lock bi id" id="2762bc4c-1d8b-4f96-941e-f72a51d913ba">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>809770b5-6e4d-4734-abc4-7fcd6243324e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2c296190-00f2-4541-ba36-e3e1acd7b58c</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains org pr lock item id" id="6e5c7ea6-12a7-4cb3-8242-36f1c1bcbb29">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4ac4b5ae-4b8d-40b4-b6c9-a2e16593e8bd</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2c296190-00f2-4541-ba36-e3e1acd7b58c</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals org pr start serial number" id="74696463-3924-4029-9a42-f4aded015357">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>orgProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0f9197bf-79a3-46ed-b443-da99d6c973c9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2c296190-00f2-4541-ba36-e3e1acd7b58c</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals org pr end serial number" id="602cc174-9a1f-41d8-ba4c-0e507edd4b1f">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>orgProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e45d74ff-2ac6-4757-b312-9e1a6dc6e01d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2c296190-00f2-4541-ba36-e3e1acd7b58c</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals quantity of org product" id="be416e89-fec2-42fd-8f6b-efcb29121502">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>remainingQuantityForOriginalProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>51ac1c8b-3fbd-41f2-8f19-3b2e29718c9e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>61bd6892-1bb5-4ebb-a601-6679ea5f217a</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains new pr lock bi id" id="7d027528-43b7-4a09-92df-b78ea8d7691c">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4e250398-cb00-47a1-8627-d216d8442c7d</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>61bd6892-1bb5-4ebb-a601-6679ea5f217a</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains new pr lock item id" id="6435156e-97d5-4b3b-9501-768b67076dc6">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5a9dfa50-26ca-4676-b319-100a40511bff</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>61bd6892-1bb5-4ebb-a601-6679ea5f217a</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals new pr start serial number" id="854df4fa-7ebf-4824-83fc-08bef0fe90a3">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>81f09832-9353-4954-be2b-6f66d743b918</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>61bd6892-1bb5-4ebb-a601-6679ea5f217a</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals new pr end serial number" id="6394626c-b4c6-495e-b828-d5d2485db7e5">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>10892fd0-c039-4e62-b3e8-a3b8ba884fa7</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>61bd6892-1bb5-4ebb-a601-6679ea5f217a</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals new pr quantity" id="df4a4553-cfcc-4939-9867-ad1c36e57a78">
          <con:configuration>
            <patternObjectId>2cfe250a-41f2-4c11-85eb-749d40210b4a</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>88f78de8-9fab-4ff0-b6f4-5c3f20e92d24</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains remaining pr lock bi id" id="b106aad7-d7fd-4770-b84a-3da80b81532e">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cc3f66d2-8523-4d52-a68e-c2a0843c7130</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains remaining pr lock item id" id="2bcc6e18-9a80-46e2-9d90-1cc05aef3cb9">
          <con:configuration>
            <token>^\s*$</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ddc9e223-e8ce-47d2-a4a0-26124d705840</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals remaining pr start serial number" id="862c45c6-d8ac-47d7-b97e-c1d1b11fd70c">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newRemainingProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>3c66bbcf-6cd3-4b92-b4b0-1e5b6aa8f344</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals remaining pr end serial number" id="132c357c-e7c9-465f-b788-bdb661de04f0">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newRemainingProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b3bfb82d-6c90-4900-b795-945089c3a17e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals second pr quantity" id="55f83ccb-bfb8-4f4c-be6c-9ed32624ac88">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>totalQuantityOfRemainingProduct</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for controlling out of organization for new serialized products after auto slicing" id="af56b533-fef9-4d46-b89d-551645d57147">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display new serialized product at out of organization after auto slicing</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>specExtId</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display new serialized product at out of organization after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add item with serial number and spec ext id for serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new serialized product at out of organization after auto slicing</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new serialized product at out of organization after auto slicing" id="7cce447b-b2c6-4dc0-82bb-7ea980d3fb83">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b1fc16f1-b0b3-481f-baf3-05a8a09724c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>78</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832453</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832454</con:value>
        </con:property>
        <con:property>
          <con:name>res_inventoryId</con:name>
        </con:property>
        <con:property>
          <con:name>req_querySoId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productStatus</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for controlling out of organization for new serialized products after auto slicing" id="61d8fb5a-7c1d-48f2-9e42-c9a90e9774dc">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>9d9c3086-e783-4723-80b9-a1660f9a6138</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7cce447b-b2c6-4dc0-82bb-7ea980d3fb83</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr quantity" id="b671c174-716c-4704-84bd-9b403cd2d7cd">
          <con:configuration>
            <patternObjectId>2cfe250a-41f2-4c11-85eb-749d40210b4a</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>474b349a-1384-4aa9-98ff-e8f08220012c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7cce447b-b2c6-4dc0-82bb-7ea980d3fb83</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr start serial" id="1d12391a-786c-4671-add3-8ee9b0e6d4ca">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductStartSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>ba4afce3-7d3b-410d-9493-ca92262f23a9</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7cce447b-b2c6-4dc0-82bb-7ea980d3fb83</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals first pr end serial" id="3b051a97-50a7-4043-a359-8a46b885299c">
          <con:configuration>
            <patternObjectId>43f064aa-e99f-4c93-823d-256169ee8577</patternObjectId>
            <patternProperty>newProductEndSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Full stockout for dynamic serialized product and level control with chars" id="b4363029-c4c0-4268-b12d-e55800d5364f">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi for full stockout and char level control" id="aa7064c0-d8a3-4341-8616-d2e81584b7f1">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi for full stockout and char level control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi for full stockout and char level control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi for full stockout and char level control</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi for full stockout and char level control" id="13ab5766-5236-41d6-be75-8e2d6e3c17fe">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for creating stock out bi for full stockout and char level control" id="d70f90a8-8f45-4d0c-ac5c-a18ef2c82970">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d60b4901-e10b-4d7b-a6be-6ed6fd1829fa</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13ab5766-5236-41d6-be75-8e2d6e3c17fe</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="ebc57b7c-f156-4663-bcdb-3b8e8df48d19">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>9cd73584-955c-4302-a05f-b0c4f9a76c29</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>13ab5766-5236-41d6-be75-8e2d6e3c17fe</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="b9e242c9-35dd-43d8-9482-3eae06cc2b46">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding first item for full stockout serialized product" id="876a9245-657d-435d-a0ba-3ea01687730b">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for full stockout and char level control</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add first item to stock out bi for full stockout serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>req_productId</con:sourceType>
        <con:sourceStep>Display original product by id for lock after submit with serial number</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add first item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityTwo</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add first item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add first item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add first item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add first item to stock out bi for full stockout serialized product" id="4303bbb9-61e4-4fae-8dda-00119b98ad39">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>548</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>75</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for adding first item for full stockout serialized product" id="3880885e-a357-46af-991f-4a3cab64bb87">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>3776b987-1ea2-4df4-bee3-3d3c9db2f23e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4303bbb9-61e4-4fae-8dda-00119b98ad39</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="7af193d1-b2d7-4240-8706-614a18ffec27">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>b6ce24b3-b480-415f-b14c-956cc75b4813</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4303bbb9-61e4-4fae-8dda-00119b98ad39</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="d6b8a853-29d9-44c8-95a7-d09b5d247573">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="datagen" name="DataGen quantities after first add" id="0e5a80cd-5319-46ae-8c94-dda73014b311">
    <con:settings/>
    <con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantityAfterFirstAdd = context.expand( '${DataGen for quantities and serial numbers after submit with serial number#totalAndAvailableQuantityForOrgPrAfterSubmit}' )
return totalQuantityAfterFirstAdd.toInteger();</script>
        </con:configuration>
        <con:name>totalQuantityAfterFirstAdd</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
      <con:property type="Script">
        <con:configuration>
          <script>def totalQuantityAfterFirstAdd = context.expand( '${DataGen quantities after first add#totalQuantityAfterFirstAdd}' )
def addItemQuantity = context.expand( '${Add first item to stock out bi for full stockout serialized product#req_quantity}' )
int availableQuantityAfterFirstAdd = totalQuantityAfterFirstAdd.toInteger() - addItemQuantity.toInteger();
return availableQuantityAfterFirstAdd;</script>
        </con:configuration>
        <con:name>availableQuantityAfterFirstAdd</con:name>
        <con:mode>STEP</con:mode>
        <con:shared>false</con:shared>
      </con:property>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control for full stockout case" id="4c77902f-4a26-48fc-a67b-a4b16863648b">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add first item to stock out bi for full stockout serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock for full stockout case</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics for full stockout case" id="992372d3-ec63-4e00-99d7-1d3ce1031f7e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":1,"totalQuantity":3,"reservedQuantity":2,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock for full stockout case" id="a565c1e1-2a03-4cd2-8b7c-78380c9251cf">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>548</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832452</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for display stock level and lock control for full stockout case" id="9d669635-1235-49be-9f87-978daaed56f5">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>7b22ea51-a44a-4e7c-8ddb-1caf848055f2</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a565c1e1-2a03-4cd2-8b7c-78380c9251cf</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="bi id lock" id="56f0cb14-cee9-4c50-a319-45a4576383e9">
          <con:configuration>
            <patternObjectId>13ab5766-5236-41d6-be75-8e2d6e3c17fe</patternObjectId>
            <patternProperty>res_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>bac2076b-c5a3-4bed-ba2d-a7802f8c5029</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a565c1e1-2a03-4cd2-8b7c-78380c9251cf</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="bi item id lock" id="03c1f512-71c8-41db-960e-688faabf22bf">
          <con:configuration>
            <patternObjectId>4303bbb9-61e4-4fae-8dda-00119b98ad39</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>72e70541-2433-411e-82a9-fa7439b5652a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>992372d3-ec63-4e00-99d7-1d3ce1031f7e</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="totalQuantity" id="1dad6a84-7ac0-4804-aa2d-6e64f8e3356d">
          <con:configuration>
            <patternObjectId>0e5a80cd-5319-46ae-8c94-dda73014b311</patternObjectId>
            <patternProperty>totalQuantityAfterFirstAdd</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>46fe9217-32d9-4860-b5b2-fac69bbcd081</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>992372d3-ec63-4e00-99d7-1d3ce1031f7e</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="availableQuantity" id="bcadaf21-3d1e-4140-94e5-cd1e05514e59">
          <con:configuration>
            <patternObjectId>0e5a80cd-5319-46ae-8c94-dda73014b311</patternObjectId>
            <patternProperty>availableQuantityAfterFirstAdd</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>5a9ed685-aec0-47d3-9970-69e8426f3a00</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>992372d3-ec63-4e00-99d7-1d3ce1031f7e</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="reservedQuantity" id="0a6ef892-7c2d-4dd8-9111-67a0726491c7">
          <con:configuration>
            <patternObjectId>4303bbb9-61e4-4fae-8dda-00119b98ad39</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding second item for full stockout serialized product" id="e0ecc3ef-1030-4b55-8ec3-27b47bc6456e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for full stockout and char level control</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>req_productId</con:sourceType>
        <con:sourceStep>Display remaining product by id for lock after submit with serial number</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>serialNumberEmpty</con:name>
        <con:sourceType>emptyValue</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_serialNumber</con:targetType>
        <con:targetStep>Add second item to stock out bi for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add second item to stock out bi for full stockout serialized product" id="90241f82-4f55-4d3a-881e-b2819e065b52">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>550</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>79</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for adding second item for full stockout serialized product" id="e2de7748-aa6b-4e9c-9d18-c048e71ed912">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>d4e6c12b-ef36-426a-a6b7-0df63fdb154e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>90241f82-4f55-4d3a-881e-b2819e065b52</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="dfb714be-ec49-4936-af10-1cccc5e3f4a1">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>cbe0cdc9-e6e4-4fda-98c6-f6da8dd1ddc0</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>90241f82-4f55-4d3a-881e-b2819e065b52</con:sourceId>
        <con:propertyName>res_itemId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="131cbc93-155f-48e6-9aae-7987d58b7fa7">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock control for full stockout case(second case)" id="5e49b22a-4d1a-4800-aee3-e1c9469b68dd">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case(second case)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case(second case)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case(second case)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level with characteristics for full stockout case(second case)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>newProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add second item to stock out bi for full stockout serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display new product by id for lock for full stockout case(second case)</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level with characteristics for full stockout case(second case)" id="3e59a0af-15ad-4805-af7f-b07d126f5c5e">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":0,"totalQuantity":3,"reservedQuantity":3,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display new product by id for lock for full stockout case(second case)" id="a61d52f1-dd70-4f9c-84cd-baad3f6c391c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>102e2d7b-c4cf-4f53-b777-f08cad671a15</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_id</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_lockedByBiItemId</con:name>
          <con:value>550</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_id</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_lockedByBiId</con:entry>
        <con:entry>res_lockedByBiItemId</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
        <con:entry>res_quantity</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for display stock level and lock control for full stockout case(second case)" id="585f986b-2e21-44a2-b983-8b6869f0799a">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>236dccaf-04d2-4175-9ee8-427c85b774ad</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a61d52f1-dd70-4f9c-84cd-baad3f6c391c</con:sourceId>
        <con:propertyName>res_lockedByBiId</con:propertyName>
        <con:assertion type="Simple Equals" name="bi id lock" id="b99e45c2-ab9a-4b8e-9e5a-5f818a2ff3c7">
          <con:configuration>
            <patternObjectId>13ab5766-5236-41d6-be75-8e2d6e3c17fe</patternObjectId>
            <patternProperty>res_biId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>89066297-67b4-4c7d-8009-b96df2b69d92</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>a61d52f1-dd70-4f9c-84cd-baad3f6c391c</con:sourceId>
        <con:propertyName>res_lockedByBiItemId</con:propertyName>
        <con:assertion type="Simple Equals" name="bi item id lock" id="9a3e4ca7-2e71-40b9-9809-b561f336e623">
          <con:configuration>
            <patternObjectId>90241f82-4f55-4d3a-881e-b2819e065b52</patternObjectId>
            <patternProperty>res_itemId</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>0fa06c32-9df6-474c-a389-5efc52386142</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3e59a0af-15ad-4805-af7f-b07d126f5c5e</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="totalQuantity" id="b31a15c0-c913-47b8-a254-9c6fc5bdcd71">
          <con:configuration>
            <patternObjectId>0e5a80cd-5319-46ae-8c94-dda73014b311</patternObjectId>
            <patternProperty>totalQuantityAfterFirstAdd</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>4c10de6f-f314-4024-a9b7-6e4cb54585b4</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3e59a0af-15ad-4805-af7f-b07d126f5c5e</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="reservedQuantity" id="11f44a66-194b-4e05-8747-e4c2d17876f6">
          <con:configuration>
            <patternObjectId>0e5a80cd-5319-46ae-8c94-dda73014b311</patternObjectId>
            <patternProperty>totalQuantityAfterFirstAdd</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>629c1f27-8611-4b57-a01b-f53dd451cb11</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3e59a0af-15ad-4805-af7f-b07d126f5c5e</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="availableQuantityZero" id="b9052fc0-90a8-4ede-9f50-bdd24f5831bc">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for submitting stockout for full stockout serialized product" id="fcfba87d-d03c-4827-ba44-6f36eae2cf9f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi for full stockout and char level control</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit stock out bi for full stockout serialized product</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit stock out bi for full stockout serialized product" id="2b3f2d31-d5ec-459b-9c5d-41ce1b5773a0">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1c365ed6-1300-4bbe-8e52-e637b24f7948</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2511</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for submitting stockout for full stockout serialized product" id="97111973-4ca4-4dd5-ba55-36b092f28dee">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>5948b954-aa05-411f-b584-884c799b1360</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>2b3f2d31-d5ec-459b-9c5d-41ce1b5773a0</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="8f53e4fa-291f-493b-a550-5a1d6aad9f5e">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for display stock level and lock after submit bi for full stockout serialized product" id="3ad43c15-c180-4297-b311-4482ef88b66b">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>placeId</con:name>
        <con:sourceType>placeId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level (original place) with characteristics after submit for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId1</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level (original place) with characteristics after submit for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId2</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level (original place) with characteristics after submit for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prodSpecCharValueId3</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level (original place) with characteristics after submit for full stockout serialized product</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>placeIdOutOfOrg</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display product stock level ( out of org place) for full stockout serialized product</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId1(OutOfOrg)</con:name>
        <con:sourceType>res_charValueId1</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId1</con:targetType>
        <con:targetStep>Display product stock level ( out of org place) for full stockout serialized product</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId2(OutOfOrg)</con:name>
        <con:sourceType>res_charValueId2</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId2</con:targetType>
        <con:targetStep>Display product stock level ( out of org place) for full stockout serialized product</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prodSpecCharValueId3(OutOfOrg)</con:name>
        <con:sourceType>res_charValueId3</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_prodSpecCharValueId3</con:targetType>
        <con:targetStep>Display product stock level ( out of org place) for full stockout serialized product</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>placeIdOutOfOrgFirstPr</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after first add</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>firstProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add first item to stock out bi for full stockout serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after first add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>prSpecExtIdFirstPr</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after first add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>placeIdOutOfOrgSecondPr</con:name>
        <con:sourceType>outOfOrgPlaceId</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_placeId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after second add</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false">
        <con:name>secondProductId</con:name>
        <con:sourceType>res_new_product_id</con:sourceType>
        <con:sourceStep>Add second item to stock out bi for full stockout serialized product</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after second add</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>prSpecExtIdSecondPr</con:name>
        <con:sourceType>res_serializedProductSpecExtId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath xsi:nil="true"/>
        <con:targetType>req_productSpecificationExternalId</con:targetType>
        <con:targetStep>Display serialized product at out of organization after second add</con:targetStep>
        <con:targetPath xsi:nil="true"/>
        <con:type>XPATH</con:type>
        <con:targetTransferType>XPATH</con:targetTransferType>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level (original place) with characteristics after submit for full stockout serialized product" id="4a5f39b5-7225-4bca-818c-f11b38980ef4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value>502</con:value>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>[{"placeId":"40","productSpecificationId":"502","productSpecificationName":"IPHONE6S","productStatus":1,"productSpecificationExternalId":"EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7","quantity":0,"totalQuantity":0,"reservedQuantity":0,"salesOrganizationId":"75","characteristicValueUses":[{"characteristic":{"externalId":"Memory-CharExtId-a54b019c-58b9-44e0-8448-d9e512db62d7","name":"Memory","description":"Memory","id":"504"},"characteristicValue":{"externalId":"Memory-CharValueExtId-bf0bc782-a5e6-46b9-a52a-2ad56f908909","value":"32MB","id":"504"}},{"characteristic":{"externalId":"Processor-CharExtId-4cc1893b-424d-4656-b66e-85cc78ccffb4","name":"Processor","description":"Processor","id":"506"},"characteristicValue":{"externalId":"Processor-CharValueExtId-1e72d22e-6aba-4beb-af6b-42a2f57d2a86","value":"A8","id":"506"}},{"characteristic":{"externalId":"Screen-CharExtId-580f5ba6-0020-41b9-83fb-1742cf94465e","name":"Screen","description":"Screen","id":"505"},"characteristicValue":{"externalId":"Screen-CharValueExtId-29a78c1d-eda6-4c70-b5aa-7485ecd90c6f","value":"4.7","id":"505"}}]}]</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display product stock level ( out of org place) for full stockout serialized product" id="19b5a9d0-25b2-46c6-9c97-cfd6a1a560d9">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>1ae113ba-cb50-487e-9b46-d090fd511743</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_prodSpecCharValueId1</con:name>
          <con:value>504</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId2</con:name>
          <con:value>506</con:value>
        </con:property>
        <con:property>
          <con:name>req_prodSpecCharValueId3</con:name>
          <con:value>505</con:value>
        </con:property>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_productSpecificationExternalId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_salesOrganizationId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_totalQuantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_reservedQuantity</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>500</con:value>
        </con:property>
        <con:property>
          <con:name>req_productStatus</con:name>
        </con:property>
        <con:property>
          <con:name>res_fullResponse</con:name>
          <con:value>{"code":"INTERNAL_SYSTEM_ERROR","description":"java.lang.NullPointerException\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)\r\n\tat java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.authorizePlaces(StockLevelFacade.java:100)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.queryStockLevelExtended(StockLevelFacade.java:87)\r\n\tat Proxy22d20924_8e9a_47f7_81b8_59176efdf5e4.queryStockLevelExtended(Unknown Source)\r\n\tat Proxyb64d1534_9cf8_4114_b559_7da8fa872f82.queryStockLevelExtended(Unknown Source)\r\n\tat com.ericsson.bss.rm.erms.core.rest.service.impl.external.product.StockLevelResourceExternal.getList(StockLevelResourceExternal.java:66)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)\r\n\tat org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\r\n\tat org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\r\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\r\n\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\r\n\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\r\n\tat org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\r\n\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\r\n\tat com.eclipsesource.jaxrs.publisher.internal.ServletContainerBridge.service(ServletContainerBridge.java:76)\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:69)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:240)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\r\n\tat org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:75)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:370)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)\r\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\r\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\r\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","errorDetails":"java.lang.NullPointerException\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)\r\n\tat java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.authorizePlaces(StockLevelFacade.java:100)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.queryStockLevelExtended(StockLevelFacade.java:87)\r\n\tat Proxy22d20924_8e9a_47f7_81b8_59176efdf5e4.queryStockLevelExtended(Unknown Source)\r\n\tat Proxyb64d1534_9cf8_4114_b559_7da8fa872f82.queryStockLevelExtended(Unknown Source)\r\n\tat com.ericsson.bss.rm.erms.core.rest.service.impl.external.product.StockLevelResourceExternal.getList(StockLevelResourceExternal.java:66)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)\r\n\tat org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\r\n\tat org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\r\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\r\n\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\r\n\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\r\n\tat org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\r\n\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\r\n\tat com.eclipsesource.jaxrs.publisher.internal.ServletContainerBridge.service(ServletContainerBridge.java:76)\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:69)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:240)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\r\n\tat org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:75)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:370)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)\r\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\r\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\r\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","errorMessage":"INTERNAL_SYSTEM_ERROR","httpStatusCode":"INTERNAL_SYSTEM_ERROR","httpStatusCodeDescription":"java.lang.NullPointerException\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)\r\n\tat java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.authorizePlaces(StockLevelFacade.java:100)\r\n\tat com.ericsson.bss.rm.erms.core.business.handler.impl.facade.entity.StockLevelFacade.queryStockLevelExtended(StockLevelFacade.java:87)\r\n\tat Proxy22d20924_8e9a_47f7_81b8_59176efdf5e4.queryStockLevelExtended(Unknown Source)\r\n\tat Proxyb64d1534_9cf8_4114_b559_7da8fa872f82.queryStockLevelExtended(Unknown Source)\r\n\tat com.ericsson.bss.rm.erms.core.rest.service.impl.external.product.StockLevelResourceExternal.getList(StockLevelResourceExternal.java:66)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat Proxye9f52753_10f0_4915_bc54_1cd2a34cfd05.getList(Unknown Source)\r\n\tat sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)\r\n\tat org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:205)\r\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\r\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\r\n\tat org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\r\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\r\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\r\n\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\r\n\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\r\n\tat org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\r\n\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\r\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\r\n\tat com.eclipsesource.jaxrs.publisher.internal.ServletContainerBridge.service(ServletContainerBridge.java:76)\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:69)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:240)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\r\n\tat org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:75)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:370)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)\r\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\r\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\r\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696)\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_placeId</con:entry>
        <con:entry>res_productSpecificationId</con:entry>
        <con:entry>res_productSpecificationExternalId</con:entry>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_salesOrganizationId</con:entry>
        <con:entry>res_totalQuantity</con:entry>
        <con:entry>res_reservedQuantity</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_fullResponse</con:entry>
        <con:entry>res_productStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display serialized product at out of organization after first add" id="7f7642fa-f7ea-466d-91b4-5e95e446ac1c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b1fc16f1-b0b3-481f-baf3-05a8a09724c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832451</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832452</con:value>
        </con:property>
        <con:property>
          <con:name>res_inventoryId</con:name>
        </con:property>
        <con:property>
          <con:name>req_querySoId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productStatus</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display serialized product at out of organization after second add" id="9d4449d3-55a0-4eda-8e4f-2ca38822027c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>b1fc16f1-b0b3-481f-baf3-05a8a09724c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_placeId</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_productSpecificationExternalId</con:name>
          <con:value>EXT-IPHONE6S-21485dbd-5ebb-40b6-aee0-ad9ad95aaba7</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>79</con:value>
        </con:property>
        <con:property>
          <con:name>res_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>res_productStatus</con:name>
          <con:value>Sellable</con:value>
        </con:property>
        <con:property>
          <con:name>res_startSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_endSerialNumber</con:name>
          <con:value>42832455</con:value>
        </con:property>
        <con:property>
          <con:name>res_inventoryId</con:name>
        </con:property>
        <con:property>
          <con:name>req_querySoId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_quantity</con:entry>
        <con:entry>res_productStatus</con:entry>
        <con:entry>res_startSerialNumber</con:entry>
        <con:entry>res_endSerialNumber</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="BUG 1319 - Assertion for display stock level and lock after submit bi for full stockout serialized product" id="2489b127-61f5-4c51-b985-90d6b6111c68">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>14e58322-da82-401b-a493-e57d7dc8be33</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>4a5f39b5-7225-4bca-818c-f11b38980ef4</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="7e089415-5813-485d-9a6f-ae100604ffd0">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>e2193755-4579-4866-9f12-737eabeb2627</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>19b5a9d0-25b2-46c6-9c97-cfd6a1a560d9</con:sourceId>
        <con:propertyName>res_totalQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="totalQuantityOutOfOrg" id="67c7b048-6e17-45ac-b6ea-54d3786ea303" disabled="true">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>7ed6a0b2-d0c1-4672-9f29-113983dda7f8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>19b5a9d0-25b2-46c6-9c97-cfd6a1a560d9</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="availableQuantityOutOfOrg" id="97058b7c-107f-4574-91f5-198e56e968fd" disabled="true">
          <con:configuration>
            <patternObjectId>1d0e2d18-b048-4d3d-a738-b87f25097cab</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>da3f0055-8199-4a81-ad13-42b278b0fd4c</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>19b5a9d0-25b2-46c6-9c97-cfd6a1a560d9</con:sourceId>
        <con:propertyName>res_reservedQuantity</con:propertyName>
        <con:assertion type="Simple Equals" name="reservedQuantityOutOfOrg" id="9f8640af-f6cf-46f2-b8e6-49646bc5fad1" disabled="true">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>quantityZero</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>685ef4f7-d510-4852-9848-67b1ca8e14f8</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7f7642fa-f7ea-466d-91b4-5e95e446ac1c</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="quantity first pr" id="7f22a338-da98-403c-b0ab-9a1c06258d8b">
          <con:configuration>
            <patternObjectId>4303bbb9-61e4-4fae-8dda-00119b98ad39</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>9370167a-0238-4e01-81fe-0a170f5598da</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7f7642fa-f7ea-466d-91b4-5e95e446ac1c</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="start serial first pr" id="7b86102c-5bb9-4894-b221-17abcc89324f">
          <con:configuration>
            <patternObjectId>2c296190-00f2-4541-ba36-e3e1acd7b58c</patternObjectId>
            <patternProperty>res_startSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>90e49f13-c45e-46b0-869b-13a4acbe644f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>7f7642fa-f7ea-466d-91b4-5e95e446ac1c</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="end serial first pr" id="61fe82d9-f541-4912-8afc-9077de36bb58">
          <con:configuration>
            <patternObjectId>2c296190-00f2-4541-ba36-e3e1acd7b58c</patternObjectId>
            <patternProperty>res_endSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>3c455f99-b6a7-4337-8b19-d1d9b748e460</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9d4449d3-55a0-4eda-8e4f-2ca38822027c</con:sourceId>
        <con:propertyName>res_quantity</con:propertyName>
        <con:assertion type="Simple Equals" name="quantity second pr" id="1ab82b85-5c20-484d-9321-4d1513ac7d58">
          <con:configuration>
            <patternObjectId>90241f82-4f55-4d3a-881e-b2819e065b52</patternObjectId>
            <patternProperty>req_quantity</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>8cb2ef68-6a20-4fe2-b820-096c2cbccb9f</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9d4449d3-55a0-4eda-8e4f-2ca38822027c</con:sourceId>
        <con:propertyName>res_startSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="start serial second pr" id="70b23f3c-1438-46cc-92f1-1fcf1e15b3eb">
          <con:configuration>
            <patternObjectId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</patternObjectId>
            <patternProperty>res_startSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>a54b164e-a5f4-4142-b6bd-ddcfd8c06b5e</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>9d4449d3-55a0-4eda-8e4f-2ca38822027c</con:sourceId>
        <con:propertyName>res_endSerialNumber</con:propertyName>
        <con:assertion type="Simple Equals" name="end serial second pr" id="e8f65425-3492-4ba8-b924-f3df91d1526d">
          <con:configuration>
            <patternObjectId>5a42a81c-2db0-4188-a7bb-7a5f6dff47b9</patternObjectId>
            <patternProperty>res_endSerialNumber</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Display all stockout BIs" id="1f9c844e-f654-494e-9a7c-2d89a0f5fcf4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>0db1e24d-37d9-45c1-a510-40339af2faf3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>200</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for displaying all stockout BIs" id="8a8848e3-aea8-456b-b679-3f0269ffc080">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
  </con:testStep>
  <con:testStep type="properties" name="Stock out goods from a deactivated inventory" id="4fb31be7-7245-43bf-beef-3065c02aab05">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer For Creating Status Change BI New" id="8481a2b4-a658-4db1-9141-86d43698d224">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>salesOrgRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_salesOrgRoleId</con:targetType>
        <con:targetStep>Create status change business interaction New</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create status change business interaction New</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpecChangeStatus</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpecCode</con:targetType>
        <con:targetStep>Create status change business interaction New</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create status change business interaction New" id="6d397e76-6d24-46d1-af30-c3db8c010ea3">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>ebe38a74-a539-48d8-b0f9-7d45aa239d9c</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrgRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpecCode</con:name>
          <con:value>STATUSCHANGEBISPEC</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2521</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion For Creating Status Change BI New" id="f64d168f-d313-4ee3-ba32-f43434ed3250">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>29f1cbdc-b227-40b6-9778-1f9bdd87e751</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6d397e76-6d24-46d1-af30-c3db8c010ea3</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="1f5f9d69-49f3-4b36-aff4-2aedf66ac134">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>432e8785-d208-4420-a2cd-174d8252da78</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>6d397e76-6d24-46d1-af30-c3db8c010ea3</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1648e3c6-aeb6-4d96-ba3b-aebd2dbddf95">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer For Adding Inventory Item" id="4cbc29be-76d9-4369-aa05-c8666ddfe3ee">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create status change business interaction New</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add inventory item for passive</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>inventoryId</con:name>
        <con:sourceType>inventoryId</con:sourceType>
        <con:sourceStep>Create initial data and products</con:sourceStep>
        <con:targetType>req_inventoryId</con:targetType>
        <con:targetStep>Add inventory item for passive</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>new_status</con:name>
        <con:sourceType>statusPassive</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_newStatus</con:targetType>
        <con:targetStep>Add inventory item for passive</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add inventory item for passive" id="864f5706-339c-4354-91a8-8d4f0ed65885">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>4f71d5dd-4101-4d8c-8929-3a54b76949da</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2521</con:value>
        </con:property>
        <con:property>
          <con:name>req_inventoryId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>req_newStatus</con:name>
          <con:value>Passive</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value>551</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_inventoryIdExt</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion For Adding Inventory Item" id="d4a494fa-072c-412c-a632-9d97eb557324">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>5f27c2ee-4adb-437d-b05d-4d1ed2aba5ec</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>864f5706-339c-4354-91a8-8d4f0ed65885</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="1497cb88-cfb5-4b6d-9ad1-cd4ede058ef2">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer For Submitting Change Status BI" id="95a6ca83-e46a-4013-b87c-5c9a4e636049">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create status change business interaction New</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Submit Status Change BI</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Submit Status Change BI" id="3ca62a22-8783-45f8-b241-3335c0cb12c0">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a69bef10-271b-4e39-87a4-f15a12f69895</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2521</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2521</con:value>
        </con:property>
        <con:property>
          <con:name>res_headerCode</con:name>
          <con:value>200</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_headerCode</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion For Submitting Change Status BI" id="a4eb8ba8-e435-4697-9bb5-437919538519">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>f2ed7e84-273e-4e52-94e4-c8c9f650d693</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>3ca62a22-8783-45f8-b241-3335c0cb12c0</con:sourceId>
        <con:propertyName>res_headerCode</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="cfb88bb4-c549-4e0d-b3e1-a7fa41482d17">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode200</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer For Getting Inventory Information" id="c70cc826-da71-4aa2-bba5-49cbfa5cea40">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>inventoryId</con:name>
        <con:sourceType>req_inventoryId</con:sourceType>
        <con:sourceStep>Add inventory item for passive</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_invId</con:targetType>
        <con:targetStep>Get inventory information for status control</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Get inventory information for status control" id="b38a083b-ad25-4f51-9461-7c796909f6b0">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>67518353-98c4-4ba3-9a0d-fa3a3bded56e</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_invId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_invId</con:name>
          <con:value>66</con:value>
        </con:property>
        <con:property>
          <con:name>res_invStatus</con:name>
          <con:value>Passive</con:value>
        </con:property>
        <con:property>
          <con:name>res_placeId</con:name>
        </con:property>
        <con:property>
          <con:name>res_idvExtId</con:name>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
        </con:property>
        <con:property>
          <con:name>res_invName</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_invId</con:entry>
        <con:entry>res_invStatus</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion For Getting Inventory Information" id="665c3270-850d-459e-b10d-98ba8454f019">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>42b1efe3-7baa-48e8-b23b-2eed87ec4bac</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>b38a083b-ad25-4f51-9461-7c796909f6b0</con:sourceId>
        <con:propertyName>res_invStatus</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="5bdb6228-4325-4e3d-86cc-da512f055817">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>statusPassive</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for creating stock out bi with product from deactive inventory" id="1c7d505e-0c20-4826-9bda-f7df63a2c96e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>userRoleId</con:name>
        <con:sourceType>userRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_userRoleId</con:targetType>
        <con:targetStep>Create stock out bi with product from deactive inventory</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>soRoleId</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>req_salesOrganizationRoleId</con:targetType>
        <con:targetStep>Create stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biSpec</con:name>
        <con:sourceType>biSpec</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_biSpec</con:targetType>
        <con:targetStep>Create stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true">
        <con:name>userToken</con:name>
        <con:sourceType>userToken</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>AuthorizationUser</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true">
        <con:name>userSo</con:name>
        <con:sourceType>salesOrgRoleId</con:sourceType>
        <con:sourceStep>Create serialized product with dynamic product specs</con:sourceStep>
        <con:targetType>UserSo</con:targetType>
        <con:targetStep>#Project#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Create stock out bi with product from deactive inventory" id="ef21b58f-c744-4917-af8f-d703151c80b2">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>d6b21754-a4bc-457f-93bf-67dd81b3ce77</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_userRoleId</con:name>
          <con:value>77</con:value>
        </con:property>
        <con:property>
          <con:name>req_salesOrganizationRoleId</con:name>
          <con:value>75</con:value>
        </con:property>
        <con:property>
          <con:name>res_biId</con:name>
          <con:value>2531</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>201</con:value>
        </con:property>
        <con:property>
          <con:name>req_biSpec</con:name>
          <con:value>STOCK_OUT</con:value>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_biId</con:entry>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for creating stock out bi with product from deactive inventory" id="e19a4149-e411-447b-b693-8ee6ab5612ac">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>93711b02-77e5-4f88-b84b-ecd646e9ad65</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ef21b58f-c744-4917-af8f-d703151c80b2</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="cafb3de5-6419-48c6-a53c-f64f09414481">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode201</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>1096f599-ccc8-406a-bdc5-aaf9c6541b3a</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>ef21b58f-c744-4917-af8f-d703151c80b2</con:sourceId>
        <con:propertyName>res_biId</con:propertyName>
        <con:assertion type="Simple Contains" name="Contains" id="08eaf726-77f2-4ce8-97fa-77f7e3ef7d98">
          <con:configuration>
            <token>\d+</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>true</useRegEx>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="P.T for adding first item with product from deactive inventory" id="fc735fd6-8bdf-462d-a2b6-48567d93b636">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>biId</con:name>
        <con:sourceType>res_biId</con:sourceType>
        <con:sourceStep>Create stock out bi with product from deactive inventory</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>req_biId</con:targetType>
        <con:targetStep>Add first item to stock out bi with product from deactive inventory</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productId</con:name>
        <con:sourceType>nonSerializedProductIdAtFromPlace</con:sourceType>
        <con:sourceStep>Properties for stock out to another place and update test</con:sourceStep>
        <con:targetType>req_productId</con:targetType>
        <con:targetStep>Add first item to stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>productQuantity</con:name>
        <con:sourceType>quantityOne</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_quantity</con:targetType>
        <con:targetStep>Add first item to stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>reason</con:name>
        <con:sourceType>stockOutReasonLost</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonType</con:targetType>
        <con:targetStep>Add first item to stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>stockOutReasonDescription</con:name>
        <con:sourceType>stockOutReasonDescription</con:sourceType>
        <con:sourceStep>Given properties for the test steps</con:sourceStep>
        <con:targetType>req_stockOutReasonDescription</con:targetType>
        <con:targetStep>Add first item to stock out bi with product from deactive inventory</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Add first item to stock out bi with product from deactive inventory" id="05755f5c-4369-4b17-b6dd-e5335d735c74">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>05624b1e-0210-4665-8bbc-54bbc0be39c0</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>req_biId</con:name>
          <con:value>2531</con:value>
        </con:property>
        <con:property>
          <con:name>req_productId</con:name>
          <con:value>63</con:value>
        </con:property>
        <con:property>
          <con:name>res_code</con:name>
          <con:value>400</con:value>
        </con:property>
        <con:property>
          <con:name>res_itemId</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>res_errorMessage</con:name>
          <con:value>PLACE_NOT_IN_THE_SALES_ORG</con:value>
        </con:property>
        <con:property>
          <con:name>req_serialNumber</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
        <con:property>
          <con:name>req_quantity</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonType</con:name>
          <con:value>Lost</con:value>
        </con:property>
        <con:property>
          <con:name>req_stockOutReasonDescription</con:name>
          <con:value>Integration test stockOut Reason Description</con:value>
        </con:property>
        <con:property>
          <con:name>res_new_product_id</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>res_code</con:entry>
        <con:entry>res_errorMessage</con:entry>
        <con:entry>res_itemId</con:entry>
        <con:entry>res_new_product_id</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="assertionteststep" name="Assertion for adding first item with product from deactive inventory" id="16a1958e-db5f-4305-b6db-d0c401f6c7b6">
    <con:settings/>
    <con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:entry>
        <con:id>2b075e08-2ab9-4994-a032-dc2f775d1ba7</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>05755f5c-4369-4b17-b6dd-e5335d735c74</con:sourceId>
        <con:propertyName>res_code</con:propertyName>
        <con:assertion type="Simple Equals" name="Equals" id="4d42b20e-1616-4039-b297-d9afaa510c83">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>httpCode400</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
      <con:entry>
        <con:id>d1e448a3-27ac-4030-a7e1-7e1a45719391</con:id>
        <con:isGroup>false</con:isGroup>
        <con:sourceId>05755f5c-4369-4b17-b6dd-e5335d735c74</con:sourceId>
        <con:propertyName>res_errorMessage</con:propertyName>
        <con:assertion type="Simple Equals" name="error" id="1e8c93e8-5d9c-4411-8e79-44ce7f6a03e7">
          <con:configuration>
            <patternObjectId>49f6fee4-8c18-413d-99f2-7530f363de56</patternObjectId>
            <patternProperty>errorMsgPlaceNotInSo</patternProperty>
            <caseSensitive>true</caseSensitive>
          </con:configuration>
        </con:assertion>
      </con:entry>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>req_userRoleExtId</con:name>
      <con:value>user-u-${=java.util.UUID.randomUUID()}</con:value>
    </con:property>
    <con:property>
      <con:name>req_salesOrgRoleExtId</con:name>
      <con:value>sales-s-${=java.util.UUID.randomUUID()}</con:value>
    </con:property>
    <con:property>
      <con:name>req_terminalExtId</con:name>
      <con:value>term-t-${=java.util.UUID.randomUUID()}</con:value>
    </con:property>
    <con:property>
      <con:name>req_inventoryExtId</con:name>
      <con:value>inv-i-${=java.util.UUID.randomUUID()}</con:value>
    </con:property>
    <con:property>
      <con:name>res_salesOrgId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>res_userRoleId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>res_terminalId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>res_inventoryRoleId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>req_biId</con:name>
    </con:property>
    <con:property>
      <con:name>req_userRoleId</con:name>
      <con:value>65</con:value>
    </con:property>
    <con:property>
      <con:name>req_salesOrgId</con:name>
      <con:value>63</con:value>
    </con:property>
    <con:property>
      <con:name>req_placeId</con:name>
      <con:value>34</con:value>
    </con:property>
    <con:property>
      <con:name>req_productId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>res_biId</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>NonSerializedProductSpecCode</con:name>
      <con:value>CODE-APPLMOUSE-1</con:value>
    </con:property>
    <con:property>
      <con:name>NonSerializedProductId</con:name>
      <con:value>63</con:value>
    </con:property>
    <con:property>
      <con:name>SerializedProductSpecCode</con:name>
      <con:value>CODE-IPHONE6S-1</con:value>
    </con:property>
    <con:property>
      <con:name>SerializedProductId</con:name>
      <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">61</con:value>
    </con:property>
    <con:property>
      <con:name>SerializedWithoutRangeProductSpecCode</con:name>
      <con:value>CODE-GALAXYNOTE4-1</con:value>
    </con:property>
    <con:property>
      <con:name>SerializedWithoutRangeProductId</con:name>
      <con:value>62</con:value>
    </con:property>
    <con:property>
      <con:name>req_terminalId</con:name>
      <con:value>16</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>2e1d8be0-2c7c-431b-98ec-3b23a60669ad</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>eb2e267d-61cb-433e-9848-60790d7db241</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b3446091-cfbe-43f6-b12c-4b276922a044</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c6d094de-a1bd-4dcd-a6d7-49baf71635f7</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f1c092d0-1242-4b3b-82dd-932432053c9e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>984588f9-0e5d-4bbd-ac96-52fe2d28bdbd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>49f6fee4-8c18-413d-99f2-7530f363de56</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>48da5b95-3ade-4e14-86ac-427f5d8eb5f3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e84084a7-1ce4-4b9d-8978-25eb54d94623</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c30628e9-e305-4146-8c3f-456b8c6dc5f4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>035bfad6-84a1-4fcf-94fe-b4996b6fc59e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b9fec50c-d45a-460c-aabb-135ab6ba20c0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d70094d2-b624-4c71-9bc7-d7a2fcdffbde</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f5f2c704-11aa-4bf1-a77a-c8f24d37c33b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>922b28e9-7bea-44ac-9414-6b08827b4efc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>25301057-3b50-467e-bbc5-b7a2194f2382</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>21df94df-efe8-4a19-be91-ba4c978f6c96</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>caef8ab8-0a89-457f-86ac-f9372e5bac2f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d27542e2-b01b-44c7-9032-706f31a316e7</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7c41a0bf-0222-4b85-9d85-8f62b2ce3deb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4086b09a-2726-435e-a493-19ab7a735b02</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1fdbe111-6f01-4b4d-b83e-f04ec856defd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e6bcbc9f-d99d-4a9d-b185-d34d8b61e5e8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6c790ce4-a681-41ad-a155-04ca1851869d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e0086b9d-44e7-4047-b8a0-ea43046f24e4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7ddda1c5-e48e-4fe8-a9b1-f7a283d4ea85</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>daebb8fc-261d-4a93-a8aa-84d4e98906ce</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ff7967bd-456c-4c63-9b0d-e7ecc3f88211</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2f6c7fa8-28af-4875-9686-237e7ee9a6b2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a0fbdaa7-96fa-4d82-a47f-02a5c9b7add3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7dc55907-9a65-4356-a5b3-04b7a689ae71</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>24730fa8-3c92-466b-b8ce-621a713eb12d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8f0f3835-c90c-4abf-8fe0-ef3cbdd705f2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>134eb39a-4b40-40e3-a723-e7716905cf8b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1800c3f6-01ab-41f2-add2-98b51fcfd3f1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e567d41f-bbeb-4d65-b285-62edf1748f1b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>95e515fc-5e6a-43b1-aa98-cbc1b97667cb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f9e7728e-7bec-41f4-a8a3-ce1456cb08eb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b2cf8bcc-3e18-4415-8643-da657986450c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b388ed3d-9d2f-4ae4-90f6-5b27d85cd39e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9e7bfb33-df1f-418b-a065-1f082155ae08</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3b2d5cb6-cd98-49f6-b213-538983a3329c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>54885ae1-fb93-4db9-9d51-24881dc59f7c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3438b7f2-6b7c-43b6-9ee5-713cd23fd24b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>be88aed6-2439-427c-a975-48c60d30a7d6</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>634051cc-d4a6-4088-8c66-6955f4256d52</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>053ec2c4-5854-498d-b362-9a39d62bf43c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>57bc7f51-9a2d-4805-9ec5-86cf2645a0b4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2df82efe-ee67-4c39-a4e6-0e65f23b3e3b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>dbf730cf-d384-4750-a7ea-720abff24e5b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1f75ee72-a3ed-4184-8ab0-6cb3b8e07e6e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>67fe2a85-30a2-4b02-bb89-be7af5fabda2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>95b2bcb4-435f-4d9f-a1c4-12bd921a1d2d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>961805be-6245-4be4-9262-4783005da7fd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d9f07acc-ffd8-4278-a491-e15066bfcbc5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>712f11f1-afc4-4e54-9e80-b6352ed85a89</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7d8e017e-6f3c-40fc-8a6c-439471e16de2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>37f8cd23-d985-4830-a7aa-9ad2a9482b3d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>162a285d-8e8c-41d3-8c45-a90b9b3b13c9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e36e80f7-f824-4d92-86de-4d14d6faaa37</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>440827eb-5902-47dc-9e26-b11a8e468d35</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>817cb5a0-e3e2-4058-84bc-b75038896709</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>de463ff7-bcbb-41cd-a54d-5a10ddc7036a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>522e49fd-a5dd-470b-b197-213e4d918b73</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e701cfed-1b09-441a-942d-21e79a2773bf</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6683ae48-ff80-4576-9253-ee6c82633a6c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>add21877-e2d1-4973-8dab-be03625198cd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d6ab8d7b-0a95-4bfd-9a5d-5d5c4d6f35a7</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9c7e2ddc-52c4-4823-9a41-a55376d238ea</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>454a297d-c475-456a-a42d-4859bbd50504</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2ece1683-78b7-4ca5-9d8e-cde868e62a55</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>97b4c020-1618-4239-adf5-844d9ce9ed27</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3e1d0b3d-70ad-49d1-b799-c2c7988ac0ba</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>37843947-f14c-4442-9542-122ea42e517f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cc018acb-784c-4cf3-b5d0-2e2c95844d2a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4f9b718a-a3af-4541-bc8e-4b96da867341</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>73ae2b8d-68ca-4f95-8083-941d6ce59a49</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f0bb5e30-fab6-4b52-b409-371e911557b6</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>80f0ffcd-df21-411c-a301-bb65ae7a5bbb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>15badd11-a1c4-4cef-a036-715b4b71e8b9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2330424c-5612-4220-bc65-c0e5637b6d57</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b0ad3304-c800-476e-96f9-a3cc19843e85</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9fee6f5a-38c3-43d4-b955-154223d7157e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>dad7669b-7cad-42db-b9e0-584ed66d3386</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>294f76ff-2af4-4411-b31b-3c8da95256bc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>36204ccd-66bc-4839-be3d-4309e443c350</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b6dee659-2740-44af-9653-ae2fb3246d6b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a5c033b3-f39e-44dc-9bd0-fcb067c2a141</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c12810be-37b2-4ce2-ac8e-bc99e0f8690d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4b614fdc-aff9-42ee-b8e9-0e8587d3c2e5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>14ecc2b9-9de0-457c-8c25-9909d047a038</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f99bff66-87a2-483a-8e07-065c4ce972f9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>67f38b7d-f3bc-4718-81da-19a0cab2055f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>787504e8-c845-4f9f-a8c1-2b28224912ec</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>68411978-8bf8-4751-8300-1ba20b73fccb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>85c3a28c-31b8-4a2b-be76-e070427509b0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1f87b5d4-c5a1-48c4-a889-57015cc27b21</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d43f9b28-a063-4c52-ac85-59ad522245b4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>918352fa-4401-4d85-b925-b43ef3638d9f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>494788bd-15b5-42ee-a339-d10fb6355cbb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5b349da8-ec0a-45e5-90fa-df7d25e9ad0a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cd1d7632-62ec-4ce8-84c2-8e51015dc41d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>530bc400-5ec2-4d0d-8a98-c720366ab41e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>900322e6-ff62-4f77-a95a-3ad1341b37fe</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>13b1a0bc-af9f-4960-931c-bf731625df78</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1f3e0325-52ce-477a-a4bb-b0f69f957b17</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>088df842-d945-45b7-b252-9e9710af7cb8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>72afe791-d151-4845-a7e9-e1c27314c7bb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d7887be4-abfb-4d77-a3b3-173f989b4254</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e588bdd6-6385-494a-b62f-14c63a68a7a3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>948c98fb-d201-47bd-9e20-6f6ea02a91e4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9bb70005-880a-42ee-bc57-5f3dd17754fe</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>33a0fdff-76b5-473f-8a57-a5b415c0645d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>07cd280d-26aa-454a-8667-fc1fb66e99ce</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8c3516d0-b45a-487b-9899-e8c6d958aa60</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c6ad9fdd-3611-4caa-b412-1af0e76a12bf</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cb61a582-c695-41e5-b209-69e6f9c21851</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8df07525-49ee-4009-b225-708000fd3560</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0c4498c7-0246-469b-b1f7-45ce843d1573</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>10716654-09ee-4b0d-9a52-998322d65e43</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a1a87fdf-5642-417d-88d1-004fc37bd6d7</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d0d82c77-0e3a-4182-8e7a-dfe77c4a7fbd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b74eda6f-aab5-4b88-a6f5-2b88a855bc47</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>de8d71a2-bb49-44f8-982d-362c4679d636</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>462248c6-78f3-48e1-913a-bb270d96b2bd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a3dda4f3-4fe6-4db1-92c7-bfcd4a882593</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7467867b-38c6-4f26-b681-245a11b28e25</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>89aa9619-eb8b-4035-8945-9747f8cbed88</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>07d58736-d7de-4fc5-89ff-e3ade1f7b910</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ab4c7239-2f9d-4707-83bb-21bc27f36949</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>17455845-bfa6-43ae-8b84-7b715567d69d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>57f033b4-1e39-4d7c-bcab-6c01989052f4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0bc495da-bc42-4513-bed4-6c4e6381fe7d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9a480790-6754-4732-98e2-d70a2401d80e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d81424fe-86d3-498f-879b-868abc86374a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ddd4b6ab-ced8-4ff5-9ab0-27c07ccb78ef</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0a04b3be-6a9e-4fad-8544-fa077a1ddc7a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>65b65115-4bde-434d-a5de-e7f77d696961</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cafcf0b9-8742-4ba5-8ba5-824dc25ccc1a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e83164fc-1689-4d2b-a868-e2b6393ffb74</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>287d4d3d-7efb-4709-883a-debd4aad9076</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3a931dd3-57d5-4592-a8a7-56790b5e9cf9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b3cfa9f6-d6c3-41db-b608-2874729849cd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4a483f2e-238c-4f57-94b7-2a8e2d9c40e5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9eb346fb-11a3-4aab-b686-53bbe67ffebb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7b4305d7-4c5f-4a66-98fc-c562a43b7a8d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6acf7f5a-4c22-4ecd-b8cf-ca74cace25f9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a8358934-b855-4830-9068-28bfc4f623f1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c9e6cef7-85af-419d-8112-8978e20d31e2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8d6b9349-c7fb-4cf0-b2df-dbf64755c643</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5c7478cc-3570-40bb-b39a-07a484f53345</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f7738aba-42a0-46a3-bcdf-7de2b73af80a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>77f0cff2-4564-4daf-8e0c-d12a6cdcbf7f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b8957034-d871-428e-81d7-b90b3b65e074</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c0de5cf9-349d-46bc-80bf-c644f0aa805a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c29f47dd-976c-4861-9532-06ba0254b66b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>38f9d87b-2364-41b6-8a85-485080fa32bd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>514706c4-7f9c-4b64-aaf5-fe2c0d277a51</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>fd27a381-b143-4cac-b76e-bf86a30bba5f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5955e0e2-febb-4279-82f0-42cb4275347c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>71cb69e7-4719-4fa2-9a7e-9d9f4e754f65</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>24e2756f-d3e7-4884-8197-b0a3369d22bd</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>423830db-6909-4ad3-943e-f89e939f39da</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1be1bfad-cf6a-481d-8d29-fa8bfbff192e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f3f08d1e-d0b2-40ba-b14c-a096b7bcd51e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5117e0c0-f841-411d-8593-36ba53d62785</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6b1c6e94-6b8d-481d-b0a2-12feb12cd8a5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>42e11a17-92af-46e8-9d4f-ab63f350c647</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a38c3cc3-37bc-47d3-88c2-c5821fb28c04</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b036d300-959c-483d-8feb-605eff09ab8e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>343b0da0-cadb-4975-84e7-2304d5e157a1</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>6641bd54-e19a-413c-ac30-a525d86e65c5</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>47a3ef37-6708-44ef-80e9-d40bc243021a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>22282173-4d5c-4f1c-94d5-169a97753f61</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f37a676e-5d5d-4592-b5bb-f64f5bced04d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>80047d86-9622-441a-b3b2-045774d4e786</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>33e5294a-c312-487d-9625-0c797fefe3cb</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>42d84b54-3e3c-49c4-b50c-b9c81338bc21</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ba3bd799-451a-4cd3-a222-64f8f0dd147b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>710423e7-d532-4855-82f5-61b2dcd7aa6b</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>27fdd68b-80ed-466e-8467-e565c013fe18</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7c9986c9-4052-40b6-829c-bb2c3dd07ed4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>dce4fb55-8a10-4318-a490-78a71a588814</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>d545fcc1-9b39-47d9-a85f-9d379b124c21</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9209995a-b672-4975-a772-ff503a753b4f</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a2640f6b-4400-420f-8604-0397e3430bd8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1f9c844e-f654-494e-9a7c-2d89a0f5fcf4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>232c2036-35af-4194-8cd7-9e609045c24e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>761afdbf-8c2b-4feb-bf66-63f5e19c7a82</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8a8848e3-aea8-456b-b679-3f0269ffc080</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>7f7642fa-f7ea-466d-91b4-5e95e446ac1c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9d4449d3-55a0-4eda-8e4f-2ca38822027c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>c4fe067a-9314-4147-beec-d9f693486881</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f6de65a0-f722-451f-8c59-43dce6be3917</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>76cd5a83-1836-4875-a327-69b1705fb318</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>95ecb201-38a3-491b-84b2-ebb5c91d38fe</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>332f60fe-460b-40f1-932b-89f9a3234662</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3c225188-6af7-4f1f-8969-96e0ab7a0adc</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4722f111-d96b-48f4-933c-d91392d5ec87</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5beb4d33-9531-4075-a1db-999892a29522</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>cb353732-1004-4431-9525-9523876d01c0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4cbc29be-76d9-4369-aa05-c8666ddfe3ee</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3ca62a22-8783-45f8-b241-3335c0cb12c0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b38a083b-ad25-4f51-9461-7c796909f6b0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>